"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[848],{"./packages/core/stories/application/ErrorBoundary.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/core/src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={component:_src__WEBPACK_IMPORTED_MODULE_1__.od,title:"@core/Application/Error Boundary",parameters:{layout:"fullscreen",controls:{exclude:"children"}}},Example={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"min-h-[32rem] relative",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.SH,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_src__WEBPACK_IMPORTED_MODULE_1__.n0,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.Z8,{className:"text-primary justify-center",children:"Title"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.N_,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.od,{...args,errorElement:({error})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{children:["Application error [",error,"]"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{className:"link",children:"Navigate to previous state"})]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:el=>badcall(),children:"Bad state"})})})]})})}),args:{}};Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: args => <div className="min-h-[32rem] relative">\n      <AxViewport>\n        <AxPage>\n          <AxHeader className="text-primary justify-center">Title</AxHeader>\n          <AxContent>\n            <AxErrorBoundary {...args} errorElement={({\n            error\n          }) => <div>\n                  <p>Application error [{error}]</p>\n                  <a className="link">Navigate to previous state</a>\n                </div>}>\n              {/** @ts-expect-error ignore */}\n              <div ref={el => badcall()}>Bad state</div>\n            </AxErrorBoundary>\n          </AxContent>\n        </AxPage>\n      </AxViewport>\n    </div>,\n  args: {}\n}',...Example.parameters?.docs?.source}}};const __namedExportsOrder=["Example"]}}]);
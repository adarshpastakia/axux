"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[7699],{"./node_modules/@arcgis/core/core/workers/request.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{execute:()=>s});var _Error_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/core/Error.js");let t;function s(s,a){let r=a.responseType;r?"array-buffer"!==r&&"blob"!==r&&"json"!==r&&"native"!==r&&"native-request-init"!==r&&"text"!==r&&(r="text"):r="json",a.responseType=r;const n=a.signal;return delete a.signal,globalThis.invokeStaticMessage("request",{url:s,options:a},{signal:n}).then((async o=>{let i,l,u,c,p;if(o.data)if(o.data instanceof ArrayBuffer){if(!("json"!==r&&"text"!==r&&"blob"!==r||(i=new Blob([o.data]),"json"!==r&&"text"!==r||(t||(t=new FileReaderSync),c=t.readAsText(i),"json"!==r)))){try{l=JSON.parse(c||null)}catch(b){const t={...b,url:s,requestOptions:a};throw new _Error_js__WEBPACK_IMPORTED_MODULE_0__.Z("request:server",b.message,t)}if(l.error){const t={...l.error,url:s,requestOptions:a};throw new _Error_js__WEBPACK_IMPORTED_MODULE_0__.Z("request:server",l.error.message,t)}}}else"native"===r&&(o.data.signal=n,u=await fetch(o.data.url,o.data),o.httpStatus=u.status);switch(r){case"blob":p=i;break;case"json":p=l;break;case"native":p=u;break;case"text":p=c;break;default:p=o.data}return{data:p,httpStatus:o.httpStatus,requestOptions:a,ssl:o.ssl,url:s}}))}}}]);
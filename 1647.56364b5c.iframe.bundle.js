"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[1647],{"./node_modules/@arcgis/core/layers/graphics/sources/connections/createConnection.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{createConnection:()=>t});var tslib_es6=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),request=(__webpack_require__("./node_modules/@arcgis/core/geometry.js"),__webpack_require__("./node_modules/@arcgis/core/request.js")),Error=__webpack_require__("./node_modules/@arcgis/core/core/Error.js"),Logger=__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),maybe=__webpack_require__("./node_modules/@arcgis/core/core/maybe.js"),promiseUtils=__webpack_require__("./node_modules/@arcgis/core/core/promiseUtils.js"),urlUtils=__webpack_require__("./node_modules/@arcgis/core/core/urlUtils.js"),subclass=(__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/ensureType.js"),__webpack_require__("./node_modules/@arcgis/core/core/arrayUtils.js"),__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js")),property=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),zscale=__webpack_require__("./node_modules/@arcgis/core/geometry/support/zscale.js"),Evented=__webpack_require__("./node_modules/@arcgis/core/core/Evented.js");let c=class extends Evented.Z.EventedAccessor{get connectionError(){return this.errorString?new Error.Z("stream-connection",this.errorString):null}onFeature(r){this.emit("data-received",r)}};(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],c.prototype,"connectionError",null),c=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.StreamConnection")],c);const n=c;var p,e;(e=p||(p={}))[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED";let u=class extends n{constructor(e){super(),this.errorString=null;const{geometryType:t,spatialReference:o,sourceSpatialReference:s}=e;this._config=e,this._featureZScaler=(0,zscale.k)(t,s,o),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){(0,maybe.pC)(this._websocket)&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if((0,maybe.Wi)(this._websocket))return"disconnected";switch(this._websocket.readyState){case p.CONNECTING:case p.OPEN:return"connected";case p.CLOSING:case p.CLOSED:return"disconnected"}}async _tryCreateWebSocket(e=this._config.source.path,s=1e3,r=0){try{if(this.destroyed)return;const t=(0,urlUtils.fl)(e,this._config.customParameters);this._websocket=await this._createWebSocket(t),this.notifyChange("connectionStatus")}catch(c){const i=s/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(Logger.Z.getLogger(this.declaredClass).error(new Error.Z("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(Logger.Z.getLogger(this.declaredClass).error(new Error.Z("websocket-connection",`Failed to connect. Attempting to reconnect in ${i}s`,c)),await(0,promiseUtils.e4)(s),this._tryCreateWebSocket(e,Math.min(1.5*s,1e3*this._config.maxReconnectionInterval),r+1))}}_createWebSocket(e){return new Promise(((t,o)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=e=>this._onClose(e),s.onerror=e=>this._onError(e),s.onmessage=e=>this._onMessage(e),t(s)},s.onclose=e=>{s.onopen=s.onclose=null,o(e)}}))}async _handshake(e=1e4){const s=this._websocket;if((0,maybe.Wi)(s))return;const n=(0,promiseUtils.hh)(),i=s.onmessage,{filter:a,outFields:l,spatialReference:d}=this._config;return n.timeout(e),s.onmessage=e=>{let r=null;try{r=JSON.parse(e.data)}catch(c){}r&&"object"==typeof r||(Logger.Z.getLogger(this.declaredClass).error(new Error.Z("websocket-connection","Protocol violation. Handshake failed - malformed message",e.data)),n.reject(),this.destroy()),r.spatialReference?.wkid!==d?.wkid&&(Logger.Z.getLogger(this.declaredClass).error(new Error.Z("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${d.wkid}`,e.data)),n.reject(),this.destroy()),"json"!==r.format&&(Logger.Z.getLogger(this.declaredClass).error(new Error.Z("websocket-connection","Protocol violation. Handshake failed - format is not set",e.data)),n.reject(),this.destroy()),a&&r.filter!==a&&Logger.Z.getLogger(this.declaredClass).error(new Error.Z("websocket-connection","Tried to set filter, but server doesn't support it")),l&&r.outFields!==l&&Logger.Z.getLogger(this.declaredClass).error(new Error.Z("websocket-connection","Tried to set outFields, but server doesn't support it")),s.onmessage=i,n.resolve()},s.send(JSON.stringify({filter:a,outFields:l,format:"json",spatialReference:{wkid:d.wkid}})),n.promise}_onMessage(e){try{const o=JSON.parse(e.data);if("featureResult"!==o.type)throw new Error.Z("websocket-connection","Protocol violation - Expected to find message of type 'featureResult'",o);for(const e of o.features)(0,maybe.pC)(this._featureZScaler)&&this._featureZScaler(e.geometry),this.onFeature(e)}catch(r){return Logger.Z.getLogger(this.declaredClass).error(new Error.Z("websocket-connection","Failed to parse message",r)),void this.destroy()}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),Logger.Z.getLogger(this.declaredClass).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),1e3!==e.code&&Logger.Z.getLogger(this.declaredClass).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};(0,tslib_es6._)([(0,property.Cb)()],u.prototype,"connectionStatus",null),(0,tslib_es6._)([(0,property.Cb)()],u.prototype,"errorString",void 0),u=(0,tslib_es6._)([(0,subclass.j)("esri.layers.graphics.sources.connections.WebSocketConnection")],u);var query=__webpack_require__("./node_modules/@arcgis/core/rest/query/operations/query.js"),Query=__webpack_require__("./node_modules/@arcgis/core/rest/support/Query.js"),jsonUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/jsonUtils.js"),SpatialReference=__webpack_require__("./node_modules/@arcgis/core/geometry/SpatialReference.js");const GeoEventConnection_p={maxQueryDepth:5,maxRecordCountFactor:3};let _=class extends u{constructor(e){super({...GeoEventConnection_p,...e})}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||Logger.Z.getLogger(this.declaredClass).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){let t;try{t=this._enrich(JSON.parse(e.data)),(0,maybe.pC)(this._featureZScaler)&&this._featureZScaler(t.geometry)}catch(i){return void Logger.Z.getLogger(this.declaredClass).error(new Error.Z("geoevent-connection","Failed to parse message",i))}this.onFeature(t)}async _fetchServiceDefinition(e){const r={f:"json",...this._config.customParameters},s=(0,request.default)(e.path,{query:r,responseType:"json"}),o=(await s).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:s,token:o}=r,i=this._inferWebSocketBaseUrl(s);return(0,urlUtils.fl)(`${i}/subscribe`,{outSR:""+t.wkid,token:o})}_inferWebSocketBaseUrl(e){if(1===e.length)return e[0];for(const t of e)if(t.includes("wss"))return t;return Logger.Z.getLogger(this.declaredClass).error(new Error.Z("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const o=this._websocket;if((0,maybe.Wi)(o)||(0,maybe.Wi)(e)&&(0,maybe.Wi)(t))return;const n=JSON.stringify({filter:this._serializeFilter(e,t)});let a=!1;const u=(0,promiseUtils.hh)();return o.onmessage=e=>{const t=JSON.parse(e.data);t.filter&&(t.error&&(Logger.Z.getLogger(this.declaredClass).error(new Error.Z("geoevent-connection","Failed to set service filter",t.error)),this._set("errorString",`Could not set service filter - ${t.error}`),u.reject(t.error)),o.onmessage=this._onMessage.bind(this),a=!0,u.resolve())},o.send(n),setTimeout((()=>{a||(this.destroyed||this._websocket!==o||Logger.Z.getLogger(this.declaredClass).error(new Error.Z("geoevent-connection","Server timed out when setting filter")),u.reject())}),1e4),u.promise}_serializeFilter(e,t){const n={};if((0,maybe.Wi)(e)&&(0,maybe.Wi)(t))return n;if((0,maybe.pC)(e)&&e.geometry)try{const t=(0,jsonUtils.im)(e.geometry);if("extent"!==t.type)throw new Error.Z(`Expected extent but found type ${t.type}`);n.geometry=JSON.stringify(t.shiftCentralMeridian())}catch(a){Logger.Z.getLogger(this.declaredClass).error(new Error.Z("geoevent-connection","Encountered an error when setting connection geometryDefinition",a))}return(0,maybe.pC)(e)&&e.where&&"1 = 1"!==e.where&&(n.where=e.where),(0,maybe.pC)(t)&&(n.outFields=t.join(",")),n}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,o=e.attributes[t];if(!this._relatedFeatures.has(o))return Logger.Z.getLogger(this.declaredClass).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:i,geometry:n}=this._relatedFeatures.get(o);for(const r in i)e.attributes[r]=i[r];return n&&(e.geometry=n),e.geometry||e.centroid||Logger.Z.getLogger(this.declaredClass).error(new Error.Z("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const i of o.features)this.onFeature(this._enrich(i))}catch(e){Logger.Z.getLogger(this.declaredClass).error(new Error.Z("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new((await Promise.resolve().then(__webpack_require__.bind(__webpack_require__,"./node_modules/@arcgis/core/layers/FeatureLayer.js"))).default)({url:e}),{capabilities:r}=await t.load(),s=r.query.supportsMaxRecordCountFactor,o=r.query.supportsPagination,i=r.query.supportsCentroid,c=this._config.maxRecordCountFactor,u=t.capabilities.query.maxRecordCount,d=s?u*c:u,l=new Query.Z;if(l.outFields=(0,maybe.Pt)(this._config.outFields,["*"]),l.where=(0,maybe.Pt)((0,maybe.U2)(this._config.filter,"where"),"1=1"),l.returnGeometry=!0,l.returnExceededLimitFeatures=!0,l.outSpatialReference=SpatialReference.Z.fromJSON(this._config.spatialReference),i&&(l.returnCentroid=!0),s&&(l.maxRecordCountFactor=c),o)return l.num=d,t.destroy(),this._queryPages(e,l);const g=await(0,query.executeQuery)(e,l,this._config.sourceSpatialReference);return t.destroy(),g.data}async _queryPages(e,t,r=[],s=0){t.start=(0,maybe.pC)(t.num)?s*t.num:null;const{data:i}=await(0,query.executeQuery)(e,t,this._config.sourceSpatialReference);return i.exceededTransferLimit&&s<this._config.maxQueryDepth?(i.features.forEach((e=>r.push(e))),this._queryPages(e,t,r,s+1)):(r.forEach((e=>i.features.push(e))),i)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const o of r){const e=o.attributes[s];t.set(e,o)}this._relatedFeatures=t}};_=(0,tslib_es6._)([(0,subclass.j)("esri.layers.graphics.sources.connections.GeoEventConnection")],_);const w=_;function t(t,o,r,c,i,s,a,m){const p=0===t.path.indexOf("wss://")||0===t.path.indexOf("ws://"),f={source:t,sourceSpatialReference:o,spatialReference:r,geometryType:c,filter:i,maxReconnectionAttempts:s,maxReconnectionInterval:a,customParameters:m};return p?new u(f):new w(f)}}}]);
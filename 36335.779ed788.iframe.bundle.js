"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[36335],{"./node_modules/@arcgis/core/rest/query/executeRelationshipQuery.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{executeRelationshipQuery:()=>n,executeRelationshipQueryForCount:()=>u});var utils=__webpack_require__("./node_modules/@arcgis/core/rest/utils.js"),request=__webpack_require__("./node_modules/@arcgis/core/request.js"),spatialReferenceUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js"),urlUtils=__webpack_require__("./node_modules/@arcgis/core/rest/operations/urlUtils.js");function r(e,o){const r=e.toJSON();return r.objectIds&&(r.objectIds=r.objectIds.join(",")),r.orderByFields&&(r.orderByFields=r.orderByFields.join(",")),r.outFields&&!o?.returnCountOnly?r.outFields.includes("*")?r.outFields="*":r.outFields=r.outFields.join(","):delete r.outFields,r.outSR&&(r.outSR=(0,spatialReferenceUtils.YX)(r.outSR)),r.dynamicDataSource&&(r.layer=JSON.stringify({source:r.dynamicDataSource}),delete r.dynamicDataSource),r}async function s(e,t,o){const r=await a(e,t,o),s=r.data,n=s.geometryType,d=s.spatialReference,c={};for(const a of s.relatedRecordGroups){const e={fields:void 0,objectIdFieldName:void 0,geometryType:n,spatialReference:d,hasZ:!!s.hasZ,hasM:!!s.hasM,features:a.relatedRecords};if(null!=a.objectId)c[a.objectId]=e;else for(const t of Object.keys(a))"relatedRecords"!==t&&(c[a[t]]=e)}return{...r,data:c}}async function a(t,s,n={},a){const d=(0,urlUtils.z)({...t.query,f:"json",...a,...r(s,a)});return(0,request.A)(t.path+"/queryRelatedRecords",{...n,query:{...n.query,...d}})}var FeatureSet=__webpack_require__("./node_modules/@arcgis/core/rest/support/FeatureSet.js"),RelationshipQuery=__webpack_require__("./node_modules/@arcgis/core/rest/support/RelationshipQuery.js");async function n(e,n,u){n=RelationshipQuery.default.from(n);return s((0,utils.Dl)(e),n,u).then((t=>{const r=t.data,e={};return Object.keys(r).forEach((t=>e[t]=FeatureSet.A.fromJSON(r[t]))),e}))}async function u(r,o,n){o=RelationshipQuery.default.from(o);return async function queryRelatedRecords_n(e,t,o){const r=await a(e,t,o,{returnCountOnly:!0}),s=r.data,n={};for(const a of s.relatedRecordGroups)null!=a.objectId&&(n[a.objectId]=a.count);return{...r,data:n}}((0,utils.Dl)(r),o,{...n}).then((t=>t.data))}}}]);
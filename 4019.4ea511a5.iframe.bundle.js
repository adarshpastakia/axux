"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[4019],{"./node_modules/@arcgis/core/layers/ImageryLayer.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>ImageryLayer_T});var tslib_es6=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),PopupTemplate=__webpack_require__("./node_modules/@arcgis/core/PopupTemplate.js"),maybe=__webpack_require__("./node_modules/@arcgis/core/core/maybe.js"),MultiOriginJSONSupport=__webpack_require__("./node_modules/@arcgis/core/core/MultiOriginJSONSupport.js"),promiseUtils=__webpack_require__("./node_modules/@arcgis/core/core/promiseUtils.js"),property=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),ensureType=(__webpack_require__("./node_modules/@arcgis/core/core/arrayUtils.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/ensureType.js")),subclass=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js"),writer=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/writer.js"),Layer=__webpack_require__("./node_modules/@arcgis/core/layers/Layer.js"),geometry=__webpack_require__("./node_modules/@arcgis/core/geometry.js"),Graphic=__webpack_require__("./node_modules/@arcgis/core/Graphic.js"),rasterRenderers=__webpack_require__("./node_modules/@arcgis/core/rasterRenderers.js"),request=__webpack_require__("./node_modules/@arcgis/core/request.js"),core_Error=__webpack_require__("./node_modules/@arcgis/core/core/Error.js"),jsonMap=__webpack_require__("./node_modules/@arcgis/core/core/jsonMap.js"),lang=__webpack_require__("./node_modules/@arcgis/core/core/lang.js"),Logger=__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),reactiveUtils=__webpack_require__("./node_modules/@arcgis/core/core/reactiveUtils.js"),urlUtils=__webpack_require__("./node_modules/@arcgis/core/core/urlUtils.js"),reader=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/reader.js"),commonProperties=__webpack_require__("./node_modules/@arcgis/core/layers/support/commonProperties.js"),DimensionalDefinition=__webpack_require__("./node_modules/@arcgis/core/layers/support/DimensionalDefinition.js"),JSONSupport=__webpack_require__("./node_modules/@arcgis/core/core/JSONSupport.js"),RasterFunction=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterFunction.js");const e={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var colorRampUtils=__webpack_require__("./node_modules/@arcgis/core/renderers/support/colorRampUtils.js"),stretchRendererUtils=__webpack_require__("./node_modules/@arcgis/core/renderers/support/stretchRendererUtils.js"),SizeVariable=__webpack_require__("./node_modules/@arcgis/core/renderers/visualVariables/SizeVariable.js");const c={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},m={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},p=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function f(e){return p.has(e.type)}function g(t,n){if(!t||!n)return(0,lang.d9)(t||n);const r=(0,lang.d9)(t);if(n.rasterFunctionDefinition){const e=n.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),d(r.rasterFunctionDefinition.arguments,n)}else"none"!==n.functionName.toLowerCase()&&(b(r.functionArguments).Raster=n);return r}function d(e,t){for(const n in e)"raster"===n.toLowerCase()&&("RasterFunctionVariable"===e[n].type?(e[n]=t.rasterFunctionDefinition,e[n].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[n].type&&d(e[n].arguments,t))}function h(t){const n=(0,lang.d9)(e[t.functionName+"Function"]),o=t.functionArguments;for(const e in o)"raster"===e.toLowerCase()?(n.arguments[e]=h(o[e]),n.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(n.arguments[e].value=D(o[e]),n.arguments.ColorSchemeType.value=0):n.arguments[e].value=o[e];return n}function y(e,t){switch(t=t||{},e.type){case"raster-stretch":return function v(e,t){const r=t.convertToRFT,s=new RasterFunction.Z;s.functionName="Stretch";const l=R[stretchRendererUtils.v.toJSON(e.stretchType)],c="u8",m={StretchType:l,Statistics:N(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(m.Min=e.outputMin),null!=e.outputMax&&(m.Max=e.outputMax),l===R.standardDeviation?(m.NumberOfStandardDeviations=e.numberOfStandardDeviations,s.outputPixelType=c):l===R.percentClip?(m.MinPercent=e.minPercent,m.MaxPercent=e.maxPercent,s.outputPixelType=c):l===R.minMax?s.outputPixelType=c:l===R.sigmoid&&(m.SigmoidStrengthLevel=e.sigmoidStrengthLevel),s.functionArguments=m,s.variableName="Raster",e.colorRamp){const u=e.colorRamp,l=new RasterFunction.Z;if(r)l.functionArguments={ColorRamp:(0,colorRampUtils.pM)(u)};else{const n=(0,colorRampUtils.Uh)(u);if(n)l.functionArguments={colorRamp:n};else if(!t.convertColorRampToColormap||"algorithmic"!==u.type&&"multipart"!==u.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),l.functionArguments={colorRamp:t}}else l.functionArguments={Colormap:(0,colorRampUtils.Jw)(u,256)}}return l.variableName="Raster",l.functionName="Colormap",l.functionArguments.Raster=s,r?new RasterFunction.Z({rasterFunctionDefinition:h(l)}):l}return r?new RasterFunction.Z({rasterFunctionDefinition:h(s)}):s}(e,t);case"class-breaks":return function C(e,r){const o=[],a=[],i=[],s=[],u=1e-6,{pixelType:l,rasterAttributeTable:c}=r,m=(0,maybe.Wi)(c)?null:c.features,p=x(c);if(m&&Array.isArray(m)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,n)=>{const r=t.symbol.color;let o;r.a&&m.forEach((a=>{o=a.attributes[e.field],(o>=t.minValue&&o<t.maxValue||n===e.classBreakInfos.length-1&&o>=t.minValue)&&s.push([a.attributes[p],r.r,r.g,r.b])}))}));const t=l?S(s,l):s,o=new RasterFunction.Z;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=t,o.variableName="Raster",r.convertToRFT?new RasterFunction.Z({rasterFunctionDefinition:h(o)}):o}e.classBreakInfos.forEach(((e,t)=>{const n=e.symbol&&e.symbol.color;n.a?(0===t?o.push(e.minValue,e.maxValue+u):o.push(e.minValue+u,e.maxValue+u),a.push(t),s.push([t,n.r,n.g,n.b])):i.push(e.minValue,e.maxValue)}));const f=l?S(s,l):s,g=new RasterFunction.Z;g.functionName="Remap",g.functionArguments={InputRanges:o,OutputValues:a,NoDataRanges:i},g.variableName="Raster";const d=new RasterFunction.Z;return d.functionName="Colormap",d.functionArguments={Colormap:f,Raster:g},r.convertToRFT?new RasterFunction.Z({rasterFunctionDefinition:h(d)}):d}(e,t);case"unique-value":return function A(e,r){const o=[],{pixelType:a,rasterAttributeTable:i}=r,s=(0,maybe.Wi)(i)?null:i.features,u=x(i),l=e.defaultSymbol?.color?.toRgb(),c=e.uniqueValueInfos;if(c)if(s){const t=new Map;c.forEach((e=>{const n=e.value,r=e.symbol.color;null!=n&&r&&r.a&&t.set(String(n),r.toRgb())}));const n=e.field;s.forEach((({attributes:e})=>{const r=String(e[n]),a=e[u];if(t.has(r)){const e=t.get(r);o.push([a,...e])}else l&&o.push([a,...l])}))}else for(let t=0;t<c.length;t++){const e=c[t],n=e.symbol.color,r=+e.value;if(n?.a){if(isNaN(r))return null;o.push([r,n.r,n.g,n.b])}}const m=a&&o.length>0?S(o,a):o,p=new RasterFunction.Z;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=m,p.variableName="Raster",r.convertToRFT?new RasterFunction.Z({rasterFunctionDefinition:h(p)}):p}(e,t);case"raster-colormap":return function F(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:o}=t,a=o?S(r,o):r,i=new RasterFunction.Z;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=a,t.convertToRFT?new RasterFunction.Z({rasterFunctionDefinition:h(i)}):i}(e,t);case"vector-field":return function T(e,t){const r=new RasterFunction.Z;r.functionName="VectorFieldRenderer";const{dataType:o,bandProperties:a}=t,i="vector-uv"===o;let s,u;a&&2===a.length&&(s=a.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),u=a.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==s&&null!==s||(s=0,u=1);const c="arithmetic"===e.rotationType?1:2,p="flow-from"===e.flowRepresentation?0:1,f=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new SizeVariable.Z,g={magnitudeBandID:s,directionBandID:u,isUVComponents:i,referenceSystem:c,massFlowAngleRepresentation:p,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:m[e.style.toLowerCase().replace("-","_")],minimumMagnitude:f.minDataValue,maximumMagnitude:f.maxDataValue,minimumSymbolSize:f.minSize,maximumSymbolSize:f.maxSize};return r.functionArguments=g,t.convertToRFT?new RasterFunction.Z({rasterFunctionDefinition:h(r)}):r}(e,t);case"raster-shaded-relief":return function w(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new RasterFunction.Z;const i=new RasterFunction.Z;i.functionName="Hillshade";const s="traditional"===e.hillshadeType?0:1,u="none"===e.scalingType?1:3,l={HillshadeType:s,SlopeType:u,ZFactor:e.zFactor};return 0===s&&(l.Azimuth=e.azimuth,l.Altitude=e.altitude),3===u&&(l.PSPower=e.pixelSizePower,l.PSZFactor=e.pixelSizeFactor),i.functionArguments=l,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",r?l.ColorRamp=(0,colorRampUtils.pM)(e.colorRamp):l.Colormap=(0,colorRampUtils.Jw)(e.colorRamp,256)),r?new RasterFunction.Z({rasterFunctionDefinition:h(i)}):i}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function b(e){const t=e?.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?b(t.functionArguments):e}const R={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function S(e,t){const n=c[String(t).toLowerCase()];return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function x(e){if((0,maybe.Wi)(e))return;const{fields:n}=e,r=n&&n.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}function N(e){const t=[];return e.forEach((e=>{const n=e;if(Array.isArray(n))t.push(n);else{if(null==n.min||null==n.max)return;const e=[n.min,n.max,n.avg||0,n.stddev||0];t.push(e)}})),t}function D(e){const t=[],n=[];return e.forEach((e=>{t.push(e[0]),n.push((0,colorRampUtils.io)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:n}}var u,cast=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/cast.js"),Point=__webpack_require__("./node_modules/@arcgis/core/geometry/Point.js");const MosaicRule_m=(0,jsonMap.w)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),MosaicRule_h=(0,jsonMap.w)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let MosaicRule_w=u=class extends JSONSupport.wq{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function M(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return MosaicRule_h.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const o=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),i=o||(r?MosaicRule_m.toJSON(r):null);return MosaicRule_m.fromJSON(i)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new u({ascending:this.ascending,itemRenderingRule:(0,lang.d9)(this.itemRenderingRule),lockRasterIds:(0,lang.d9)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,lang.d9)(this.multidimensionalDefinition),objectIds:(0,lang.d9)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,lang.d9)(this.viewpoint),where:this.where})}};(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],MosaicRule_w.prototype,"ascending",void 0),(0,tslib_es6._)([(0,reader.r)("ascending",["ascending","sortAscending"])],MosaicRule_w.prototype,"readAscending",null),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction.Z,json:{write:!0}})],MosaicRule_w.prototype,"itemRenderingRule",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],MosaicRule_w.prototype,"lockRasterIds",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{type:MosaicRule_h.jsonValues,write:{target:"mosaicMethod",writer:MosaicRule_h.write}}})],MosaicRule_w.prototype,"method",void 0),(0,tslib_es6._)([(0,reader.r)("method",["mosaicMethod","defaultMosaicMethod"])],MosaicRule_w.prototype,"readMethod",null),(0,tslib_es6._)([(0,property.Cb)({type:[DimensionalDefinition.Z],json:{write:!0}})],MosaicRule_w.prototype,"multidimensionalDefinition",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{name:"fids",write:!0}})],MosaicRule_w.prototype,"objectIds",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{type:MosaicRule_m.jsonValues,read:{reader:MosaicRule_m.read},write:{target:"mosaicOperation",writer:MosaicRule_m.write}}})],MosaicRule_w.prototype,"operation",void 0),(0,tslib_es6._)([(0,reader.r)("operation",["mosaicOperation","mosaicOperator"])],MosaicRule_w.prototype,"readOperation",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],MosaicRule_w.prototype,"sortField",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],MosaicRule_w.prototype,"sortValue",void 0),(0,tslib_es6._)([(0,cast.p)("sortValue")],MosaicRule_w.prototype,"castSortValue",null),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],MosaicRule_w.prototype,"viewpoint",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],MosaicRule_w.prototype,"where",void 0),MosaicRule_w=u=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.MosaicRule")],MosaicRule_w);const MosaicRule_y=MosaicRule_w;var rasterEnums=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterEnums.js");let ExportImageServiceParameters_y=class extends JSONSupport.wq{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}get bandIds(){return this.layer.bandIds}set bandIds(e){this.layer&&(this.layer.bandIds=e)}get compressionQuality(){return this.layer?.compressionQuality}set compressionQuality(e){this.layer&&(this.layer.compressionQuality=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[r]=e)}get compressionTolerance(){return this.layer?.compressionTolerance}set compressionTolerance(e){this.layer&&(this.layer.compressionTolerance=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer?.interpolation}set interpolation(e){this.layer&&(this.layer.interpolation=e)}get noData(){return this.layer?.noData}set noData(e){this.layer&&(this.layer.noData=e)}get noDataInterpretation(){return this.layer?.noDataInterpretation}set noDataInterpretation(e){this.layer&&(this.layer.noDataInterpretation=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new MosaicRule_y({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,o=!e.format||e.format.includes("jpg")||e.format.includes("png");t=this._addResampleRasterFunction(t);const i=e.multidimensionalSubset?.areaOfInterest;return i&&(t=this._addClipFunction(t,i)),o&&!r&&"vector-field"!==e.renderer?.type&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:r,renderer:o}=t;return e=e||t.renderingRule,o&&f(o)?g(y(o,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:r.keyProperties?.BandProperties,convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:r.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,r=this.layer.serviceRasterInfo.pixelSize;let o=new RasterFunction.Z({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:r}});return o=e?.rasterFunctionDefinition?new RasterFunction.Z({rasterFunctionDefinition:h(o)}):o,g(o,e)}_addClipFunction(e,t){return g(new RasterFunction.Z({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}}),e)}};(0,tslib_es6._)([(0,property.Cb)()],ExportImageServiceParameters_y.prototype,"layer",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"adjustAspectRatio",void 0),(0,tslib_es6._)([(0,writer.c)("adjustAspectRatio")],ExportImageServiceParameters_y.prototype,"writeAdjustAspectRatio",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"bandIds",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"compression",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"compressionQuality",null),(0,tslib_es6._)([(0,writer.c)("compressionQuality")],ExportImageServiceParameters_y.prototype,"writeCompressionQuality",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"compressionTolerance",null),(0,tslib_es6._)([(0,writer.c)("compressionTolerance")],ExportImageServiceParameters_y.prototype,"writeCompressionTolerance",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"format",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:{reader:rasterEnums.c.read},write:{writer:rasterEnums.c.write}}})],ExportImageServiceParameters_y.prototype,"interpolation",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"noData",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{read:{reader:rasterEnums.k.read},write:{writer:rasterEnums.k.write}}})],ExportImageServiceParameters_y.prototype,"noDataInterpretation",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"pixelType",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"lercVersion",void 0),(0,tslib_es6._)([(0,writer.c)("lercVersion")],ExportImageServiceParameters_y.prototype,"writeLercVersion",null),(0,tslib_es6._)([(0,property.Cb)({type:Number})],ExportImageServiceParameters_y.prototype,"version",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"mosaicRule",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ExportImageServiceParameters_y.prototype,"renderingRule",null),ExportImageServiceParameters_y=(0,tslib_es6._)([(0,subclass.j)("esri.layers.mixins.ExportImageServiceParameters")],ExportImageServiceParameters_y);var Field=__webpack_require__("./node_modules/@arcgis/core/layers/support/Field.js"),FieldsIndex=__webpack_require__("./node_modules/@arcgis/core/layers/support/FieldsIndex.js"),MultidimensionalSubset=__webpack_require__("./node_modules/@arcgis/core/layers/support/MultidimensionalSubset.js"),PixelBlock=__webpack_require__("./node_modules/@arcgis/core/layers/support/PixelBlock.js"),RasterInfo=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterInfo.js"),RasterJobHandler=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterJobHandler.js"),multidimensionalUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/multidimensionalUtils.js"),RasterCodec=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/RasterCodec.js"),vectorFieldUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/vectorFieldUtils.js"),rasterRendererHelper=__webpack_require__("./node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js"),RasterSymbolizer=__webpack_require__("./node_modules/@arcgis/core/renderers/support/RasterSymbolizer.js"),normalizeUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/normalizeUtils.js"),utils=__webpack_require__("./node_modules/@arcgis/core/rest/utils.js"),SpatialReference=__webpack_require__("./node_modules/@arcgis/core/geometry/SpatialReference.js");let ImageAngleResult_p=class extends JSONSupport.wq{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],ImageAngleResult_p.prototype,"north",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],ImageAngleResult_p.prototype,"up",void 0),(0,tslib_es6._)([(0,property.Cb)({type:SpatialReference.Z,json:{write:!0}})],ImageAngleResult_p.prototype,"spatialReference",void 0),ImageAngleResult_p=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImageAngleResult")],ImageAngleResult_p);const i=ImageAngleResult_p;var FeatureSet=__webpack_require__("./node_modules/@arcgis/core/rest/support/FeatureSet.js");let ImageIdentifyResult_p=class extends JSONSupport.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"catalogItemVisibilities",void 0),(0,tslib_es6._)([(0,property.Cb)({type:FeatureSet.default,json:{write:!0}})],ImageIdentifyResult_p.prototype,"catalogItems",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],ImageIdentifyResult_p.prototype,"location",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"name",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"objectId",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"processedValues",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"properties",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyResult_p.prototype,"value",void 0),ImageIdentifyResult_p=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImageIdentifyResult")],ImageIdentifyResult_p);const ImageIdentifyResult_l=ImageIdentifyResult_p;let t=class extends JSONSupport.wq{constructor(){super(...arguments),this.geometries=null}};(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],t.prototype,"geometries",void 0),t=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImagePixelLocationResult")],t);const ImagePixelLocationResult_p=t;let ImageSample_i=class extends JSONSupport.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageSample_i.prototype,"attributes",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],ImageSample_i.prototype,"location",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageSample_i.prototype,"locationId",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageSample_i.prototype,"rasterId",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageSample_i.prototype,"resolution",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageSample_i.prototype,"pixelValue",void 0),ImageSample_i=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImageSample")],ImageSample_i);const ImageSample_p=ImageSample_i;let ImageSampleResult_p=class extends JSONSupport.wq{constructor(){super(...arguments),this.samples=null}};(0,tslib_es6._)([(0,property.Cb)({type:[ImageSample_p],json:{write:!0}})],ImageSampleResult_p.prototype,"samples",void 0),ImageSampleResult_p=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImageSampleResult")],ImageSampleResult_p);const ImageSampleResult_c=ImageSampleResult_p;function imageService_u(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const n=[];null!=t.start&&n.push(t.start),null==t.end||n.includes(t.end)||n.push(t.end),e.time=n.join(",")}}async function imageService_p(e,i,r){const m=(0,utils.en)(e),c=i.geometry?[i.geometry]:[],l=await(0,normalizeUtils.aX)(c),p=i.toJSON();imageService_u(p);const f=l&&l[0];(0,maybe.pC)(f)&&(p.geometry=f.toJSON());const g=(0,utils.cv)({...m.query,f:"json",...p});return(0,utils.lA)(g,r)}async function imageService_S(i,m,c){const l=(0,utils.en)(i),u=m.geometry?[m.geometry]:[];return(0,normalizeUtils.aX)(u).then((n=>{const o=m.toJSON(),i=n&&n[0];(0,maybe.pC)(i)&&(o.geometry=JSON.stringify(i.toJSON()));const r=(0,utils.cv)({...l.query,f:"json",...o}),u=(0,utils.lA)(r,c);return(0,request.default)(l.path+"/identify",u)})).then((e=>ImageIdentifyResult_l.fromJSON(e.data)))}function imageService_h(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:n}=t;return null!=e?n?{icsid:e,icsns:n}:{icsid:e}:{ics:t}}return e.toJSON()}function imageService_R(e,t){const n=imageService_h(e),{icsid:o,icsns:a,wkid:s}=n;return null!=o?null==a||t?.toLowerCase().includes("/"+a.toLowerCase()+"/")?`0:${o}`:JSON.stringify(n):s?s.toString():JSON.stringify(n)}__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/layers/support/source/DataLayerSource.js");var ImageAngleParameters_n,executeQueryJSON=__webpack_require__("./node_modules/@arcgis/core/rest/query/executeQueryJSON.js"),Extent=(__webpack_require__("./node_modules/@arcgis/core/config.js"),__webpack_require__("./node_modules/@arcgis/core/kernel.js"),__webpack_require__("./node_modules/@arcgis/core/core/unitUtils.js"),__webpack_require__("./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js"),__webpack_require__("./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js"),__webpack_require__("./node_modules/@arcgis/core/geometry/Extent.js")),Multipoint=(__webpack_require__("./node_modules/@arcgis/core/geometry/Geometry.js"),__webpack_require__("./node_modules/@arcgis/core/geometry/Multipoint.js")),Polygon=__webpack_require__("./node_modules/@arcgis/core/geometry/Polygon.js"),Query=(__webpack_require__("./node_modules/@arcgis/core/geometry/Polyline.js"),__webpack_require__("./node_modules/@arcgis/core/core/pbf.js"),__webpack_require__("./node_modules/@arcgis/core/rest/support/Query.js")),executeForCount=(__webpack_require__("./node_modules/@arcgis/core/rest/query/support/AttachmentInfo.js"),__webpack_require__("./node_modules/@arcgis/core/rest/support/AttachmentQuery.js"),__webpack_require__("./node_modules/@arcgis/core/rest/query/executeForCount.js")),executeForIds=__webpack_require__("./node_modules/@arcgis/core/rest/query/executeForIds.js"),fetchRasterInfo=(__webpack_require__("./node_modules/@arcgis/core/rest/support/RelationshipQuery.js"),__webpack_require__("./node_modules/@arcgis/core/rest/support/TopFeaturesQuery.js"),__webpack_require__("./node_modules/@arcgis/core/rest/imageService/fetchRasterInfo.js")),RasterStorageInfo=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js");let ImageAngleParameters_m=ImageAngleParameters_n=class extends JSONSupport.wq{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new ImageAngleParameters_n((0,lang.d9)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,tslib_es6._)([(0,property.Cb)({type:[String],json:{name:"angleName",write:!0}})],ImageAngleParameters_m.prototype,"angleNames",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],ImageAngleParameters_m.prototype,"point",void 0),(0,tslib_es6._)([(0,property.Cb)({type:SpatialReference.Z,json:{write:!0}})],ImageAngleParameters_m.prototype,"spatialReference",void 0),(0,tslib_es6._)([(0,property.Cb)({type:ensureType.z8,json:{write:!0}})],ImageAngleParameters_m.prototype,"rasterId",void 0),ImageAngleParameters_m=ImageAngleParameters_n=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImageAngleParameters")],ImageAngleParameters_m);const l=ImageAngleParameters_m;var ImageHistogramParameters_y,TimeExtent=__webpack_require__("./node_modules/@arcgis/core/TimeExtent.js"),jsonUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/jsonUtils.js");let j=ImageHistogramParameters_y=class extends JSONSupport.wq{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,r,t){null!=e&&(r.geometryType=(0,jsonUtils.Ji)(e),r[t]=e.toJSON())}clone(){return new ImageHistogramParameters_y((0,lang.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,tslib_es6._)([(0,property.Cb)({types:geometry.qM,json:{read:jsonUtils.im}})],j.prototype,"geometry",void 0),(0,tslib_es6._)([(0,writer.c)("geometry")],j.prototype,"writeGeometry",null),(0,tslib_es6._)([(0,property.Cb)({type:MosaicRule_y,json:{write:!0}})],j.prototype,"mosaicRule",void 0),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction.Z,json:{write:!0}})],j.prototype,"renderingRule",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],j.prototype,"pixelSize",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],j.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)({type:TimeExtent.Z,json:{read:{source:"time"},write:{target:"time"}}})],j.prototype,"timeExtent",void 0),j=ImageHistogramParameters_y=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImageHistogramParameters")],j);const ImageHistogramParameters_d=j;var ImageIdentifyParameters_y;let ImageIdentifyParameters_c=ImageIdentifyParameters_y=class extends JSONSupport.wq{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,jsonUtils.Ji)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=MosaicRule_y.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=RasterFunction.Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const o=(0,maybe.pC)(e.start)?e.start.getTime():null,s=(0,maybe.pC)(e.end)?e.end.getTime():null;t[r]=null!=o?null!=s?`${o},${s}`:`${o}`:null}}clone(){return new ImageIdentifyParameters_y((0,lang.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyParameters_c.prototype,"geometry",void 0),(0,tslib_es6._)([(0,writer.c)("geometry")],ImageIdentifyParameters_c.prototype,"writeGeometry",null),(0,tslib_es6._)([(0,property.Cb)({type:MosaicRule_y,json:{write:!0}})],ImageIdentifyParameters_c.prototype,"mosaicRule",null),(0,tslib_es6._)([(0,writer.c)("mosaicRule")],ImageIdentifyParameters_c.prototype,"writeMosaicRule",null),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction.Z,json:{write:!0}})],ImageIdentifyParameters_c.prototype,"renderingRule",null),(0,tslib_es6._)([(0,writer.c)("renderingRule")],ImageIdentifyParameters_c.prototype,"writeRenderingRule",null),(0,tslib_es6._)([(0,property.Cb)({type:[RasterFunction.Z],json:{write:!0}})],ImageIdentifyParameters_c.prototype,"renderingRules",void 0),(0,tslib_es6._)([(0,writer.c)("renderingRules")],ImageIdentifyParameters_c.prototype,"writeRenderingRules",null),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],ImageIdentifyParameters_c.prototype,"pixelSize",void 0),(0,tslib_es6._)([(0,writer.c)("pixelSize")],ImageIdentifyParameters_c.prototype,"writePixelSize",null),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],ImageIdentifyParameters_c.prototype,"returnGeometry",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],ImageIdentifyParameters_c.prototype,"returnCatalogItems",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],ImageIdentifyParameters_c.prototype,"returnPixelValues",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],ImageIdentifyParameters_c.prototype,"maxItemCount",void 0),(0,tslib_es6._)([(0,property.Cb)({type:TimeExtent.Z,json:{write:{target:"time"}}})],ImageIdentifyParameters_c.prototype,"timeExtent",void 0),(0,tslib_es6._)([(0,writer.c)("timeExtent")],ImageIdentifyParameters_c.prototype,"writeTimeExtent",null),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyParameters_c.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageIdentifyParameters_c.prototype,"viewId",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],ImageIdentifyParameters_c.prototype,"processAsMultidimensional",void 0),ImageIdentifyParameters_c=ImageIdentifyParameters_y=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImageIdentifyParameters")],ImageIdentifyParameters_c);const ImageIdentifyParameters_d=ImageIdentifyParameters_c;var ImagePixelLocationParameters_m;let ImagePixelLocationParameters_c=ImagePixelLocationParameters_m=class extends JSONSupport.wq{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(r,e,o){e.geometries={geometryType:"esriGeometryPoint",geometries:r.map((r=>r.toJSON()))}}clone(){return new ImagePixelLocationParameters_m({geometries:this.geometries?.map((r=>r.clone()))??[],rasterId:this.rasterId})}};(0,tslib_es6._)([(0,property.Cb)({type:[Point.Z],json:{write:!0}})],ImagePixelLocationParameters_c.prototype,"geometries",void 0),(0,tslib_es6._)([(0,writer.c)("geometries")],ImagePixelLocationParameters_c.prototype,"writeGeometry",null),(0,tslib_es6._)([(0,property.Cb)({type:ensureType.z8,json:{write:!0}})],ImagePixelLocationParameters_c.prototype,"rasterId",void 0),ImagePixelLocationParameters_c=ImagePixelLocationParameters_m=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImagePixelLocationParameters")],ImagePixelLocationParameters_c);const ImagePixelLocationParameters_a=ImagePixelLocationParameters_c;var ImageSampleParameters_d;let ImageSampleParameters_j=ImageSampleParameters_d=class extends JSONSupport.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(t,e,o){null!=t&&(e.geometryType=(0,jsonUtils.Ji)(t),e[o]=t.toJSON())}set locations(t){if(t?.length){const e=new Multipoint.Z({spatialReference:t[0].spatialReference});e.points=t.map((t=>[t.x,t.y])),this._set("locations",t),this.geometry=e}}clone(){return new ImageSampleParameters_d((0,lang.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,tslib_es6._)([(0,property.Cb)({types:geometry.qM,json:{read:jsonUtils.im}})],ImageSampleParameters_j.prototype,"geometry",void 0),(0,tslib_es6._)([(0,writer.c)("geometry")],ImageSampleParameters_j.prototype,"writeGeometry",null),(0,tslib_es6._)([(0,property.Cb)()],ImageSampleParameters_j.prototype,"locations",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{type:rasterEnums.c.jsonValues,read:rasterEnums.c.read,write:rasterEnums.c.write}})],ImageSampleParameters_j.prototype,"interpolation",void 0),(0,tslib_es6._)([(0,property.Cb)({type:MosaicRule_y,json:{write:!0}})],ImageSampleParameters_j.prototype,"mosaicRule",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[String],json:{write:!0}})],ImageSampleParameters_j.prototype,"outFields",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Point.Z,json:{write:!0}})],ImageSampleParameters_j.prototype,"pixelSize",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],ImageSampleParameters_j.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{write:!0}})],ImageSampleParameters_j.prototype,"returnFirstValueOnly",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],ImageSampleParameters_j.prototype,"sampleDistance",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],ImageSampleParameters_j.prototype,"sampleCount",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Number,json:{write:!0}})],ImageSampleParameters_j.prototype,"sliceId",void 0),(0,tslib_es6._)([(0,property.Cb)({type:TimeExtent.Z,json:{read:{source:"time"},write:{target:"time"}}})],ImageSampleParameters_j.prototype,"timeExtent",void 0),ImageSampleParameters_j=ImageSampleParameters_d=(0,tslib_es6._)([(0,subclass.j)("esri.rest.support.ImageSampleParameters")],ImageSampleParameters_j);const ImageSampleParameters_h=ImageSampleParameters_j;var dataUtils=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js");const Se=(0,jsonMap.w)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),ve=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),be=(0,property.Eg)(ensureType.q9,{min:0,max:255});const xe=a=>{let y=class extends a{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new ExportImageServiceParameters_y({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||(0,maybe.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||(0,maybe.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?MosaicRule_y.fromJSON(t):null}get fieldsIndex(){return this.fields?new FieldsIndex.Z(this.fields):null}set format(e){e&&ve.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=MosaicRule_y.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?MosaicRule_y.fromJSON(r):this._isMosaicRuleSupported(t)?MosaicRule_y.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new MosaicRule_y({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}get multidimensionalInfo(){return(0,maybe.pC)(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=be(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return(0,urlUtils.mN)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,r){const i=t?.layerDefinition?.drawingInfo?.renderer,n=(0,rasterRenderers.ij)(i,r);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!i.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),f(n)||Logger.Z.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix||"Raster.",t=new Field.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new Field.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new Field.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let s=this.fields?(0,lang.d9)(this.fields):[];s.push(r),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&(0,maybe.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&s.push(i),(0,maybe.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{s.push(new Field.Z({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(s.push(new Field.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),s.push(new Field.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:n}=this.rasterInfo??{};if((0,maybe.pC)(n)){const t=n.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=(0,lang.d9)(t);return r.name=e+t.name,r}));s=s.concat(t)}return s}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=RasterFunction.Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?RasterFunction.Z.fromJSON({rasterFunctionDefinition:t.renderingRule}):RasterFunction.Z.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){const i=e.toJSON();i.rasterFunctionDefinition?t[r]=i.rasterFunctionDefinition:t[r]=i}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?SpatialReference.Z.fromJSON(r):null}readPixelType(e){return Se.fromJSON(e)||e}writePixelType(e,t,r){((0,maybe.Wi)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=Se.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;const{renderer:i,symbolizer:s,pixelFilter:n,bandIds:o}=this;if(!this._isPicture()&&i&&s&&!n){const n=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(i.toJSON()),a=this._rasterJobHandler.instance;if(a){n&&(s.bind(),await a.updateSymbolizer(s,t),this._cachedRendererJson=i.toJSON());const l=await a.symbolize({bandIds:o,...e},t);r={extent:e.extent,pixelBlock:l}}else r={extent:e.extent,pixelBlock:s.symbolize({bandIds:o,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new core_Error.Z("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,ensureType.TJ)(l,e).clone(),async function imageService_f(n,r,m){const c=r.toJSON();(0,maybe.pC)(c.angleName)&&(c.angleName=c.angleName.join(",")),(0,maybe.pC)(r.point)&&r.point.spatialReference?.imageCoordinateSystem&&(c.point.spatialReference=imageService_h(r.point.spatialReference)),(0,maybe.pC)(r.spatialReference)&&r.spatialReference.imageCoordinateSystem&&(c.spatialReference=imageService_R(r.spatialReference));const u=(0,utils.en)(n),p=(0,utils.cv)({...u.query,f:"json",...c}),f=(0,utils.lA)(p,m),{data:g}=await(0,request.default)(`${u.path}/computeAngles`,f);return g.spatialReference=g.spatialReference?null!=g.spatialReference.geodataXform?new SpatialReference.Z({wkid:0,imageCoordinateSystem:g.spatialReference}):SpatialReference.Z.fromJSON(g.spatialReference):null,"NaN"===g.north&&(g.north=null),"NaN"===g.up&&(g.up=null),new i(g)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new core_Error.Z("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,ensureType.TJ)(ImagePixelLocationParameters_a,e).clone(),async function imageService_g(t,n,i){const r=n.toJSON(),{geometries:c}=n;if(c)for(let e=0;e<c.length;e++)c[e].spatialReference?.imageCoordinateSystem&&(r.geometries.geometries[e].spatialReference=imageService_h(c[e].spatialReference));const l=(0,utils.en)(t),u=(0,utils.cv)({...l.query,f:"json",...r}),p=(0,utils.lA)(u,i),{data:f}=await(0,request.default)(`${l.path}/computePixelLocation`,p);return ImagePixelLocationResult_p.fromJSON(f)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new core_Error.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,ensureType.TJ)(ImageHistogramParameters_d,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),async function imageService_d(t,n,a){const s=await imageService_p(t,n,a),i=(0,utils.en)(t),{data:r}=await(0,request.default)(`${i.path}/computeHistograms`,s);return{histograms:r.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new core_Error.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,ensureType.TJ)(ImageHistogramParameters_d,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),async function imageService_y(t,n,a){const s=await imageService_p(t,n,a),i=(0,utils.en)(t),{data:r}=await(0,request.default)(`${i.path}/computeStatisticsHistograms`,s),{statistics:m}=r;return m?.length&&m.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:m,histograms:r.histograms}}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return(0,maybe.pC)(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}async fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)throw new core_Error.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this.generateRasterInfo(this.renderingRule,{signal:i.signal});e&&(this.rasterInfo=e)}const s=this.getExportImageServiceParameters(e,t,r,i.timeExtent);if(null==s){if(i.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,{imageOrCanvasElement:e}}const s=(this.bandIds?.length||this.rasterInfo?.bandCount)??0,n=t*r,o=this.rasterInfo?.pixelType??"unknown",a=[];for(let e=0;e<s;e++)a.push(PixelBlock.Z.createEmptyBand(o,n));return{pixelData:{pixelBlock:new PixelBlock.Z({width:t,height:r,pixels:a,mask:new Uint8Array(n),pixelType:o}),extent:e}}}const n={imageServiceParameters:s,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}fetchKeyProperties(e){return(0,request.default)(S(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new core_Error.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,request.default)(S(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>FeatureSet.default.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return async function n(n,m,p){const f=(0,utils.en)(n),u=(0,utils.cv)({...f?.query,f:"json"}),h=(0,utils.lA)(u,p),d=`${f?.path}/${m}/info`,c=(0,request.default)(`${d}`,h),g=(0,request.default)(`${d}/keyProperties`,h),x=await Promise.allSettled([c,g]),y="fulfilled"===x[0].status?x[0].value.data:null,v="fulfilled"===x[1].status?x[1].value.data:null;let P=null;y.statistics?.length&&(P=y.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const S=Extent.Z.fromJSON(y.extent),j=Math.ceil(S.width/y.pixelSizeX-.1),w=Math.ceil(S.height/y.pixelSizeY-.1),b=S.spatialReference,k=new Point.Z({x:y.pixelSizeX,y:y.pixelSizeY,spatialReference:b}),z=y.histograms?.length?y.histograms:null,L=new RasterStorageInfo.Z({origin:y.origin,blockWidth:y.blockWidth,blockHeight:y.blockHeight,firstPyramidLevel:y.firstPyramidLevel,maximumPyramidLevel:y.maxPyramidLevel});return new RasterInfo.Z({width:j,height:w,bandCount:y.bandCount,extent:S,spatialReference:b,pixelSize:k,pixelType:y.pixelType.toLowerCase(),statistics:P,histograms:z,keyProperties:v,storageInfo:L})}(S(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,request.default)(S(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await(0,request.default)(S(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!s||!s.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?(0,request.default)(S(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=s.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},u=(0,request.default)(S(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),c=(s.xmin+s.xmax)/2,m=(s.ymax-s.ymin)/6,d=s.ymin+m,h=[];for(let n=0;n<5;n++)h.push({x:c,y:d+m*n});const f={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},y=(0,request.default)(S(this.parsedUrl)+"/project",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([o,u,y]);let R=g[0].ipxf;if(null==R){const e=i.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(R={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const v=Extent.Z.fromJSON(g[1]&&g[1].geometries&&g[1].geometries[0]);v&&(v.spatialReference=new SpatialReference.Z({wkid:0,imageCoordinateSystem:i}));const b=g[2].geometries?g[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],I=b.length;if(I<3)return{ics:i,icsToPixelTransform:R,icsExtent:v,northDirection:null};let x=0,w=0,_=0,F=0;for(let n=0;n<I;n++)x+=b[n].x,w+=b[n].y,_+=b[n].x*b[n].x,F+=b[n].x*b[n].y;const D=(I*F-x*w)/(I*_-x*x);let j=0;const T=b[4].x>b[0].x,P=b[4].y>b[0].y;return D===1/0?j=P?90:270:0===D?j=T?0:180:D>0?j=T?180*Math.atan(D)/Math.PI:180*Math.atan(D)/Math.PI+180:D<0&&(j=P?180+180*Math.atan(D)/Math.PI:360+180*Math.atan(D)/Math.PI),{ics:i,icsToPixelTransform:R,icsExtent:v,northDirection:j}}async generateRasterInfo(e,t){if(this.serviceRasterInfo&&(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const r=function Ie(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi)?.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return t?t.join("/"):null}(e);if(!r)return null;if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const s=imageService_R((e=e.clone().shiftCentralMeridian()).spatialReference,S(this.parsedUrl));this.pixelType!==this.serviceRasterInfo?.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const n=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:a}=n;let{renderingRule:l}=n;const u=this.renderingRule?.rasterFunctionDefinition,c=!this.renderer||"raster-stretch"===this.renderer.type;if(o?.length&&this._hasRenderingRule(this.renderingRule)&&!u&&c){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===l.rasterFunction)e.rasterFunctionArguments.Raster=l.rasterFunctionArguments.Raster,l.rasterFunctionArguments.Raster=e;else if("Colormap"===l.rasterFunction){const t=l.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,l.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=l,l=e;n.bandIds=void 0}else n.bandIds=o?.join(",");a instanceof Array&&a.length>0&&(n.noData=a.join(","));const m=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;n.mosaicRule=(0,maybe.pC)(m)?JSON.stringify(m):null;const{multidimensionalSubset:d}=this;if(d&&(0,maybe.pC)(m)&&m.multidimensionalDefinition&&(0,multidimensionalUtils.nb)(m.multidimensionalDefinition,d,!0))return null;n.renderingRule=this._getRenderingRuleString(RasterFunction.Z.fromJSON(l));const h={};if(i){const{start:e,end:t}=i.toJSON();let r;if(e&&t&&e===t?(h.time=""+e,r=[e]):null==e&&null==t||(h.time=`${e??"null"},${t??"null"}`,r=null!=e&&null!=t?[e,t]:[e??t]),r&&d){const e=d.dimensions.find((({name:e})=>"StdTime"===e));if(2===r.length&&e.extent.length){if(r[0]=Math.max(r[0],e.extent[0]),r[1]=Math.min(r[1],e.extent[1]??e.extent[0]),r[1]<r[0])return null;h.time=r.join()}const t=new DimensionalDefinition.Z({variableName:"",dimensionName:"StdTime",isSlice:1===r.length,values:r});if((0,multidimensionalUtils.nb)([t],d,!0))return null}}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:s,imageSR:s,size:t+","+r,...n,...h}}async getSamples(e,t){if(!(await this._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new core_Error.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,ensureType.TJ)(ImageSampleParameters_h,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),async function imageService_N(i,r,m){const l=r.toJSON();imageService_u(l),l.outFields?.length&&(l.outFields=l.outFields.join(","));const p=(await(0,normalizeUtils.aX)(r.geometry))?.[0];(0,maybe.pC)(p)&&(l.geometry=p.toJSON());const f=(0,utils.en)(i),g=(0,utils.cv)({...f.query,f:"json",...l}),y=(0,utils.lA)(g,m),{data:d}=await(0,request.default)(`${f.path}/getSamples`,y),N=d?.samples?.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return ImageSampleResult_c.fromJSON({samples:N})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new core_Error.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,ensureType.TJ)(ImageIdentifyParameters_d,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;if(s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=(0,maybe.Wg)(t)}return r&&null==e.raster&&(e.raster=r),imageService_S(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Query.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,executeQueryJSON.e)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,executeForIds.G)(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,executeForCount.P)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new core_Error.Z("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let a=!1,l=null,u=null;const m="raster.servicepixelvalue",d=this._rasterFunctionNamesIndex;if((0,maybe.pC)(e.outFields)&&(a=e.outFields.some((e=>!e.toLowerCase().includes(m))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(m)&&e.length>m.length)).map((e=>{const t=e.slice(m.length+1);return[this._updateRenderingRulesFunctionName(t,d),t]}));l=t.map((e=>new RasterFunction.Z({functionName:e[0]}))),u=t.map((e=>e[1]));const{renderingRule:r}=this;0===l.length?r?.functionName?(l.push(r),u.push(r.functionName)):l=null:r?.functionName&&!l.some((e=>e.functionName===r.functionName))&&(l.push(r),u.push(r.functionName))}const h=(0,maybe.Wi)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f=e.timeExtent||this.timeExtent,y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,f),g=this._getQueryParams({geometry:e.geometry,timeExtent:f,mosaicRule:y,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:a,returnGeometry:h,raster:this.raster,maxItemCount:s?1:null});delete g.f;const R=new ImageIdentifyParameters_d(g);try{await this.generateRasterInfo(this.renderingRule);const r=await imageService_S(this.url,R,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,o=null!=r.value&&r.value.toLowerCase().includes("nodata");if(!a||h||!r?.catalogItems?.features.length||!n&&o)return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s});const l=this.objectIdField||"ObjectId",c=r.catalogItems?.features??[],m=c.map((e=>e.attributes?.[l])),d=new Query.Z({objectIds:m,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),f=await this.queryRasters(d);return f?.features?.length&&f.features.forEach((t=>{c.forEach((r=>{r.attributes[l]===t.attributes[l]&&(r.geometry=new Polygon.Z(t.geometry),(0,maybe.pC)(e.outSpatialReference)&&(r.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s})}catch{throw new core_Error.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,request.default)(S(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),i=(0,request.default)(S(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:s[0]||null,histograms:s[1]||null}}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):(0,dataUtils.GE)(e.meshType,e.simulationSettings,e.flowData,(0,maybe.pC)(t.signal)?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.multidimensionalInfo;return(0,multidimensionalUtils.jj)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=(0,maybe.pC)(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):(0,fetchRasterInfo.g)(S(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,i,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),Logger.Z.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([(0,reactiveUtils.YP)((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;t&&(0,maybe.pC)(t.multidimensionalInfo)&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if((0,maybe.Wi)(e)||(0,maybe.Wi)(this.multidimensionalInfo)||(0,maybe.Wi)(t)||(0,maybe.Wi)(r?.startField))return e;const{startField:i}=r,s=this.multidimensionalInfo.variables.some((e=>e.dimensions.some((e=>e.name===i))))?i:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==s)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const n=e.multidimensionalDefinition.filter((e=>e.dimensionName===s)),o=(0,maybe.pC)(t.start)?t.start.getTime():null,a=(0,maybe.pC)(t.end)?t.end.getTime():null,l=null==o||null==a||o===a,u=l?[o||a]:[[o,a]],m=this.version>=10.8;if(n.length)n.forEach((e=>{e.dimensionName===s&&(m?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=l,e.values=u))}));else if(!m){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=s,e.isSlice=l,e.values=u})):e.multidimensionalDefinition.push(new DimensionalDefinition.Z({variableName:"",dimensionName:s,isSlice:l,values:u}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return(0,maybe.Wi)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new core_Error.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,maybe.pC)(e)?(0,ensureType.TJ)(Query.Z,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new RasterJobHandler.Z;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return"unique-value"===e.type&&this._hasRenderingRule(r)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,rasterRendererHelper.U0)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:i}=await(0,request.default)(S(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new core_Error.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||r}_isVectorFieldResampleFunction(e){if((0,maybe.Wi)(e))return!1;const{functionName:t,functionArguments:r}=e,i="resample"===t?.toLowerCase(),s=r?.ResampleType||r?.resampleType;return i&&(7===s||10===s)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo&&this.rasterInfo.bandCount>=3){const e=(0,rasterRendererHelper.YD)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=(0,rasterRendererHelper.Ob)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=(0,rasterRendererHelper.ol)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new RasterSymbolizer.Z({rendererJSON:t,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:(0,maybe.pC)(e.pixelBlock)?e.pixelBlock.clone():null}}_getQueryParams(e){e&&(0,maybe.pC)(e.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,RasterCodec.J)(e,t,r)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:(await(0,request.default)(S(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&this._canRequestImageElement(t.format))return{imageOrCanvasElement:(await(0,request.default)(S(this.parsedUrl)+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:i})).data,params:t};const s=this._initJobHandler(),a=(0,request.default)(S(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}),l=(await Promise.all([a,s]))[0].data,u=t.format||"jpgpng";let p=u;if("bsq"!==p&&"bip"!==p&&(p=(0,RasterCodec.y)(l)),!p)throw new core_Error.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(l)));const c={signal:i},m="gif"===u||"bmp"===u||u.includes("png")&&("png"===p||"jpg"===p)?(0,RasterCodec.J)(l,{useCanvas:!0,...t},c):this._decodePixelBlock(l,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:u},c);return{pixelData:{pixelBlock:await m,extent:t.extent},params:t}}_generateRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return(0,fetchRasterInfo.N)(S(this.parsedUrl),e,r)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=(0,multidimensionalUtils.Tj)(e,{multidimensionalSubset:this.multidimensionalSubset});if((0,maybe.pC)(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new MosaicRule_y;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&"none"!==this.renderingRule.functionName?.toLowerCase()&&t.forEach((e=>e.variableName="")),(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,r){r=r||{};const i=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:o,templateFields:a}=r,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,c=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const m=this.objectIdField||"ObjectId",d="string"==typeof i&&i.toLowerCase().includes("nodata"),h=[];if(i&&!u&&!d){const e={};e[m]=0,c=[i],u=[new Graphic.Z(this.fullExtent,null,e)]}if(!u)return[];let f,y,g;this._updateResponseFieldNames(u,a),d&&!n&&(u=[]);for(let t=0;t<u.length;t++){if(f=u[t],null!=i){if(y=c[t],g=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.includes(this.renderingRule.functionName)?l[s.indexOf(this.renderingRule.functionName)]:i,"nodata"===y.toLowerCase()&&!n)continue;const e="Raster.ItemPixelValue",r="Raster.ServicePixelValue";f.attributes[e]=y,f.attributes[r]=g,this._updateFeatureWithMagDirValues(f,y);const o=this.fields&&this.fields.length>0;let a=this.renderingRule&&(0,maybe.pC)(this.serviceRasterInfo?.attributeTable)?o?y:i:g;this.renderingRule||(a=o?y:i),this._updateFeatureWithRasterAttributeTableValues(f,a)}if(f.sourceLayer=f.layer=this,o&&this._updateFeatureWithDomainValues(f),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t="Raster.ServicePixelValue."+s[e];f.attributes[t]=l[e]}h.push(u[t])}return h}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||this.serviceRasterInfo?.attributeTable;if((0,maybe.Wi)(r))return;const{features:i,fields:s}=r,n=s.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=n&&n[0];if(!o)return;const a=i.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));a&&a[0]&&s.forEach((t=>{const r=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=a[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new PixelBlock.Z({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new Extent.Z(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:(0,vectorFieldUtils.Tg)([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=o[0],e.attributes["Raster.Direction"]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;(0,maybe.Wi)(r)||e.forEach((e=>{if(e&&e.attributes)for(const i of t){const t=r.get(i)?.name;t&&t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRenderingRule(e){return null!=e&&null!=e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.includes("image"),o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.includes("mensuration")&&a,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&t.includes("catalog"),supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!!i?.supportsStatistics,supportsOrderBy:!!i?.supportsOrderBy,supportsDistinct:!!i?.supportsDistinct,supportsPagination:!!i?.supportsPagination,supportsStandardizedQueriesOnly:!!i?.useStandardizedQueries,supportsPercentileStatistics:!!i?.supportsPercentileStatistics,supportsCentroid:!!i?.supportsReturningGeometryCentroid,supportsDistance:!!i?.supportsQueryWithDistance,supportsExtent:!!i?.supportsReturningQueryExtent,supportsGeometryProperties:!!i?.supportsReturningGeometryProperties,supportsHavingClause:!!i?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!i?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};function S(e){return e?.path??""}return(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"_functionRasterInfos",void 0),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"_rasterJobHandler",void 0),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"_cachedRendererJson",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],y.prototype,"_serviceSupportsMosaicRule",void 0),(0,tslib_es6._)([(0,reader.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],y.prototype,"readServiceSupportsMosaicRule",null),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],y.prototype,"_rasterFunctionNamesIndex",null),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"adjustAspectRatio",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{write:!0}})],y.prototype,"bandIds",void 0),(0,tslib_es6._)([(0,reader.r)("bandIds")],y.prototype,"readBandIds",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,json:{read:!1}})],y.prototype,"capabilities",void 0),(0,tslib_es6._)([(0,reader.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],y.prototype,"readCapabilities",null),(0,tslib_es6._)([(0,property.Cb)({type:Number})],y.prototype,"compressionQuality",void 0),(0,tslib_es6._)([(0,writer.c)("compressionQuality")],y.prototype,"writeCompressionQuality",null),(0,tslib_es6._)([(0,property.Cb)({type:Number})],y.prototype,"compressionTolerance",void 0),(0,tslib_es6._)([(0,writer.c)("compressionTolerance")],y.prototype,"writeCompressionTolerance",null),(0,tslib_es6._)([(0,property.Cb)({json:{read:{source:"copyrightText"}}})],y.prototype,"copyright",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],y.prototype,"defaultMosaicRule",void 0),(0,tslib_es6._)([(0,reader.r)("defaultMosaicRule",["defaultMosaicMethod"])],y.prototype,"readDefaultMosaicRule",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],y.prototype,"definitionExpression",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,constructOnly:!0})],y.prototype,"exportImageServiceParameters",void 0),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"rasterInfo",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,type:[Field.Z]})],y.prototype,"fields",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],y.prototype,"fieldsIndex",null),(0,tslib_es6._)([(0,property.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],y.prototype,"format",null),(0,tslib_es6._)([(0,reader.r)("service","format",["serviceDataType"])],y.prototype,"readFormat",null),(0,tslib_es6._)([(0,property.Cb)({type:Extent.Z})],y.prototype,"fullExtent",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],y.prototype,"hasMultidimensions",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{read:{source:"maxImageHeight"}}})],y.prototype,"imageMaxHeight",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{read:{source:"maxImageWidth"}}})],y.prototype,"imageMaxWidth",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{type:rasterEnums.c.jsonValues,read:rasterEnums.c.read,write:rasterEnums.c.write}})],y.prototype,"interpolation",void 0),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"minScale",void 0),(0,tslib_es6._)([(0,reader.r)("service","minScale")],y.prototype,"readMinScale",null),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"maxScale",void 0),(0,tslib_es6._)([(0,reader.r)("service","maxScale")],y.prototype,"readMaxScale",null),(0,tslib_es6._)([(0,property.Cb)({type:MosaicRule_y})],y.prototype,"mosaicRule",null),(0,tslib_es6._)([(0,reader.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],y.prototype,"readMosaicRule",null),(0,tslib_es6._)([(0,writer.c)("mosaicRule")],y.prototype,"writeMosaicRule",null),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"multidimensionalInfo",null),(0,tslib_es6._)([(0,property.Cb)({type:MultidimensionalSubset.Z,json:{write:!0}})],y.prototype,"multidimensionalSubset",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{type:ensureType.z8}})],y.prototype,"noData",void 0),(0,tslib_es6._)([(0,writer.c)("noData")],y.prototype,"writeNoData",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{type:rasterEnums.k.jsonValues,read:rasterEnums.k.read,write:rasterEnums.k.write}})],y.prototype,"noDataInterpretation",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],y.prototype,"objectIdField",void 0),(0,tslib_es6._)([(0,reader.r)("objectIdField")],y.prototype,"readObjectIdField",null),(0,tslib_es6._)([(0,property.Cb)({})],y.prototype,"geometryType",void 0),(0,tslib_es6._)([(0,property.Cb)({})],y.prototype,"typeIdField",void 0),(0,tslib_es6._)([(0,property.Cb)({})],y.prototype,"types",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],y.prototype,"parsedUrl",null),(0,tslib_es6._)([(0,property.Cb)({type:Function})],y.prototype,"pixelFilter",void 0),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],y.prototype,"sourceType",void 0),(0,tslib_es6._)([(0,reader.r)("sourceType",["serviceSourceType","fields"])],y.prototype,"readSourceType",null),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"viewId",void 0),(0,tslib_es6._)([(0,property.Cb)({types:rasterRenderers.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:rasterRenderers.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],y.prototype,"renderer",null),(0,tslib_es6._)([(0,reader.r)("renderer")],y.prototype,"readRenderer",null),(0,tslib_es6._)([(0,writer.c)("renderer")],y.prototype,"writeRenderer",null),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"symbolizer",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.Oh)],y.prototype,"opacity",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],y.prototype,"rasterFields",null),(0,tslib_es6._)([(0,property.Cb)({constructOnly:!0})],y.prototype,"rasterFunctionInfos",void 0),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction.Z})],y.prototype,"renderingRule",null),(0,tslib_es6._)([(0,reader.r)("renderingRule",["renderingRule","rasterFunctionInfos"])],y.prototype,"readRenderingRule",null),(0,tslib_es6._)([(0,writer.c)("renderingRule")],y.prototype,"writeRenderingRule",null),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"serviceDataType",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,type:SpatialReference.Z})],y.prototype,"spatialReference",void 0),(0,tslib_es6._)([(0,reader.r)("spatialReference",["spatialReference","extent"])],y.prototype,"readSpatialReference",null),(0,tslib_es6._)([(0,property.Cb)({json:{type:Se.jsonValues}})],y.prototype,"pixelType",void 0),(0,tslib_es6._)([(0,reader.r)("pixelType")],y.prototype,"readPixelType",null),(0,tslib_es6._)([(0,writer.c)("pixelType")],y.prototype,"writePixelType",null),(0,tslib_es6._)([(0,property.Cb)({constructOnly:!0,type:RasterInfo.Z})],y.prototype,"serviceRasterInfo",void 0),(0,tslib_es6._)([(0,property.Cb)()],y.prototype,"sourceJSON",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.HQ)],y.prototype,"url",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],y.prototype,"version",void 0),(0,tslib_es6._)([(0,reader.r)("version",["currentVersion","fields","timeInfo"])],y.prototype,"readVersion",null),y=(0,tslib_es6._)([(0,subclass.j)("esri.layers.mixins.ArcGISImageService")],y),y};var ArcGISService=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/ArcGISService.js"),BlendLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/BlendLayer.js"),CustomParametersMixin=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/CustomParametersMixin.js"),OperationalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/OperationalLayer.js"),PortalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/PortalLayer.js"),RefreshableLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/RefreshableLayer.js"),ScaleRangeLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/ScaleRangeLayer.js"),TemporalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/TemporalLayer.js"),versionUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/versionUtils.js"),popupUtils=__webpack_require__("./node_modules/@arcgis/core/support/popupUtils.js");let L=class extends((0,BlendLayer.h)((0,TemporalLayer.n)((0,ScaleRangeLayer.M)((0,OperationalLayer.q)((0,PortalLayer.I)(xe((0,RefreshableLayer.Q)((0,CustomParametersMixin.N)((0,ArcGISService.Y)((0,MultiOriginJSONSupport.R)(Layer.Z))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=(0,maybe.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(promiseUtils.r9).then((()=>this._fetchService(r)))),Promise.resolve(this)}writeOperationalLayerType(e,r,t){const o="vector-field"===this.renderer?.type;r[t]=o?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const r=this.rasterFields,t=this.title,o=new Set;let i=!1,s=!1;this.capabilities&&(i=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const a=new Set;i&&a.add("raster.itempixelvalue");for(const p of r){const e=p.name.toLowerCase();a.has(e)||e.includes("raster.servicepixelvalue.")||o.add(p.name)}return s&&o.add("raster.magnitude").add("raster.direction"),(0,popupUtils.eZ)({fields:r,title:t},{...e,visibleFieldNames:o})}queryFeatures(e,r){return this.queryRasters(e,r).then((e=>{if(e?.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))}queryFeatureCount(e,r){return this.queryRasterCount(e,r)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(e){return(0,versionUtils.D)(this,e)}};(0,tslib_es6._)([(0,property.Cb)(commonProperties.rn)],L.prototype,"legendEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["show","hide"]})],L.prototype,"listMode",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],L.prototype,"isReference",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],L.prototype,"operationalLayerType",void 0),(0,tslib_es6._)([(0,writer.c)("web-map","operationalLayerType")],L.prototype,"writeOperationalLayerType",null),(0,tslib_es6._)([(0,property.Cb)(commonProperties.C_)],L.prototype,"popupEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:PopupTemplate.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],L.prototype,"popupTemplate",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],L.prototype,"defaultPopupTemplate",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),L=(0,tslib_es6._)([(0,subclass.j)("esri.layers.ImageryLayer")],L);const ImageryLayer_T=L},"./node_modules/@arcgis/core/rest/query/executeForCount.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>n});var _utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/rest/utils.js"),_operations_query_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/rest/query/operations/query.js"),_support_Query_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@arcgis/core/rest/support/Query.js");async function n(n,s,m){const p=(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.en)(n);return(0,_operations_query_js__WEBPACK_IMPORTED_MODULE_1__.executeQueryForCount)(p,_support_Query_js__WEBPACK_IMPORTED_MODULE_2__.Z.from(s),{...m}).then((o=>o.data.count))}},"./node_modules/@arcgis/core/rest/query/executeForIds.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{G:()=>s});var _utils_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/rest/utils.js"),_operations_query_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/rest/query/operations/query.js"),_support_Query_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@arcgis/core/rest/support/Query.js");async function s(s,e,m){const n=(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.en)(s);return(0,_operations_query_js__WEBPACK_IMPORTED_MODULE_1__.executeQueryForIds)(n,_support_Query_js__WEBPACK_IMPORTED_MODULE_2__.Z.from(e),{...m}).then((o=>o.data.objectIds))}}}]);
"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[42840],{"./packages/map/stories/Heatmap.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Heatmap:()=>Heatmap,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@faker-js/faker/dist/esm/index.mjs"),_src__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/map/src/index.ts"),_locations_json__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./packages/map/stories/locations.json"),_sources__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/map/stories/sources.ts");const __WEBPACK_DEFAULT_EXPORT__={component:_src__WEBPACK_IMPORTED_MODULE_2__.Az.layers.Heatmap,title:"@map/Heatmap",parameters:{layout:"fullscreen",controls:{exclude:"events"}}},events=[...new Array(99).fill(null).map((l=>({location:_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.CB.location.nearbyGPSCoordinate({origin:[40,-120],radius:1e3,isMetric:!0}).join(","),count:_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.CB.number.int(99)}))),...new Array(99).fill(null).map((l=>({location:_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.CB.location.nearbyGPSCoordinate({origin:[20,-90],radius:1e3,isMetric:!0}).join(","),count:_faker_js_faker__WEBPACK_IMPORTED_MODULE_1__.CB.number.int(99)})))],Heatmap={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_src__WEBPACK_IMPORTED_MODULE_2__.Az.Viewer,{defaultSource:"roads",sources:_sources__WEBPACK_IMPORTED_MODULE_4__.M,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_2__.Az.tools.Zoom,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_2__.Az.tools.Navigation,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_2__.Az.tools.Basemap,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_2__.Az.tools.Layers,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_2__.Az.tools.Comparison,{compareCountField:"count",onCompareStart:()=>Promise.resolve({events:_locations_json__WEBPACK_IMPORTED_MODULE_3__,compareEvents:events})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_2__.Az.layers.Heatmap,{...args})]}),args:{events:_locations_json__WEBPACK_IMPORTED_MODULE_3__}};Heatmap.parameters={...Heatmap.parameters,docs:{...Heatmap.parameters?.docs,source:{originalSource:'{\n  render: args => <AxMap.Viewer defaultSource="roads" sources={MapSources}>\n      {/* Zoom tools */}\n      <AxMap.tools.Zoom />\n      {/* History navigation */}\n      <AxMap.tools.Navigation />\n      {/* Basemaps list */}\n      <AxMap.tools.Basemap />\n      {/* Layer list */}\n      <AxMap.tools.Layers />\n      <AxMap.tools.Comparison compareCountField="count" onCompareStart={() => Promise.resolve(({\n      events: locs,\n      compareEvents: events\n    } as AnyObject))} />\n\n      <AxMap.layers.Heatmap {...args} />\n    </AxMap.Viewer>,\n  args: {\n    events: (locs as AnyObject)\n  }\n}',...Heatmap.parameters?.docs?.source}}};const __namedExportsOrder=["Heatmap"]}}]);
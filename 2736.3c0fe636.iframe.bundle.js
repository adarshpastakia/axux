"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[2736],{"./node_modules/@arcgis/core/chunks/builtins.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>i,l:()=>t,o:()=>a});var e,r={exports:{}};void 0!==(e=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(r.exports=e);const t=r.exports;var o,l={exports:{}};o=l,function(e){var r=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==r&&(o.exports=r)}();const a=l.exports;var g={exports:{}};!function(e){!function(r){var t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];void 0!==t&&(e.exports=t)}()}(g);const i=g.exports},"./node_modules/@arcgis/core/views/webgl/Program.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Program_h});var arrayUtils=__webpack_require__("./node_modules/@arcgis/core/core/arrayUtils.js"),maybe=(__webpack_require__("./node_modules/@arcgis/core/core/has.js"),__webpack_require__("./node_modules/@arcgis/core/core/maybe.js")),checkWebGLError=__webpack_require__("./node_modules/@arcgis/core/views/webgl/checkWebGLError.js"),context_util=__webpack_require__("./node_modules/@arcgis/core/views/webgl/context-util.js"),enums=__webpack_require__("./node_modules/@arcgis/core/views/webgl/enums.js");const e=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],testUtils_e_enableCache=!1;var builtins=__webpack_require__("./node_modules/@arcgis/core/chunks/builtins.js"),s=999,E=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function _(){var t,e,a,r=0,_=0,v=s,j=[],x=[],D=1,R=0,T=0,A=!1,G=!1,S="";return function(t){return x=[],null!==t?F(t.replace?t.replace(/\r\n/g,"\n"):t):function L(t){return j.length&&X(j.join("")),v=10,X("(eof)"),x}()};function X(t){t.length&&x.push({type:E[v],data:t,position:T,line:D,column:R})}function F(e){var n;for(r=0,a=(S+=e).length;t=S[r],r<a;){switch(n=r,v){case 0:r=V();break;case 1:case 2:r=M();break;case 3:r=O();break;case 4:r=z();break;case 11:r=$();break;case 5:r=I();break;case 9999:r=U();break;case 9:r=H();break;case s:r=C()}n!==r&&("\n"===S[n]?(R=0,++D):++R)}return _+=r,S=S.slice(r),x}function C(){return j=j.length?[]:j,"/"===e&&"*"===t?(T=_+r-1,v=0,e=t,r+1):"/"===e&&"/"===t?(T=_+r-1,v=1,e=t,r+1):"#"===t?(v=2,T=_+r,r):/\s/.test(t)?(v=9,T=_+r,r):(A=/\d/.test(t),G=/[^\w_]/.test(t),T=_+r,v=A?4:G?3:9999,r)}function H(){return/[^\s]/g.test(t)?(X(j.join("")),v=s,r):(j.push(t),e=t,r+1)}function M(){return"\r"!==t&&"\n"!==t||"\\"===e?(j.push(t),e=t,r+1):(X(j.join("")),v=s,r)}function V(){return"/"===t&&"*"===e?(j.push(t),X(j.join("")),v=s,r+1):(j.push(t),e=t,r+1)}function O(){if("."===e&&/\d/.test(t))return v=5,r;if("/"===e&&"*"===t)return v=0,r;if("/"===e&&"/"===t)return v=1,r;if("."===t&&j.length){for(;N(j););return v=5,r}if(";"===t||")"===t||"("===t){if(j.length)for(;N(j););return X(t),v=s,r+1}var a=2===j.length&&"="!==t;if(/[\w_\d\s]/.test(t)||a){for(;N(j););return v=s,r}return j.push(t),e=t,r+1}function N(t){for(var e,a,r=0;;){if(e=builtins.o.indexOf(t.slice(0,t.length+r).join("")),a=builtins.o[e],-1===e){if(r--+t.length>0)continue;a=t.slice(0,1).join("")}return X(a),T+=a.length,(j=j.slice(a.length)).length}}function $(){return/[^a-fA-F0-9]/.test(t)?(X(j.join("")),v=s,r):(j.push(t),e=t,r+1)}function z(){return"."===t||/[eE]/.test(t)?(j.push(t),v=5,e=t,r+1):"x"===t&&1===j.length&&"0"===j[0]?(v=11,j.push(t),e=t,r+1):/[^\d]/.test(t)?(X(j.join("")),v=s,r):(j.push(t),e=t,r+1)}function I(){return"f"===t&&(j.push(t),e=t,r+=1),/[eE]/.test(t)||"-"===t&&/[eE]/.test(e)?(j.push(t),e=t,r+1):/[^\d]/.test(t)?(X(j.join("")),v=s,r):(j.push(t),e=t,r+1)}function U(){if(/[^\d\w_]/.test(t)){var a=j.join("");return v=builtins.l.indexOf(a)>-1?8:builtins.b.indexOf(a)>-1?7:6,X(j.join("")),v=s,r}return j.push(t),e=t,r+1}}function j(t){return function v(t){var e=_(),a=[];return(a=a.concat(e(t))).concat(e(null))}(t)}const D=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function T(t,e){for(let a=e-1;a>=0;a--){const e=t[a];if("whitespace"!==e.type&&"block-comment"!==e.type){if("keyword"!==e.type)break;if("attribute"===e.data||"in"===e.data)return!0}}return!1}function A(t,e,a,r){r=r||a;for(const n of t)if("ident"===n.type&&n.data===a)return r in e?e[r]++:e[r]=0,A(t,e,r+"_"+e[r],r);return a}function G(t,e,a="afterVersion"){function r(t,e){for(let a=e;a<t.length;a++){const e=t[a];if("operator"===e.type&&";"===e.data)return a}return null}const o={data:"\n",type:"whitespace"},i=e=>e<t.length&&/[^\r\n]$/.test(t[e].data);let s=function n(t){let e=-1,n=0,o=-1;for(let i=0;i<t.length;i++){const s=t[i];if("preprocessor"===s.type&&(s.data.match(/\#(if|ifdef|ifndef)\s+.+/)?++n:s.data.match(/\#endif\s*.*/)&&--n),"afterVersion"!==a&&"afterPrecision"!==a||"preprocessor"===s.type&&/^#version/.test(s.data)&&(o=Math.max(o,i)),"afterPrecision"===a&&"keyword"===s.type&&"precision"===s.data){const e=r(t,i);if(null===e)throw new Error("precision statement not followed by any semicolons!");o=Math.max(o,e)}e<o&&0===n&&(e=i)}return e+1}(t);i(s-1)&&t.splice(s++,0,o);for(const c of e)t.splice(s++,0,c);i(s-1)&&i(s)&&t.splice(s,0,o)}function S(t,e,a,r="lowp"){G(t,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"keyword",data:a},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function X(t,e,a,r,n="lowp"){G(t,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:r.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"keyword",data:a},{type:"whitespace",data:" "},{type:"ident",data:e},{type:"operator",data:";"}],"afterPrecision")}function F(t,e){let a,r,n=-1;for(let o=e;o<t.length;o++){const e=t[o];if("operator"===e.type&&("["===e.data&&(a=o),"]"===e.data)){r=o;break}"integer"===e.type&&(n=parseInt(e.data,10))}return a&&r&&t.splice(a,r-a+1),n}function L(r,n){const o=function H(t){return testUtils_e_enableCache?C.get(t):null}(r);if((0,maybe.pC)(o))return o;const i=j(r);if("300 es"===function R(t,e="100",a="300 es"){const r=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const n of t)if("preprocessor"===n.type){const t=r.exec(n.data);if(t){const r=t[1].replace(/\s\s+/g," ");if(r===a)return r;if(r===e)return n.data="#version "+a,e;throw new Error("unknown glsl version: "+r)}}return t.splice(0,0,{type:"preprocessor",data:"#version "+a},{type:"whitespace",data:"\n"}),null}(i,"100","300 es"))return r;let s=null,c=null;const p={},u={};for(let t=0;t<i.length;++t){const r=i[t];switch(r.type){case"keyword":n===enums.Ho.VERTEX_SHADER&&"attribute"===r.data?r.data="in":"varying"===r.data&&(r.data=n===enums.Ho.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(r.data.trim())&&(r.data=r.data.replace(/(2D|Cube|EXT)/g,"")),n===enums.Ho.FRAGMENT_SHADER&&"gl_FragColor"===r.data&&(s||(s=A(i,p,"fragColor"),S(i,s,"vec4")),r.data=s),n===enums.Ho.FRAGMENT_SHADER&&"gl_FragData"===r.data){const e=F(i,t+1),a=A(i,p,"fragData");X(i,a,"vec4",e,"mediump"),r.data=a}else n===enums.Ho.FRAGMENT_SHADER&&"gl_FragDepthEXT"===r.data&&(c||(c=A(i,p,"gl_FragDepth")),r.data=c);break;case"ident":if(e.includes(r.data)){if(n===enums.Ho.VERTEX_SHADER&&T(i,t))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");r.data in u||(u[r.data]=A(i,p,r.data)),r.data=u[r.data]}}}for(let t=i.length-1;t>=0;--t){const e=i[t];if("preprocessor"===e.type){const a=e.data.match(/\#extension\s+(.*)\:/);if(a&&a[1]&&D.includes(a[1].trim())){const e=i[t+1];i.splice(t,e&&"whitespace"===e.type?2:1)}const r=e.data.match(/\#ifdef\s+(.*)/);r&&r[1]&&D.includes(r[1].trim())&&(e.data="#if 1");const n=e.data.match(/\#ifndef\s+(.*)/);n&&n[1]&&D.includes(n[1].trim())&&(e.data="#if 0")}}return function M(t,e){return testUtils_e_enableCache&&C.set(t,e),e}(r,function x(t){return t.map((t=>"eof"!==t.type?t.data:"")).join("")}(i))}const C=new Map;class Program_h{constructor(t,o,i,a,h=new Map){this._context=t,this._locations=a,this._uniformBlockBindings=h,this._refCount=1,this._compiled=!1,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),0===o.length&&console.error("Shaders source should not be empty!"),this._context.type===context_util.zO.WEBGL2&&(o=L(o,enums.Ho.VERTEX_SHADER),i=L(i,enums.Ho.FRAGMENT_SHADER)),this._vShader=Program_f(this._context,enums.Ho.VERTEX_SHADER,o),this._fShader=Program_f(this._context,enums.Ho.FRAGMENT_SHADER,i),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(enums._g.Shader,this),(0,checkWebGLError.CG)()&&(this.vertexShader=o,this.fragmentShader=i)}get glName(){if((0,maybe.pC)(this._glName))return this._glName;if((0,maybe.Wi)(this._vShader))return null;const t=this._context.gl,r=t.createProgram();if(t.attachShader(r,this._vShader),t.attachShader(r,this._fShader),this._locations.forEach(((o,i)=>t.bindAttribLocation(r,o,i))),t.linkProgram(r),(0,checkWebGLError.CG)()&&!t.getProgramParameter(r,t.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${t.getProgramParameter(r,t.VALIDATE_STATUS)}, gl error ${t.getError()}, vertex: ${t.getShaderParameter(this._vShader,t.COMPILE_STATUS)}, fragment: ${t.getShaderParameter(this._fShader,t.COMPILE_STATUS)}, info log: ${t.getProgramInfoLog(r)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`),this._context.type===context_util.zO.WEBGL2){const o=t;for(const[t,i]of this._uniformBlockBindings){const e=o.getUniformBlockIndex(r,t);e<4294967295&&o.uniformBlockBinding(r,e,i)}}return this._glName=r,this._context.instanceCounter.increment(enums._g.Program,this),r}get hasGLName(){return(0,maybe.pC)(this._glName)}get isCompiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==t?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl;this._vShader&&(t.deleteShader(this._vShader),this._vShader=null,this._context.instanceCounter.decrement(enums._g.Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(enums._g.Program,this))}ref(){++this._refCount}_getUniformLocation(t){return void 0===this._nameToUniformLocation[t]&&(++Program_l.numUniforms,this._nameToUniformLocation[t]=this._context.gl.getUniformLocation(this.glName,t)),this._nameToUniformLocation[t]}hasUniform(t){return null!==this._getUniformLocation(t)}setUniform1i(t,o){const i=this._nameToUniform1[t];void 0!==i&&o===i||(this._context.gl.uniform1i(this._getUniformLocation(t),o),this._nameToUniform1[t]=o)}setUniform1iv(t,o){Program_g(this._nameToUniform1v,t,o)&&this._context.gl.uniform1iv(this._getUniformLocation(t),o)}setUniform2iv(t,o){Program_g(this._nameToUniform2,t,o)&&this._context.gl.uniform2iv(this._getUniformLocation(t),o)}setUniform3iv(t,o){Program_g(this._nameToUniform3,t,o)&&this._context.gl.uniform3iv(this._getUniformLocation(t),o)}setUniform4iv(t,o){Program_g(this._nameToUniform4,t,o)&&this._context.gl.uniform4iv(this._getUniformLocation(t),o)}setUniform1f(t,o){const i=this._nameToUniform1[t];void 0!==i&&o===i||(this._context.gl.uniform1f(this._getUniformLocation(t),o),this._nameToUniform1[t]=o)}setUniform1fv(t,o){Program_g(this._nameToUniform1v,t,o)&&this._context.gl.uniform1fv(this._getUniformLocation(t),o)}setUniform2f(t,o,i){const e=this._nameToUniform2.get(t);void 0===e?(this._context.gl.uniform2f(this._getUniformLocation(t),o,i),this._nameToUniform2.set(t,[o,i])):o===e[0]&&i===e[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),o,i),e[0]=o,e[1]=i)}setUniform2fv(t,o){Program_g(this._nameToUniform2,t,o)&&this._context.gl.uniform2fv(this._getUniformLocation(t),o)}setUniform3f(t,o,i,e){const n=this._nameToUniform3.get(t);void 0===n?(this._context.gl.uniform3f(this._getUniformLocation(t),o,i,e),this._nameToUniform3[t]=[o,i,e]):o===n[0]&&i===n[1]&&e===n[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),o,i,e),n[0]=o,n[1]=i,n[2]=e)}setUniform3fv(t,o){Program_g(this._nameToUniform3,t,o)&&this._context.gl.uniform3fv(this._getUniformLocation(t),o)}setUniform4f(t,o,i,e,n){const r=this._nameToUniform4.get(t);void 0===r?(this._context.gl.uniform4f(this._getUniformLocation(t),o,i,e,n),this._nameToUniform4.set(t,[o,i,e,n])):void 0!==r&&o===r[0]&&i===r[1]&&e===r[2]&&n===r[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),o,i,e,n),r[0]=o,r[1]=i,r[2]=e,r[3]=n)}setUniform4fv(t,o){Program_g(this._nameToUniform4,t,o)&&this._context.gl.uniform4fv(this._getUniformLocation(t),o)}setUniformMatrix3fv(t,o,i=!1){Program_g(this._nameToUniformMatrix3,t,o)&&this._context.gl.uniformMatrix3fv(this._getUniformLocation(t),i,o)}setUniformMatrix4fv(t,o,i=!1){Program_g(this._nameToUniformMatrix4,t,o)&&this._context.gl.uniformMatrix4fv(this._getUniformLocation(t),i,o)}stop(){}}function Program_f(t,o,i){const n=t.gl,s=n.createShader(o);return n.shaderSource(s,i),n.compileShader(s),(0,checkWebGLError.CG)()&&!n.getShaderParameter(s,n.COMPILE_STATUS)&&(console.error("Compile error in ".concat(o===enums.Ho.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(n.getShaderInfoLog(s)),console.error(function Program_(t){let o=2;return t.replace(/\n/g,(()=>"\n"+function Program_c(t){return t>=1e3?t.toString():("  "+t).slice(-3)}(o++)+":"))}(i))),Program_l.enabled&&(Program_l.compiledLOC+=i.match(/\n/g).length+1),s}function Program_g(o,i,e){const n=o.get(i);return n?(0,arrayUtils.Vx)(n,e):(o.set(i,Array.from(e)),!0)}const Program_l={compiledLOC:0,numUniforms:0,enabled:!1}},"./node_modules/@arcgis/core/views/webgl/ProgramTemplate.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>e});var _Program_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/views/webgl/Program.js");function e(e,t,a=""){return new _Program_js__WEBPACK_IMPORTED_MODULE_0__.$(e,a+t.shaders.vertexShader,a+t.shaders.fragmentShader,t.attributes)}},"./node_modules/@arcgis/core/views/webgl/ShaderCompiler.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>e});class e{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h="";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?"":this._resolve(e.path,t),a=e.start+e.length})),h+=r.slice(a),t.set(e,h),h}_read(e){return this._readFile(e)}}}}]);
"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[7714],{"./node_modules/@arcgis/core/rest/query/operations/queryAttachments.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{executeAttachmentQuery:()=>c,fetchAttachments:()=>m,processAttachmentQueryResult:()=>a});var _kernel_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/kernel.js"),_request_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/request.js"),_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@arcgis/core/core/urlUtils.js"),_operations_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@arcgis/core/rest/operations/urlUtils.js"),_support_AttachmentInfo_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@arcgis/core/rest/query/support/AttachmentInfo.js");function s(t){const o=t.toJSON();return o.attachmentTypes&&(o.attachmentTypes=o.attachmentTypes.join(",")),o.keywords&&(o.keywords=o.keywords.join(",")),o.globalIds&&(o.globalIds=o.globalIds.join(",")),o.objectIds&&(o.objectIds=o.objectIds.join(",")),o.size&&(o.size=o.size.join(",")),o}function a(o,n){const s={};for(const a of n){const{parentObjectId:n,parentGlobalId:c,attachmentInfos:m}=a;for(const a of m){const{id:m}=a,p=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.qg)((0,_kernel_js__WEBPACK_IMPORTED_MODULE_0__.Dp)(`${o.path}/${n}/attachments/${m}`)),i=_support_AttachmentInfo_js__WEBPACK_IMPORTED_MODULE_3__.Z.fromJSON(a);i.set({url:p,parentObjectId:n,parentGlobalId:c}),s[n]?s[n].push(i):s[n]=[i]}}return s}function c(t,e,r){let a={query:(0,_operations_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__.A)({...t.query,f:"json",...s(e)})};return r&&(a={...r,...a,query:{...r.query,...a.query}}),(0,_request_js__WEBPACK_IMPORTED_MODULE_1__.default)(t.path+"/queryAttachments",a).then((t=>t.data.attachmentGroups))}async function m(t,e,n){const{objectIds:r}=e,s=[];for(const a of r)s.push((0,_request_js__WEBPACK_IMPORTED_MODULE_1__.default)(t.path+"/"+a+"/attachments",n));return Promise.all(s).then((t=>r.map(((o,e)=>({parentObjectId:o,attachmentInfos:t[e].data.attachmentInfos})))))}}}]);
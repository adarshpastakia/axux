"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[60711],{"./node_modules/@arcgis/core/chunks/vec3f32.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function n(){return new Float32Array(3)}function t(n){const t=new Float32Array(3);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t}function r(n,t,r){const e=new Float32Array(3);return e[0]=n,e[1]=t,e[2]=r,e}function a(){return n()}function o(){return r(1,1,1)}function u(){return r(1,0,0)}function s(){return r(0,1,0)}function c(){return r(0,0,1)}__webpack_require__.d(__webpack_exports__,{a:()=>t,c:()=>n,f:()=>r});const i=a(),f=o(),l=u(),_=s(),y=c();Object.freeze(Object.defineProperty({__proto__:null,ONES:f,UNIT_X:l,UNIT_Y:_,UNIT_Z:y,ZEROS:i,clone:t,create:n,createView:function e(n,t){return new Float32Array(n,t,3)},fromValues:r,ones:o,unitX:u,unitY:s,unitZ:c,zeros:a},Symbol.toStringTag,{value:"Module"}))},"./node_modules/@arcgis/core/geometry/support/normalizeUtilsSync.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b3:()=>a,jZ:()=>p});var _core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@arcgis/core/core/JSONSupport.js"),_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@arcgis/core/geometry/support/aaBoundingRect.js"),_boundsUtils_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@arcgis/core/geometry/support/boundsUtils.js"),_coordsUtils_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@arcgis/core/geometry/support/coordsUtils.js"),_jsonUtils_js__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@arcgis/core/geometry/support/jsonUtils.js"),_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@arcgis/core/geometry/support/normalizeUtilsCommon.js"),_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");function p(t){return f(t,!0)}function a(t){return f(t,!1)}function f(i,n){if(null==i)return null;const p=i.spatialReference,a=(0,_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.Vp)(p),f=(0,_core_JSONSupport_js__WEBPACK_IMPORTED_MODULE_0__.Wj)(i)?i.toJSON():i;if(!a)return f;const I=(0,_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.K8)(p)?102100:4326,g=_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.j7[I].maxX,v=_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.j7[I].minX;if((0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_4__.fT)(f))return y(f,g,v);if((0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_4__.U9)(f))return f.points=f.points.map((t=>y(t,g,v))),f;if((0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_4__.ZC)(f))return d(f,a);if((0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_4__.Bi)(f)||(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_4__.Rg)(f)){const t=(0,_boundsUtils_js__WEBPACK_IMPORTED_MODULE_2__.Rg)(S,f),i={xmin:t[0],ymin:t[1],xmax:t[2],ymax:t[3]},e=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.kd)(i.xmin,v)*(2*g),h=0===e?f:(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.kS)(f,e);return i.xmin+=e,i.xmax+=e,i.xmax>g?P(h,g,n):i.xmin<v?P(h,v,n):h}return f}function d(t,i){if(!i)return t;const s=function I(t,i){const s=[],{ymin:n,ymax:e,xmin:h,xmax:o}=t,r=t.xmax-t.xmin,[u,m]=i.valid,{x,frameId:_}=g(t.xmin,i),{x:l,frameId:c}=g(t.xmax,i),p=x===l&&r>0;if(r>2*m){const t={xmin:h<o?x:l,ymin:n,xmax:m,ymax:e},i={xmin:u,ymin:n,xmax:h<o?l:x,ymax:e},r={xmin:0,ymin:n,xmax:m,ymax:e},p={xmin:u,ymin:n,xmax:0,ymax:e},a=[],f=[];v(t,r)&&a.push(_),v(t,p)&&f.push(_),v(i,r)&&a.push(c),v(i,p)&&f.push(c);for(let s=_+1;s<c;s++)a.push(s),f.push(s);s.push(new C(t,[_]),new C(i,[c]),new C(r,a),new C(p,f))}else x>l||p?s.push(new C({xmin:x,ymin:n,xmax:m,ymax:e},[_]),new C({xmin:u,ymin:n,xmax:l,ymax:e},[c])):s.push(new C({xmin:x,ymin:n,xmax:l,ymax:e},[_]));return s}(t,i).map((t=>t.extent));return s.length<2?s[0]||t:s.length>2?(t.xmin=i.valid[0],t.xmax=i.valid[1],t):{rings:s.map((t=>[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]]))}}function y(t,i,s){if(Array.isArray(t)){const n=t[0];if(n>i){const s=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.kd)(n,i);t[0]=n+s*(-2*i)}else if(n<s){const i=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.kd)(n,s);t[0]=n+i*(-2*s)}}else{const n=t.x;if(n>i){const s=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.kd)(n,i);t.x+=s*(-2*i)}else if(n<s){const i=(0,_normalizeUtilsCommon_js__WEBPACK_IMPORTED_MODULE_5__.kd)(n,s);t.x+=i*(-2*s)}}return t}function g(t,i){const[s,n]=i.valid,e=2*n;let h,o=0;return t>n?(h=Math.ceil(Math.abs(t-n)/e),t-=h*e,o=h):t<s&&(h=Math.ceil(Math.abs(t-s)/e),t+=h*e,o=-h),{x:t,frameId:o}}function v(t,i){const{xmin:s,ymin:n,xmax:e,ymax:h}=i;return O(t,s,n)&&O(t,s,h)&&O(t,e,h)&&O(t,e,n)}function O(t,i,s){return i>=t.xmin&&i<=t.xmax&&s>=t.ymin&&s<=t.ymax}function P(t,i,s=!0){const e=!(0,_jsonUtils_js__WEBPACK_IMPORTED_MODULE_4__.Rg)(t);if(e&&(0,_coordsUtils_js__WEBPACK_IMPORTED_MODULE_3__.m3)(t),s)return(new T).cut(t,i);const h=e?t.rings:t.paths,o=e?4:2,r=h.length,m=-2*i;for(let n=0;n<r;n++){const t=h[n];if(t&&t.length>=o){const i=[];for(const s of t)i.push([s[0]+m,s[1]]);h.push(i)}}return e?t.rings=h:t.paths=h,t}class C{constructor(t,i){this.extent=t,this.frameIds=i}}const S=(0,_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_1__.vt)();class T{constructor(){this._linesIn=[],this._linesOut=[]}cut(t,i){let s;if(this._xCut=i,t.rings)this._closed=!0,s=t.rings,this._minPts=4;else{if(!t.paths)return null;this._closed=!1,s=t.paths,this._minPts=2}for(const e of s){if(!e||e.length<this._minPts)continue;let t=!0;for(const i of e)t?(this.moveTo(i),t=!1):this.lineTo(i);this._closed&&this.close()}this._pushLineIn(),this._pushLineOut(),s=[];for(const e of this._linesIn)e&&e.length>=this._minPts&&s.push(e);const n=-2*this._xCut;for(const e of this._linesOut)if(e&&e.length>=this._minPts){for(const t of e)t[0]+=n;s.push(e)}return this._closed?t.rings=s:t.paths=s,t}moveTo(t){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(t[0]),this._moveTo(t[0],t[1],this._prevSide),this._prevPt=t,this._firstPt=t}lineTo(t){const i=this._side(t[0]);if(i*this._prevSide==-1){const s=this._intersect(this._prevPt,t);this._lineTo(this._xCut,s,0),this._prevSide=0,this._lineTo(t[0],t[1],i)}else this._lineTo(t[0],t[1],i);this._prevSide=i,this._prevPt=t}close(){const t=this._firstPt,i=this._prevPt;t[0]===i[0]&&t[1]===i[1]||this.lineTo(t),this._checkClosingPt(this._lineIn),this._checkClosingPt(this._lineOut)}_moveTo(t,i,s){this._closed?(this._lineIn.push([s<=0?t:this._xCut,i]),this._lineOut.push([s>=0?t:this._xCut,i])):(s<=0&&this._lineIn.push([t,i]),s>=0&&this._lineOut.push([t,i]))}_lineTo(t,i,s){this._closed?(this._addPolyVertex(this._lineIn,s<=0?t:this._xCut,i),this._addPolyVertex(this._lineOut,s>=0?t:this._xCut,i)):s<0?(0===this._prevSide&&this._pushLineOut(),this._lineIn.push([t,i])):s>0?(0===this._prevSide&&this._pushLineIn(),this._lineOut.push([t,i])):this._prevSide<0?(this._lineIn.push([t,i]),this._lineOut.push([t,i])):this._prevSide>0&&(this._lineOut.push([t,i]),this._lineIn.push([t,i]))}_addPolyVertex(t,i,s){const n=t.length;n>1&&t[n-1][0]===i&&t[n-2][0]===i?t[n-1][1]=s:t.push([i,s])}_checkClosingPt(t){const i=t.length;i>3&&t[0][0]===this._xCut&&t[i-2][0]===this._xCut&&t[1][0]===this._xCut&&(t[0][1]=t[i-2][1],t.pop())}_side(t){return t<this._xCut?-1:t>this._xCut?1:0}_intersect(t,i){const s=(this._xCut-t[0])/(i[0]-t[0]);return t[1]+s*(i[1]-t[1])}_pushLineIn(){this._lineIn&&this._lineIn.length>=this._minPts&&this._linesIn.push(this._lineIn),this._lineIn=[]}_pushLineOut(){this._lineOut&&this._lineOut.length>=this._minPts&&this._linesOut.push(this._lineOut),this._lineOut=[]}}},"./node_modules/@arcgis/core/views/2d/layers/graphics/GraphicsView2D.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>re});var tslib_es6=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),Accessor=__webpack_require__("./node_modules/@arcgis/core/core/Accessor.js"),arrayUtils=__webpack_require__("./node_modules/@arcgis/core/core/arrayUtils.js"),BidiText=__webpack_require__("./node_modules/@arcgis/core/core/BidiText.js"),has=__webpack_require__("./node_modules/@arcgis/core/core/has.js"),Identifiable=__webpack_require__("./node_modules/@arcgis/core/core/Identifiable.js"),maybe=__webpack_require__("./node_modules/@arcgis/core/core/maybe.js"),promiseUtils=__webpack_require__("./node_modules/@arcgis/core/core/promiseUtils.js"),reactiveUtils=__webpack_require__("./node_modules/@arcgis/core/core/reactiveUtils.js"),property=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),subclass=(__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/ensureType.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js")),SpatialReference=__webpack_require__("./node_modules/@arcgis/core/geometry/SpatialReference.js"),aaBoundingRect=__webpack_require__("./node_modules/@arcgis/core/geometry/support/aaBoundingRect.js"),coordsUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/coordsUtils.js"),jsonUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/jsonUtils.js"),normalizeUtilsSync=__webpack_require__("./node_modules/@arcgis/core/geometry/support/normalizeUtilsSync.js"),spatialReferenceUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js"),projectionSupport=__webpack_require__("./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js"),CIMSymbolHelper=__webpack_require__("./node_modules/@arcgis/core/symbols/cim/CIMSymbolHelper.js"),defaults=__webpack_require__("./node_modules/@arcgis/core/symbols/support/defaults.js"),definitions=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js"),enums=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");const t=-1;class DirtyMap_e{constructor(){this._dirties=[{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1},{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1},{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1},{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1},{vertexFrom:t,vertexCount:t,indexFrom:t,indexCount:t,allDirty:!1}]}hasDirty(){return this._dirties.some((e=>e.indexCount!==t||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=t,e.indexCount=t,e.vertexFrom=t,e.vertexCount=t,e.allDirty=!1}markAllDirty(){for(const t of this._dirties)t.allDirty=!0}forEach(e){for(let r=0;r<this._dirties.length;++r){const{indexCount:i,indexFrom:o,vertexCount:n,vertexFrom:x,allDirty:l}=this._dirties[r],s={};let d,m=!1;(l||x!==t&&n>0)&&(s.geometry={count:n,from:x,allDirty:l},m=!0),(l||o!==t&&i>0)&&(d={count:i,from:o,allDirty:l},m=!0),m&&e({indices:d,vertices:s},r)}}markDirtyIndices(e,r,i){const o=this._dirties[e],n=r,x=i;if(!o.allDirty)if(o.indexCount!==t){const t=Math.min(o.indexFrom,n),e=Math.max(o.indexFrom+o.indexCount,n+x)-t;o.indexFrom=t,o.indexCount=e}else o.indexFrom=n,o.indexCount=x}markDirtyVertices(e,r,i,o){const n=this._dirties[e],x=i,l=o;if(!n.allDirty)if(n.vertexCount!==t){const t=Math.min(n.vertexFrom,x),e=Math.max(n.vertexFrom+n.vertexCount,x+l)-t;n.vertexFrom=t,n.vertexCount=e}else n.vertexFrom=x,n.vertexCount=l}}class e{get largestRange(){return this._largestRange}constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,n=null;for(;null!==t;)t.count>=e&&(!n||t.count-e<n.count-e)&&(n=t),t=t.next;return n}findAdjacentRanges(e,t){let n=!0,r=!1,s=null,o=this._parent._freeHead;for(;n&&!r;){const a=null!==s?s.from+s.count:0,l=null!==o?o.from:this._parent._size;e>=a&&e+t<=l?(n=!1,r=!0):null!==o?(s=o,o=o.next):n=!1}return[s,o]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class FreeList_t{constructor(t,n){this._allocated=0,this._size=t,this._freeHead=t>0?{from:0,count:t,prev:null,next:null}:null,this._bookKeeper=n||new e(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const n=this._bookKeeper.findBestRange(e);if(null==n)return-1;const r=n.from,s=n.count;if(n.from+=e,n.count-=e,this._bookKeeper.rangeResized(n,r,s),this._allocated+=e,0===n.count){const e=null!==n.prev?this._freeHead:n.next;FreeList_t._removeRange(n),this._freeHead=e}return r}free(e,n){const[r,s]=this._bookKeeper.findAdjacentRanges(e,n),o={from:e,count:n,prev:r??null,next:s??null};if(null!=r&&(r.next=o),null!=s&&(s.prev=o),this._bookKeeper.rangeCreated(o),this._allocated-=n,null!=s&&o.from+o.count===s.from){const e=o.from,n=o.count;FreeList_t._fuse(o,s),FreeList_t._removeRange(s),this._bookKeeper.rangeResized(o,e,n),this._bookKeeper.rangeResized(s,void 0,0)}if(null!=r&&r.from+r.count===o.from){const e=r.from,n=r.count;FreeList_t._fuse(r,o),FreeList_t._removeRange(o),this._bookKeeper.rangeResized(r,e,n),this._bookKeeper.rangeResized(o,void 0,0)}this._freeHead=null!==o.prev?this._freeHead:o}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var Utils=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");const s=["FILL","LINE","MARKER","TEXT","LABEL"];class d{constructor(r,i,s,o){this._strides=r,this._displayList=i,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const n in r){this._freeListsAndStorage[n]={vtxFreeList:o?new FreeList_t(o):null,idxFreeList:o?new FreeList_t(o):null,vertexBuffers:{},indexBuffer:o?new Uint32Array(o):null};for(const e in r[n])this._freeListsAndStorage[n].vertexBuffers[e]={data:o?(0,Utils.NM)(o,r[n][e]):null,stride:r[n][e]}}}static fromTileData(t,i){const n=function o(e){const t=e.getStrides(),r={};for(let i=0;i<t.length;i++)r[s[i]]=t[i];return r}(t),a=[0,0,0,0,0],x=[0,0,0,0,0];for(const e of t.tileDisplayData.displayObjects)for(const t of e.displayRecords)a[t.geometryType]=Math.max(a[t.geometryType],t.vertexFrom+t.vertexCount),x[t.geometryType]=Math.max(x[t.geometryType],t.indexFrom+t.indexCount);const u=new d(n,t.tileDisplayData.displayList,i,void 0),f=t.tileBufferData?.geometries??[];for(let o=0;o<f.length;++o){const t=a[o],i=x[o],n=f[o],d=s[o],c=u._storageFor(d),l=f[o].indexBuffer;c.indexBuffer=l,c.idxFreeList=new FreeList_t(l.length),c.idxFreeList.allocate(i);let m=0;for(const e in n.vertexBuffer){const t=f[o].vertexBuffer[e];c.vertexBuffers[e].data=t.data,c.vertexBuffers[e].stride=t.stride;const i=(0,Utils.vq)(t.stride),s=t.data.length*i/t.stride;m||(m=s)}c.vtxFreeList=new FreeList_t(m),c.vtxFreeList.allocate(t)}return u}delete(e){const t=s[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,r,o,n){const d=s[e.geometryType];let a,x;e.meshData=null,void 0===e.vertexFrom?(x=t.vertexCount,a=this._allocateVertices(d,x)):t.vertexCount>e.vertexCount?(this._freeVertices(d,e.vertexFrom,e.vertexCount),x=t.vertexCount,a=this._allocateVertices(d,x)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,x=e.vertexCount):(this._freeVertices(d,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,x=t.vertexCount);let u,f,c,l=!0;if(void 0===e.indexFrom?(u=n,c=t.indexCount,f=this._allocateIndices(d,c)):t.indexCount>e.indexCount?(u=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom,e.indexCount),c=t.indexCount,f=this._allocateIndices(d,c)):t.indexCount===e.indexCount?(l=!1,f=e.indexFrom,c=e.indexCount):(u=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),f=e.indexFrom,c=t.indexCount),-1!==a&&-1!==f){const s=this._storageFor(d);if((0,Utils.Hp)(a,f,s.vertexBuffers,s.indexBuffer,t,r,o),e.vertexFrom=a,e.indexFrom=f,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return l&&this._displayList.addToList(e,u),!0}return-1!==a&&this._freeVertices(d,a,x),-1!==f&&this._freeIndices(d,f,c),e.setMeshDataFromBuffers(t,r,o),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const r=t.vertexBuffer,o=t.indexBuffer,n=s[e.geometryType],d=this._allocateVertices(n,e.vertexCount);if(-1===d)return this._freeVertices(n,d,e.vertexCount),!1;const a=this._allocateIndices(n,e.indexCount);if(-1===a)return this._freeVertices(n,d,e.vertexCount),this._freeIndices(n,a,e.indexCount),!1;const x=this._storageFor(n);if((0,Utils.Hp)(d,a,x.vertexBuffers,x.indexBuffer,e,r,o),e.vertexFrom=d,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,d,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const r=this._storageFor(e),i=r.vtxFreeList?.allocate(t);if(null==i||-1===i)return-1;const s=r.vtxFreeList?.fragmentation;return null==s||s>.5?-1:i}_freeVertices(e,t,r){const i=this._storageFor(e);i.vtxFreeList?.free(t,r)}_freeIndices(e,t,r){const i=this._storageFor(e);i.idxFreeList?.free(t,r)}_allocateIndices(e,t){const r=this._storageFor(e),i=r.idxFreeList?.allocate(t);if(null==i||-1===i)return-1;const s=r.idxFreeList?.fragmentation;return null==s||s>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var BufferObject=__webpack_require__("./node_modules/@arcgis/core/views/webgl/BufferObject.js"),webgl_enums=__webpack_require__("./node_modules/@arcgis/core/views/webgl/enums.js"),VertexArrayObject=__webpack_require__("./node_modules/@arcgis/core/views/webgl/VertexArrayObject.js");class WGLBuffers_o{constructor(a){this.geometryMap=(0,Utils.JK)((()=>({indexBuffer:BufferObject.g.createIndex(a,webgl_enums._U.STATIC_DRAW),vao:null})),((e,s)=>({vertexBuffer:BufferObject.g.createVertex(a,Utils.rO[s])})))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao?.disposeVAOOnly(),t.data.indexBuffer?.dispose();for(const e in t.buffers)t.buffers[e]?.data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(e,r,s){if(!t.data.vao){const o={};for(const e in t.buffers)o[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new VertexArrayObject.Z(e,s,r,o,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,r)=>{this._upload(t,r,e)}))}_upload(e,t,r){if(e.indices&&(e.indices.allDirty?this._uploadIndices(r,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(r,t,e.indices.from,e.indices.count)),e.vertices){const s=e.vertices;for(const e in s){const a=s[e];a.allDirty?this._uploadVertices(r,t,e):null!=a.from&&null!=a.count&&this._uploadVertices(r,t,e,a.from,a.count)}}}_uploadVertices(e,t,r,s,a){const o=this.geometryMap[t];if(!o)return;const f=e.geometries[t].vertexBuffer[r];if(!f)return;const{data:i,stride:n}=f;if(o.buffers[r]&&i.length>0){const e=n/i.BYTES_PER_ELEMENT;null!=s&&null!=a?o.buffers[r].data.vertexBuffer.setSubData(i,s*e,s*e,(s+a)*e):o.buffers[r].data.vertexBuffer.setData(i)}}_uploadIndices(e,t,r,s){const a=this.geometryMap[t];if(!a)return;const o=e.geometries[t].indexBuffer;a.data.indexBuffer&&o.length>0&&(null!=r&&null!=s?a.data.indexBuffer.setSubData(o,r,r,r+s):a.data.indexBuffer.setData(o))}}var WGLTile=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/WGLTile.js");class a extends WGLTile.X{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new DirtyMap_e}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){return this._displayObjects??[]}getGeometry(t){return this._wglBuffers&&this._wglBuffers.has(t)?this._wglBuffers.get(t):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const i=e.addOrUpdate,a=e.remove;!this._data&&i?.tileDisplayData?.displayObjects.length?(i.tileDisplayData.computeDisplayList(),this._dirtyMap=new DirtyMap_e,this._dispRecStore=d.fromTileData(i,this._dirtyMap),this._data=i,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(i?.tileDisplayData?.displayObjects.length||a.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(t){t.time&&t.time===this._lastCommitTime||(this._lastCommitTime=t.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new WGLBuffers_o(t.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(t){this._invalidated=!0,this._patchData(t)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=d.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(t){let s=!0;const e=t.addOrUpdate?.tileDisplayData?.displayObjects||[],i=(t.remove||[]).slice();for(const r of e)null!=r.insertAfter&&i.push(r.id);let a;i.length>0&&(a=new Set(i));const l=this._data.tileDisplayData;for(const r of i){const t=l.displayObjectRegistry.get(r);if(t){l.displayList.removeFromList(t.displayRecords);for(const s of t.displayRecords)this._dispRecStore.delete(s);l.displayObjectRegistry.delete(r)}}a?.size&&(l.displayObjects=l.displayObjects.filter((t=>!a.has(t.id))));for(const r of e){let e,i=l.displayObjectRegistry.get(r.id);if(i){const t=i.displayRecords;i.set(r),i.displayRecords=t;const s=i.displayRecords.length;for(let e=0;e<s;++e){const t=i.displayRecords[e],s=r.displayRecords[e];(e>=r.displayRecords.length||t.geometryType!==s.geometryType||t.symbolLevel!==s.symbolLevel||t.zOrder!==s.zOrder||t.materialKey!==s.materialKey)&&(this._dispRecStore.delete(i.displayRecords[e]),e<r.displayRecords.length&&(i.displayRecords[e]=void 0))}i.displayRecords.length=r.displayRecords.length}else{let t;i=r.copy(),i.displayRecords=[],l.displayObjectRegistry.set(r.id,i);const s=l.displayObjects;if(null!=i.insertAfter)if(e={},i.insertAfter>=0){const e=l.displayObjectRegistry.get(i.insertAfter);e?(t=s.indexOf(e)+1,t<s.length?s.splice(t,0,i):(s.push(i),t=s.length)):(s.push(i),t=s.length)}else s.unshift(i),t=0;else s.push(i),t=s.length;if(e){const i=r.displayRecords.length>0?1:0;let a=0;for(let r=t-1;r>=0&&a<i;--r)for(let t=s[r].displayRecords.length-1;t>=0&&a<i;--t){const i=s[r].displayRecords[t],d=l.displayList.getDPInfoType();e[d]||(e[d]=i,++a)}}}const a=r.displayRecords.length;for(let d=0;d<a;++d){const a=r.displayRecords[d];let o=i.displayRecords[d];o?(o.meshData=a.meshData,o.materialKey=a.materialKey):(o=a.copy(),o.vertexFrom=void 0,o.indexFrom=void 0,i.displayRecords[d]=o);const h=a.geometryType,p=l.displayList.getDPInfoType(),y=t.addOrUpdate.tileBufferData.geometries[h],c=y.vertexBuffer,n=y.indexBuffer;let f;e&&(f=e[p]?l.displayList.splitAfter(e[p]):-1),s=this._dispRecStore.setMeshData(o,a,c,n,f)&&s,e&&null!=o.indexFrom&&null!=o.indexFrom&&(e[p]=o)}}return s}}class MemoryRequirements_e{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,i){if(!t&&!i)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const s=this._byGeometryType[e];s.vertices+=t,s.indices+=i}}class TileBufferData_f{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new TileBufferData_f;for(let r=0;r<this.geometries.length;r++){const f=this.geometries[r],t=e.geometries[r];t.indexBuffer=f.indexBuffer.slice(),t.vertexBuffer={};for(const e in f.vertexBuffer){const{data:r,stride:i}=f.vertexBuffer[e];t.vertexBuffer[e]={data:r.slice(),stride:i}}}return e}static deserialize(t){const i=new TileBufferData_f;for(let f=0;f<5;++f){i.geometries[f].indexBuffer=new Uint32Array(t.geometries[f].indexBuffer),i.geometries[f].vertexBuffer={};for(const r in t.geometries[f].vertexBuffer)i.geometries[f].vertexBuffer[r]={data:(0,Utils.Jg)(t.geometries[f].vertexBuffer[r].data,t.geometries[f].vertexBuffer[r].stride),stride:t.geometries[f].vertexBuffer[r].stride}}return i}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let f=0;f<5;++f)for(const r in this.geometries[f].vertexBuffer)e.geometries[f].vertexBuffer[r]={data:this.geometries[f].vertexBuffer[r].data.buffer,stride:this.geometries[f].vertexBuffer[r].stride};return e}getBuffers(){const e=[];for(let f=0;f<5;++f){e.push(this.geometries[f].indexBuffer.buffer);for(const r in this.geometries[f].vertexBuffer)e.push(this.geometries[f].vertexBuffer[r].data.buffer)}return e}}var MaterialKey=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");function GraphicDisplayList_t(e,t,n,...o){t<e.length?e.splice(t,n,...o):e.push(...o)}class GraphicDisplayList_n{constructor(){this.symbolLevels=[]}replay(t,n,o){for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const{geometryType:i,materialKey:l,indexFrom:s,indexCount:m}=r,y=MaterialKey.ar.load(l).symbologyType,d=t.painter.getBrush(i,y),u={geometryType:i,materialKey:l,indexFrom:s,indexCount:m,target:n.getGeometry(i)};d.prepareState(t),d.drawGeometry(t,n,u,o)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const n of e)this._addToList(n,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const n of e)t=this._removeFromList(n);return t}clone(){const e=new GraphicDisplayList_n;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),n=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<n;++r){const n=t[r];if(n.geometryType===e.geometryType&&i>n.indexFrom&&i<=n.indexFrom+n.indexCount){if(i<n.indexFrom+n.indexCount){const e=new GraphicDisplayList_o;e.geometryType=n.geometryType,e.materialKey=n.materialKey,e.indexFrom=i,e.indexCount=n.indexFrom+n.indexCount-i,t.splice(r+1,0,e),n.indexCount=i-n.indexFrom}return r}}}_addToList(e,n){const i=e.symbolLevel,r=e.zOrder,l=this._getDisplayList(i,r),s=null!=n?n:l.length-1,m=s>=0&&s<l.length?l[s]:null;if(null!==m&&m.materialKey===e.materialKey&&m.indexFrom+m.indexCount===e.indexFrom&&m.geometryType===e.geometryType)m.indexCount+=e.indexCount;else{const n=new GraphicDisplayList_o;n.indexFrom=e.indexFrom,n.indexCount=e.indexCount,n.materialKey=e.materialKey,n.geometryType=e.geometryType,GraphicDisplayList_t(l,s+1,0,n)}}_removeFromList(e){const n=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(n,i),l=r.length;let s;for(let t=0;t<l;++t){const n=r[t];if(e.indexFrom+e.indexCount>n.indexFrom&&e.indexFrom<n.indexFrom+n.indexCount&&n.geometryType===e.geometryType){s=t;break}}if(void 0!==s){const n=r[s];if(e.indexFrom===n.indexFrom)return n.indexCount-=e.indexCount,n.indexFrom+=e.indexCount,0===n.indexCount&&GraphicDisplayList_t(r,s,1),s-1;if(e.indexFrom+e.indexCount===n.indexFrom+n.indexCount)return n.indexCount-=e.indexCount,0===n.indexCount?(GraphicDisplayList_t(r,s,1),s-1):s;{const i=n.indexFrom,l=e.indexFrom-n.indexFrom,m=e.indexCount,y=n.indexFrom+n.indexCount-(e.indexFrom+e.indexCount);n.indexCount=l;const d=new GraphicDisplayList_o;return d.geometryType=n.geometryType,d.materialKey=n.materialKey,d.indexFrom=i+l+m,d.indexCount=y,GraphicDisplayList_t(r,s+1,0,d),s}}return null}_getDisplayList(e,t){let n;const o=this.symbolLevels.length;for(let i=0;i<o;i++)if(this.symbolLevels[i].symbolLevel===e){n=this.symbolLevels[i];break}let s;n||(n=new l,n.symbolLevel=e,this.symbolLevels.push(n));const m=n.zLevels.length;for(let i=0;i<m;i++)if(n.zLevels[i].zLevel===t){s=n.zLevels[i];break}return s||(s=new GraphicDisplayList_r,s.geometryDPInfo=new i,s.zLevel=t,n.zLevels.push(s)),s.geometryDPInfo.unified||(s.geometryDPInfo.unified=[]),s.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class GraphicDisplayList_o{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new GraphicDisplayList_o;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class i{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new i;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class GraphicDisplayList_r{constructor(){this.geometryDPInfo=new i}clone(){const e=new GraphicDisplayList_r;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class l{constructor(){this.zLevels=[]}clone(){const e=new l;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class MeshData_t{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(t,e,a){for(const s in t)this.vertexData.set(s,t[s]);for(const s in this.vertexData)null===t[s]&&this.vertexData.delete(s);this.vertexCount=e,this.indexData=a}}class WGLDisplayRecord_s{constructor(t,e,s,i=0,r=0){this.id=t,this.geometryType=e,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0,this._sortKey=null}get sortKey(){return null==this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const t=new WGLDisplayRecord_s(this.id,this.geometryType,this.materialKey);return t.vertexFrom=this.vertexFrom,t.vertexCount=this.vertexCount,t.indexFrom=this.indexFrom,t.indexCount=this.indexCount,t.zOrder=this.zOrder,t.symbolLevel=this.symbolLevel,t.meshData=this.meshData,t.minZoom=this.minZoom,t.maxZoom=this.maxZoom,t}setMeshDataFromBuffers(s,i,r){const o=new MeshData_t;for(const t in i){const r=i[t].stride,a=i[t].data;if(!a)continue;const h=[],n=(0,Utils.vq)(r);for(let t=0;t<r*s.vertexCount/n;++t)h[t]=a[t+r*s.vertexFrom/n];o.vertexData.set(t,h)}o.indexData.length=0;for(let t=0;t<s.indexCount;++t)o.indexData[t]=r[t+s.indexFrom]-s.vertexFrom;o.vertexCount=s.vertexCount,this.meshData=o}readMeshDataFromBuffers(s,i){this.meshData?this.meshData.clear():this.meshData=new MeshData_t;for(const t in s){const i=s[t].stride,r=s[t].data,o=[],a=(0,Utils.vq)(i);for(let t=0;t<i*this.vertexCount/a;++t)o[t]=r[t+i*this.vertexFrom/a];this.meshData.vertexData.set(t,o)}this.meshData.indexData.length=0;for(let t=0;t<this.indexCount;++t)this.meshData.indexData[t]=i[t+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(t,s,i,r){if(this.meshData){for(const i in s){const r=s[i].stride,o=this.meshData.vertexData.get(i),a=s[i].data,h=(0,Utils.vq)(r);for(let e=0;e<r*this.meshData.vertexCount/h;++e)a[e+r*t/h]=o[e]}for(let e=0;e<this.meshData.indexData.length;++e)r[e+i]=this.meshData.indexData[e]+t;this.vertexFrom=t,this.vertexCount=this.meshData.vertexCount,this.indexFrom=i,this.indexCount=this.meshData.indexData.length}}static writeAllMeshDataToBuffers(t,e,s){let i=0,r=0;for(const o of t)o.writeMeshDataToBuffers(i,e,r,s),i+=o.vertexCount,r+=o.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(t){return t.push(this.geometryType),t.push(this.materialKey),t.push(this.vertexFrom),t.push(this.vertexCount),t.push(this.indexFrom),t.push(this.indexCount),t.push(this.minZoom),t.push(this.maxZoom),t}static deserialize(t,e){const i=t.readInt32(),r=t.readInt32(),o=new WGLDisplayRecord_s(e.id,i,r);return o.vertexFrom=t.readInt32(),o.vertexCount=t.readInt32(),o.indexFrom=t.readInt32(),o.indexCount=t.readInt32(),o.minZoom=t.readInt32(),o.maxZoom=t.readInt32(),o}}function serializationUtils_e(e,n){if(null!==n){e.push(n.length);for(const r of n)r.serialize(e);return e}e.push(0)}class WGLDisplayObject_e{constructor(s){this.insertAfter=null,this.id=s,this.displayRecords=[]}copy(){const s=new WGLDisplayObject_e(this.id);return s.set(this),s}clone(){const s=new WGLDisplayObject_e(this.id);return s.displayRecords=this.displayRecords.map((s=>s.clone())),s.insertAfter=this.insertAfter,s}set(s){this.id=s.id,this.displayRecords=s.displayRecords,this.insertAfter=s.insertAfter}serialize(s){return s.push(this.id),serializationUtils_e(s,this.displayRecords),s}static deserialize(i){const r=i.readInt32(),d=new WGLDisplayObject_e(r),o={id:r};return d.displayRecords=function serializationUtils_n(e,n,r){const t=e.readInt32(),o=new Array(t);for(let i=0;i<o.length;i++)o[i]=n.deserialize(e,r);return o}(i,WGLDisplayRecord_s,o)??[],d}}class TileDisplayData_e{constructor(){this.displayObjects=[],this._displayList=null}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const s of this.displayObjects)this._displayObjectRegistry.set(s.id,s)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new GraphicDisplayList_n;for(const s of this.displayObjects)for(const t of s.displayRecords)this._displayList.addToList(t)}clone(){const s=new TileDisplayData_e;return this.displayObjects&&(s.displayObjects=this.displayObjects.map((s=>s.clone()))),s}serialize(s){return serializationUtils_e(s,this.displayObjects),s}_deserializeObjects(s){const i=s.readInt32(),e=new Array(i),a=new Map;for(let l=0;l<e.length;++l){const i=WGLDisplayObject_e.deserialize(s);e[l]=i,a.set(i.id,i)}this.displayObjects=e,this._displayList=null,this._displayObjectRegistry=a}static deserialize(s){const t=new TileDisplayData_e;return t._deserializeObjects(s),t}}var DisplayRecordReader=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/DisplayRecordReader.js");class VertexBuffer_t{constructor(e,t){this.data=e,this.stride=t}static decode(r){const s=(0,Utils.Jg)(r.data,r.stride),n=r.stride;return new VertexBuffer_t(s,n)}static fromVertexVector(r){const s=(0,Utils.Jg)(r.data.buffer(),r.stride),n=r.stride;return new VertexBuffer_t(s,n)}}class VertexBuffer_r{constructor(e,t,r){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=r}static decode(e){const s=e.geometryType,n=e.indexBuffer,o={};for(const r in e.namedBuffers)o[r]=VertexBuffer_t.decode(e.namedBuffers[r]);return new VertexBuffer_r(s,n,o)}static fromVertexData(s,n){const o=s.indices,c=(0,Utils.Jg)(s.vertices,s.stride),i=s.stride,d={geometry:new VertexBuffer_t(c,i)};return new VertexBuffer_r(n,o,d)}static fromVertexVectors(e){const s=e.geometryType,n=e.indexVector.buffer(),o={};let c;for(c in e.namedVectors)o[c]=VertexBuffer_t.fromVertexVector(e.namedVectors[c]);return new VertexBuffer_r(s,n,o)}}var Writer=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/util/Writer.js");class VertexVector_s{get vertexCount(){const t=this.stride/4,e=this.data.length/t;return e!==(0|e)&&console.debug("Corrupted stride"),e}constructor(t,e){this.data=t,this.stride=e}transfer(t,e){const r=this.data.buffer();t.vertexCount=this.vertexCount,t.data=r,t.stride=this.stride,e.push(r)}}class VertexVector_o{constructor(e,o,n){this.geometryType=e,this.indexVector=new Writer.A(Uint32Array,6*o),this.namedVectors={};const i=(0,Utils.jG)(e,n);for(const t in i){const e=i[t];let n;switch(e%4){case 0:case 2:n=new Writer.A(Uint32Array,e*o);break;case 1:case 3:n=new Writer.A(Uint8Array,e*o)}this.namedVectors[t]=new VertexVector_s(n,e)}}get(t){return this.namedVectors[t].data}getVector(t){return this.namedVectors[t]}transfer(t,e){const r=this.indexVector.buffer(),s={};let o;for(o in e.push(r),this.namedVectors){const t=this.namedVectors[o];s[o]={},t.transfer(s[o],e)}t.geometryType=this.geometryType,t.indexBuffer=r,t.namedBuffers=s,this.destroy()}intoBuffers(){const t=VertexBuffer_r.fromVertexVectors(this);return this.destroy(),t}destroy(){this.indexVector=null,this.namedVectors=null}}const TileData_d=new MemoryRequirements_e,p=new MemoryRequirements_e;function h(e,t){const r={};for(const s in e){const i={data:(0,Utils.NM)(t,e[s]),stride:e[s]};r[s]=i}return r}class B{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){if(TileData_d.reset(),!this.tileDisplayData)return;const t=function y(e){const t=[[],[],[],[],[]],r=e;for(const s of r)for(const e of s.displayRecords)t[e.geometryType].push(e);return t}(this.tileDisplayData.displayObjects);for(const e of t)for(const t of e)t&&TileData_d.needMore(t.geometryType,t.meshData?t.meshData.vertexCount:t.vertexCount,t.meshData?t.meshData.indexData.length:t.indexCount);const r=t.length,i=new TileBufferData_f;for(let s=0;s<r;++s){i.geometries[s].indexBuffer=new Uint32Array(Math.round(arrayUtils.Hl*TileData_d.indicesFor(s)));const t=[],r=this.tileBufferData?.geometries[s].vertexBuffer;if(!r)continue;for(const e in r)t.push(r[e].stride);const a=B._computeVertexAlignment(t),n=Math.round(arrayUtils.Hl*TileData_d.verticesFor(s)),f=B._align(n,a);for(const e in r){const t=r[e].stride;i.geometries[s].vertexBuffer[e]={stride:t,data:(0,Utils.NM)(f,t)}}}p.reset(),this.tileDisplayData.displayList?.clear();for(let e=0;e<r;++e){const r=t[e];for(const t of r){if(t.meshData)t.writeMeshDataToBuffers(p.verticesFor(e),i.geometries[e].vertexBuffer,p.indicesFor(e),i.geometries[e].indexBuffer),t.meshData=null;else{const r=this.tileBufferData?.geometries[e];if(r){const s=r.vertexBuffer,o=r.indexBuffer,n=i.geometries[e].vertexBuffer,f=i.geometries[e].indexBuffer,l=p.verticesFor(e),u=p.indicesFor(e);(0,Utils.Hp)(l,u,n,f,t,s,o),t.vertexFrom=l,t.indexFrom=u}}p.needMore(e,t.vertexCount,t.indexCount)}}const{displayList:n,displayObjects:f}=this.tileDisplayData;if(n)for(const e of f)n.addToList(e.displayRecords);this.tileBufferData=i}getStrides(){const e=[],t=this.tileBufferData?.geometries;if(!t)return e;for(let r=0;r<t.length;++r){const s=t[r];e[r]={};for(const t in s.vertexBuffer)e[r][t]=s.vertexBuffer[t].stride}return e}clone(){const e=new B;return e.tileBufferData=this.tileBufferData?.clone()??null,e.tileDisplayData=this.tileDisplayData?.clone()??null,e}_guessSize(){const e=this.tileDisplayData?.displayObjects??[],t=Math.min(e.length,4);let i=0;for(let o=0;o<t;o++)i=Math.max(i,e[o].displayRecords.length);return 2*(12*e.length+e.length*i*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),r=this.tileDisplayData.serialize(new Writer.A(Int32Array,this._guessSize())).buffer();return t.push(r),{result:{displayData:r,bufferData:e},transferList:t}}static fromVertexData(e,r){const s={},i=new Map;for(const t of r)i.set(t.id,t);return(0,Utils.Th)((r=>{const o=e.data[r];if(null!=o){const e=DisplayRecordReader.z.from(o.records).getCursor();for(;e.next();){const t=e.id,s=e.materialKey,o=e.indexFrom,a=e.indexCount,n=e.vertexFrom,l=e.vertexCount,u=i.get(t),c=new WGLDisplayRecord_s(t,r,s);c.indexFrom=o,c.indexCount=a,c.vertexFrom=n,c.vertexCount=l,u.displayRecords.push(c)}s[r]=VertexBuffer_r.fromVertexData(o,r)}else s[r]=new VertexVector_o(r,0,enums.w4.DEFAULT).intoBuffers()})),B.fromMeshData({displayObjects:r,vertexBuffersMap:s})}static fromMeshData(e){const t=new B,r=new TileDisplayData_e,o=new TileBufferData_f;r.displayObjects=e.displayObjects;for(const s in e.vertexBuffersMap){const t=s,r=e.vertexBuffersMap[t];o.geometries[t].indexBuffer=r.indexBuffer,o.geometries[t].vertexBuffer=r.namedBuffers}return t.tileDisplayData=r,t.tileBufferData=o,t}static bind(e,t){const r=new B;return r.tileDisplayData=e,r.tileBufferData=t,r}static create(e,t){const r=new B;r.tileDisplayData=new TileDisplayData_e,r.tileDisplayData.displayObjects=e;const o=[0,0,0,0,0],a=[0,0,0,0,0],n=[[],[],[],[],[]];for(const s of e)for(const e of s.displayRecords)n[e.geometryType].push(e),o[e.geometryType]+=e.meshData.vertexCount,a[e.geometryType]+=e.meshData.indexData.length;const l=new TileBufferData_f,u=function x(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let s=0;s<5;s++){const e=new Uint32Array(a[s]),t=h(u[s],o[s]);WGLDisplayRecord_s.writeAllMeshDataToBuffers(n[s],t,e),l.geometries[s]={indexBuffer:e,vertexBuffer:t}}return r.tileBufferData=l,r}static _align(e,t){const r=e%t;return 0===r?e:e+(t-r)}static _computeVertexAlignment(e){let t=!1,r=!1;for(const s of e)s%4==2?t=!0:s%4!=0&&(r=!0);return r?4:t?2:1}}var MeshData=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/mesh/MeshData.js"),WGLMeshFactory=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/mesh/factories/WGLMeshFactory.js"),WGLTemplateStore=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/mesh/templates/WGLTemplateStore.js"),Matcher=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/webgl/util/Matcher.js"),schemaUtils=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/features/schemaUtils.js"),AttributeStore=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/features/support/AttributeStore.js"),ComputedAttributeStorage=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/features/support/ComputedAttributeStorage.js"),featureConversionUtils=__webpack_require__("./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js"),FeatureSetReader=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReader.js"),FeatureSetReaderJSON=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/features/support/FeatureSetReaderJSON.js");class GraphicsReader_o extends FeatureSetReaderJSON.K{static from(s,n,i){const c=FeatureSetReader.Y.createInstance(),u=[],a=s.filter((r=>!!r.geometry));for(const e of a){const s=(0,jsonUtils.$B)(e.geometry);(0,featureConversionUtils.X9)(u,[e],s,!1,!1,n)}return new GraphicsReader_o(c,u,i)}constructor(r,t,e){super(r,t,null),this._transform=e}get geometryType(){const r=this._current;return r?r.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const r=new GraphicsReader_o(this.instance,this._features,this._transform);return this.copyInto(r),r}}var screenUtils=__webpack_require__("./node_modules/@arcgis/core/core/screenUtils.js"),rbush=__webpack_require__("./node_modules/@arcgis/core/chunks/rbush.js"),boundsUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/boundsUtils.js"),normalizeUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/normalizeUtils.js"),CIMSymbolDrawHelper=__webpack_require__("./node_modules/@arcgis/core/symbols/cim/CIMSymbolDrawHelper.js"),centroid=__webpack_require__("./node_modules/@arcgis/core/geometry/support/centroid.js"),quantizationUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/quantizationUtils.js"),OptimizedGeometry=__webpack_require__("./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");const GraphicStoreItem_p=new OptimizedGeometry.A,GraphicStoreItem_y=new OptimizedGeometry.A,g="esriGeometryPolyline";function f(t){t.coords.length=0,t.lengths.length=0}class GraphicStoreItem_d{constructor(){this.bounds=(0,aaBoundingRect.vt)(),this.graphic=null}static acquire(t=null,e,s,r,i){let o;return 0===GraphicStoreItem_d._pool.length?o=new GraphicStoreItem_d:(o=GraphicStoreItem_d._pool.pop(),this._set.delete(o)),o.acquire(t,e,s,r,i),o}static release(t){t&&!this._set.has(t)&&(t.release(),this._pool.push(t),this._set.add(t))}static getCentroidQuantized(t,e){if((0,jsonUtils.Bi)(t.geometry)){const r=t.symbol;if(null==r)return null;if(r?.layers.length>0&&r.layers.some((t=>"text"===t.type||"marker"===t.type))){const r=(0,centroid.l8)(t.geometry);return null!==r?(0,quantizationUtils.Gy)(e,{},{x:r[0],y:r[1]},!1,!1):null}}return null}acquire(t=null,e,s,r,i){t&&this.set(t,e,s,r,i)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(t,e,s,r,i){this.graphic=t,this.geometry=s,this.symbolResource=e,this.bounds=r,i&&(this.size=i)}getGeometryQuantized(t,s,r,o){const c=this.geometry,d=(0,jsonUtils.$B)(c);if(null==d)return null;switch(d){case"esriGeometryPolygon":{const e=c,{rings:s}=e;if(!s||0===s.length)return null;let r;if(r=1===s.length&&2===s[0].length?(0,quantizationUtils.qj)(t,{paths:[[s[0][0],s[0][1]]]}):(0,quantizationUtils.qj)(t,this.geometry),!r){const e={x:s[0][0][0],y:s[0][0][1]};if(r=(0,quantizationUtils.qj)(t,e),r){const{x:t,y:e}=r;return{rings:[[[t-1,e],[1,-1],[1,1],[-1,1],[-1,-1]]]}}}return r}case"esriGeometryPolyline":{const e=c;f(GraphicStoreItem_p),f(GraphicStoreItem_y);const s=e.hasZ??!1,r=e.hasM??!1;return(0,featureConversionUtils.Ap)(GraphicStoreItem_p,e),(0,featureConversionUtils.kz)(GraphicStoreItem_y,GraphicStoreItem_p,s,r,g,t.scale[0]),(0,featureConversionUtils.Nl)(GraphicStoreItem_p,GraphicStoreItem_y,s,r,g,t),(0,featureConversionUtils.BW)(GraphicStoreItem_p,e.hasZ??!1,e.hasM??!1)}case"esriGeometryMultipoint":{const i=c,u=.5*o*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),h=(0,spatialReferenceUtils.Vp)(r);let a=i.points;if(h){const[t,r]=h.valid,i=r-t;a=a.filter((o=>{if(o[0]+u>r||o[0]-u<t){const t=[...o];return o[0]+u>r?t[0]-=i:t[0]+=i,(0,aaBoundingRect.k$)(s,o,u)||(0,aaBoundingRect.k$)(s,t,u)}return(0,aaBoundingRect.k$)(s,o,u)}))}return 0===a.length?{points:a}:(0,quantizationUtils.qj)(t,{points:a})}}return(0,quantizationUtils.qj)(t,this.geometry)}}GraphicStoreItem_d._pool=[],GraphicStoreItem_d._set=new Set;var graphicsUtils=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/graphics/graphicsUtils.js");const m={minX:0,minY:0,maxX:0,maxY:0},GraphicStore_p=(0,aaBoundingRect.vt)();function GraphicStore_f(e,t,i,r,s){return m.minX=t,m.minY=i,m.maxX=r,m.maxY=s,e.search(m)}function _(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class b{constructor(e,i,r,s,o,n,l){this._graphics=s,this._onAdd=o,this._onRemove=n,this._hashToCIM=l,this._index=(0,rbush.r)(9,_),this._itemByGraphic=new Map,this._inflatedSizeHelper=new CIMSymbolHelper.Sc,this._tileInfoView=e,this._uidFieldName=r;const u=e.getClosestInfoForScale(i);u&&(this._resolution=this._tileInfoView.getTileResolution(u.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new CIMSymbolDrawHelper.CK(e)}hitTest(e,t,s,o,l){e=(0,normalizeUtils.mT)(e,this._tileInfoView.spatialReference);const u=.5*o*window.devicePixelRatio*s;GraphicStore_p[0]=e-u,GraphicStore_p[1]=t-u,GraphicStore_p[2]=e+u,GraphicStore_p[3]=t+u;const h=.5*o*(s+graphicsUtils.RA),a=GraphicStore_f(this._index,e-h,t-h,e+h,t+h);if(!a||0===a.length)return[];const d=[],m=(0,aaBoundingRect.vt)(),g=(0,aaBoundingRect.vt)();for(const i of a){const{geometry:e,symbolResource:t}=i;this._getSymbolBounds(m,t,e,g,l),g[3]=g[2]=g[1]=g[0]=0,(0,aaBoundingRect.HY)(m,GraphicStore_p)&&i.graphic?.visible&&d.push(i)}if(0===d.length)return[];const _=this._hittestDrawHelper,b=[];for(const i of d){const{geometry:e,symbolResource:t}=i,{hash:r,textInfo:s}=t,n=this._hashToCIM.get(r);n&&_.hitTest(GraphicStore_p,n.symbol,e,s,l,o)&&b.push(i)}return b.sort(GraphicStore_y),b.map((e=>e.graphic))}getGraphicsData(e,t,i){const r=this._searchForItems(t);if(0===r.length||0===i.length)return[];r.sort(((e,t)=>e.zorder-t.zorder)),r[0].insertAfter=-1;for(let a=1;a<r.length;a++)r[a].insertAfter=r[a-1].graphic.uid;r.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let s,o=0,n=0;const l=t.resolution,u=[],h={originPosition:"upperLeft",scale:[l,l],translate:[t.bounds[0],t.bounds[3]]};for(const c of i){for(n=-2;o<r.length;)if(s=r[o],o++,c.uid===s.graphic.uid){n=s.insertAfter;break}if(!s?.geometry||-2===n)continue;const i=s.getGeometryQuantized(h,t.bounds,this._tileInfoView.spatialReference,l),d={...s.graphic.attributes};d[this._uidFieldName]=c.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),u.push({centroid:GraphicStoreItem_d.getCentroidQuantized(s,h),geometry:i,attributes:d,symbol:s.symbol,groupId:s.groupId,insertAfter:n,zorder:s.zorder})}return u.sort(((e,t)=>e.zorder-t.zorder)),u}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:i,resolution:r}=t,s=this._searchForItems(t),o=[];return 0===s.length||this._createTileGraphics(o,e,s,{originPosition:"upperLeft",scale:[r,r],translate:[i[0],i[3]]},t),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,i){if(!e||null==t)return;this.has(e)&&this.remove(e),this._onAdd(e);const r=[0,0,0,0],s=this._getSymbolBounds(null,t,i,r,0),o=GraphicStoreItem_d.acquire(e,t,i,null!=s?s:null,r);return this._itemByGraphic.set(e,o),i&&this._index.insert(o),o.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t?.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,i;for(let r=0;r<e.length;r++)i=e[r],t=this._itemByGraphic.get(i),t&&(t.zorder=r)}update(e,t,i){const r=this._itemByGraphic.get(e);r.groupId=null;const o=(0,aaBoundingRect.o8)(r.bounds);this._index.remove(r);const n=this._getSymbolBounds(r.bounds,t,i,r.size,0);return null!=n&&r.set(e,t,i,n,r.size),i&&this._index.insert(r),{oldBounds:o,newBounds:r.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,i=[];for(const[r,s]of t){const e=this._getSymbolBounds(s.bounds,s.symbolResource,s.geometry,s.size,0);s.geometry&&null!=e&&(s.bounds=e,i.push(s))}this._index.load(i)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,i,r,s){const o=this._uidFieldName,n=this._tileInfoView.spatialReference,{bounds:l,resolution:u}=s;let h,c,d,m;i.sort(((e,t)=>e.zorder-t.zorder));for(let p=0;p<i.length;p++){d=i[p],h=d.graphic,c=d.getGeometryQuantized(r,l,n,u),m=0===p?-1:i[p-1].graphic.uid;const s={...d.graphic.attributes};s[o]=h.uid,null==d.groupId&&(d.groupId=t.createTemplateGroup(d.symbol,null)),e.push({centroid:GraphicStoreItem_d.getCentroidQuantized(d,r),geometry:c,attributes:s,symbol:d.symbol,groupId:d.groupId,insertAfter:m,zorder:d.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,r=e.bounds,s=(0,spatialReferenceUtils.Vp)(t);if(s&&t.isWrappable){const[t,o]=s.valid,n=Math.abs(r[2]-o)<1e-5,l=Math.abs(r[0]-t)<1e-5;if((!n||!l)&&(n||l)){const s=e.resolution;let l;l=(0,aaBoundingRect.vt)(n?[t,r[1],t+s*graphicsUtils.RA,r[3]]:[o-s*graphicsUtils.RA,r[1],o,r[3]]);const u=GraphicStore_f(this._index,r[0],r[1],r[2],r[3]),h=GraphicStore_f(this._index,l[0],l[1],l[2],l[3]);return[...new Set([...u,...h])]}}return GraphicStore_f(this._index,r[0],r[1],r[2],r[3])}_getSymbolBounds(t,r,s,n,l){if(!r||!r.symbol||!s)return null;if(t||(t=(0,aaBoundingRect.vt)()),(0,boundsUtils.Rg)(t,s),!n||0===n[0]&&0===n[1]&&0===n[2]&&0===n[3]){const{hash:t,textInfo:i}=r,s=this._hashToCIM.get(t);if(!s)return null;n||(n=[0,0,0,0]);const o=this._inflatedSizeHelper.getSymbolInflateSize(n,s.symbol,this._cimResourceManager,l,i);n[0]=(0,screenUtils.Lz)(o[0]),n[1]=(0,screenUtils.Lz)(o[1]),n[2]=(0,screenUtils.Lz)(o[2]),n[3]=(0,screenUtils.Lz)(o[3])}const u=this._resolution,a=CIMSymbolHelper.Sc.safeSize(n);return t[0]-=a*u,t[1]-=a*u,t[2]+=a*u,t[3]+=a*u,t}}const GraphicStore_y=(e,t)=>{const i=(0,graphicsUtils.NF)(e.graphic),r=(0,graphicsUtils.NF)(t.graphic);return i===r?t.zorder-e.zorder:i-r};var cimSymbolUtils=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/support/cimSymbolUtils.js"),capabilities=__webpack_require__("./node_modules/@arcgis/core/views/webgl/capabilities.js"),createSymbolSchema=__webpack_require__("./node_modules/@arcgis/core/views/2d/layers/features/createSymbolSchema.js");const te=(0,has.A)("esri-2d-graphic-debug");function ie(e,t,i){let s=i.get(e);return s||(s={tile:t,addedOrModified:[],removed:[]},i.set(e,s)),s}let se=class extends((0,Identifiable.sA)(Accessor.A)){constructor(e){super(e),this._storage=new ComputedAttributeStorage.l,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.renderer=null,this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(e,t,i){if(e){const s=(0,schemaUtils.um)(e),r=(0,schemaUtils.wu)({indexCount:0,fields:{}},"feature",e,s);this._matcher=(0,Matcher.P7)(r,t,null,i)}}_createDisplayId(e){let t=this._displayIds.get(e);return t||(t=this._storage.createDisplayId(),this._displayIds.set(e,t)),t}initialize(){this._attributeStore=new AttributeStore.A({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,capabilities.Cx)("2d")),this.container.checkHighlight=()=>this._attributeStore.hasHighlight;const i=new WGLTemplateStore._y(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new b(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}),this._hashToCIM),this._meshFactory=new WGLMeshFactory.K(null,this.uid,i),this._templateStore=i,this.addHandles([(0,reactiveUtils.wB)((()=>this._effectiveRenderer),(e=>{this._createMatcher(e,i,this.container.stage.resourceManager);for(const t of this.graphics)this._pendingUpdate.updated.add(t);this.requestUpdate()})),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{te&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.addHandles(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const e=this.container.stage.resourceManager;this._createMatcher(this._effectiveRenderer,i,e),this._graphicStore.setResourceManager(e),this._attached=!0,this.notifyChange("updating")}))]);const s=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:s,removed:[]})}get _effectiveRenderer(){return"function"==typeof this.renderer?this.renderer():this.renderer}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._pendingUpdate.added.size>0||this._pendingUpdate.removed.size>0||this._pendingUpdate.updated.size>0||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0||this._attributeStore?.updatingHandles.updating||this._processing}hitTest(e){if(!this.view||this.view.suspended)return[];const{resolution:t,rotation:i}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,i)}update(e){(0,promiseUtils.Te)(this._controller.signal);const t=e.state,{resolution:i}=t;if(this._graphicStore.updateLevel(i),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:i}=e;switch(i){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,t.visible),this._attributeStore.sendUpdates()}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e))).filter(arrayUtils.Ru);this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,aaBoundingRect.VL)(t)||0===(0,aaBoundingRect.uJ)(t))return[];const i=(0,graphicsUtils.aW)(t,this.view.spatialReference);return null!=i?[...new Set([...this.view.graphicsTileStore.boundsIntersections(i[0]),...this.view.graphicsTileStore.boundsIntersections(i[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,promiseUtils.Te)(this._controller.signal);const t=e.tile,i=this._getGraphicsData(this._templateStore,t,e.addedOrModified),s=await this._processGraphics(t,i);return(0,promiseUtils.Te)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:s,remove:e.removed,end:!0,clear:!1,sort:!1}),s}_patchTile(e,t){const i=this._tiles.get(e);i&&(this.container.onTileData(i,t),this.container.requestRender())}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const i of e.added)t.added.add(i);for(const i of e.moved)t.updated.add(i);for(const i of e.removed)this._pendingUpdate.added.has(i)?t.added.delete(i):t.removed.add(i);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const i of this.graphics.items)t.added.has(i)?e.added.push(i):t.updated.has(i)&&e.updated.push(i);for(const i of t.removed)this._graphicStore.has(i)&&e.removed.push(i);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:i}=this._getGraphicsToUpdate(),s=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t)}const o=[],a=new Array(e.length+t.length);for(let e=0;e<i.length;e++){const t=i[e],n=this._getIntersectingTiles(t);for(const e of n)r=e.id,ie(r,e,s).removed.push(this._displayIds.get(t.uid));o.push(this._updateGraphic(t,null)),a[e]=t}const n=i.length;for(let t=0;t<e.length;t++){const i=e[t];a[n+t]=i,this._graphicsSet.add(i),o.push(this._addGraphic(i))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const i of t)r=i.id,ie(r,i,s).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let h;this._flipUpdatingGraphics(),await Promise.all(o);for(let e=0;e<a.length;e++){h=a[e];const t=this._getIntersectingTiles(h);for(const e of t)r=e.id,ie(r,e,s).addedOrModified.push(h)}this._graphicStore.updateZ();const l=[];for(const[e,t]of s)l.push(this._updateTile(t));await Promise.all(l)}catch(o){(0,promiseUtils.zf)(o)}for(const a of t)try{const e=await this._getSymbolForGraphic(a,null);if(e){const t=e.hash();this._hashToExpandedSymbol.delete(t)}}catch(o){(0,promiseUtils.zf)(o)}s.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return null==e.geometry?null:{geometryType:(0,jsonUtils.$B)(e.geometry),spatialReference:SpatialReference.A.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return(0,promiseUtils.Te)(this._controller.signal),null!=e.symbol?Promise.resolve(e.symbol):null!=this._effectiveRenderer?this._effectiveRenderer.getSymbolAsync(e,{scale:this.view.state.scale,signal:null!=t?t.signal:null}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,i){let s=this._hashToCIM.get(t);if(s)return Promise.resolve(s);const r=(0,CIMSymbolHelper.Vb)(e);if(null!=r){if("CIMSymbolReference"===r.type)return s=r,this._hashToCIM.set(t,s),Promise.resolve(s);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=r.fetchCIMSymbol(i).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),(0,promiseUtils.QP)(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,i,s){const r=this._hashToExpandedSymbol.get(i);if(r)return Promise.resolve(r);let o=this._hashToExpandedSymbolPromise.get(i);if(o)return o;const a=this.container.stage,n=this._getArcadeInfo(t),h=(0,schemaUtils.um)(null),l=(0,createSymbolSchema.createSymbolSchema)(e,h);return o=(0,cimSymbolUtils.Z)(l,n,a.resourceManager,s),this._hashToExpandedSymbolPromise.set(i,o),o.then((e=>(this._hashToExpandedSymbol.set(i,e),this._hashToExpandedSymbolPromise.delete(i),e))),o}async _getSymbolResources(e,t){return(0,promiseUtils.Te)(this._controller.signal),this.container.stage?this._getSymbolForGraphic(e,t).then((i=>{if(!i)return null;const r=i.hash();return this._getCIMSymbol(i,r,t).then((a=>null==a?null:this._expandCIMSymbol(a,e,r,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const a=new Array(t.length);for(let e=0;e<t.length;e++){const r=t[e],o=[],[n]=(0,BidiText.y)(r.text);r.text=n,"text"===i.type&&(r.lineWidth=i.lineWidth);for(let e=0;e<n.length;e++)o.push(n.charCodeAt(e));a[e]={symbol:r,id:e,glyphIds:o}}const n=new Map;return this.container.getMaterialItems(a).then((i=>{(0,maybe.Lw)(i);for(let e=0;e<t.length;e++){const s=t[e];n.set(s.cim,{text:s.text,mosaicItem:i[e].mosaicItem})}return{symbol:e,textInfo:n,hash:r}}))}return{symbol:e,hash:r}}))))})).catch((e=>((0,promiseUtils.QP)(e),null))):null}async _projectAndNormalizeGeometry(e,t){if((0,promiseUtils.Te)(this._controller.signal),null==e.geometry||"mesh"===e.geometry.type)return null;let i=e.geometry;if((0,jsonUtils.Bi)(i)){const e=i.rings;i.rings=e}else if((0,jsonUtils.Rg)(i)){const e=i.paths;i.paths=e}else if((0,jsonUtils.ZC)(i)){const s=await this._getSymbolForGraphic(e,t);(0,promiseUtils.Te)(this._controller.signal),i=s&&((0,graphicsUtils.hH)(s.type)||(0,graphicsUtils.Sb)(s.type))?i.center:(0,graphicsUtils.DF)(i)}await(0,projectionSupport.Nk)(i.spatialReference,this.view.spatialReference);const s=(0,normalizeUtilsSync.b3)(i),r=(0,projectionSupport.Cv)(s,i.spatialReference,this.view.spatialReference);return r&&(0,coordsUtils.uC)(r),r}_onTileUpdate(e){const t=(0,spatialReferenceUtils.Vp)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const i of e.added)this._addNewTile(i,t);if(e.removed&&e.removed.length>0)for(const i of e.removed)this._removeTile(i.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,promiseUtils.Te)(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const i={signal:t.signal};try{await this._addOrUpdateGraphic(e,i),(0,promiseUtils.Te)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(s){if(this._graphicIdToAbortController.delete(e.uid),!(0,promiseUtils.zf)(s))throw s}}_updateGraphic(e,t){(0,promiseUtils.Te)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),s=this._getSymbolResources(e,t);return Promise.all([i,s]).then((([t,i])=>{(0,promiseUtils.Te)(this._controller.signal),this._graphicStore.addOrModify(e,i,t)}))}_addOrUpdateGraphic(e,t){(0,promiseUtils.Te)(this._controller.signal);const i=this._projectAndNormalizeGeometry(e,t),s=this._getSymbolResources(e,t);return Promise.all([i,s]).then((([t,i])=>{(0,promiseUtils.Te)(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,i,t)}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,aaBoundingRect.vt)(),e),i=this.view.featuresTilingScheme.getTileResolution(e.level),s=new a(e,i,t[0],t[3]);return this._tiles.set(e,s),this.container.addChild(s),s}async _addNewTile(e,t){const i=this._addTile(e.key),s=this._graphicStore.queryTileData(this._templateStore,e);if(0===s.length)return;if(t){const i=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of s)e.geometry&&((0,jsonUtils.fT)(e.geometry)||(0,jsonUtils.U9)(e.geometry))&&this._wrapPoints(e,i)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,s),remove:[],end:!0,sort:!1};i.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")}catch(o){if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!(0,promiseUtils.zf)(o))throw o}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const i=this._displayIds.get(e),s=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(i,0,0,s|(t?definitions.LY:0))}_getGraphicsData(e,t,i){const s=this.view,r=(0,spatialReferenceUtils.Vp)(s.spatialReference),o=this._graphicStore.getGraphicsData(e,t,i);if(r){const e=Math.round((r.valid[1]-r.valid[0])/t.resolution);for(const t of o)t.geometry&&((0,jsonUtils.fT)(t.geometry)||(0,jsonUtils.U9)(t.geometry))&&this._wrapPoints(t,e)}return o}_wrapPoints(e,t){const i=e.geometry;(0,jsonUtils.U9)(i)?this._wrapMultipoint(i,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const i=e.points,s=[];let r=0,o=0;for(const[a,n]of i){if(s.push([a+r,n]),r=0,t===graphicsUtils.CQ){const e=5*graphicsUtils.RA;a+o<e?(s.push([t,0]),r=-t):a+o>graphicsUtils.CQ-e&&(s.push([-t,0]),r=t)}else a+o<-graphicsUtils.RA?(s.push([t,0]),r=-t):a+o>graphicsUtils.CQ+graphicsUtils.RA&&(s.push([-t,0]),r=t);o+=a}e.points=s}_wrapPoint(e,t){const i=e.geometry;if(t===graphicsUtils.CQ){const s=5*graphicsUtils.RA;i.x<s?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>graphicsUtils.CQ-s&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}else i.x<-graphicsUtils.RA?e.geometry={points:[[i.x,i.y],[t,0]]}:i.x>graphicsUtils.CQ+graphicsUtils.RA&&(e.geometry={points:[[i.x,i.y],[-t,0]]})}_processGraphics(e,t,i){if(!t||!t.length||!this._meshFactory)return Promise.resolve(null);const s=GraphicsReader_o.from(t,this.uid,e.transform),r=this._meshFactory;return this._matcher.then((t=>r.analyzeGraphics(s,this.container.stage.resourceManager,t,null,null,i).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,s))))))}_processAnalyzedGraphics(e,t){const i=this._meshFactory,s=t.getSize(),r=t.getCursor(),o={features:s,records:s,metrics:0},a=new MeshData.U(e.key.id,o,enums.w4.DEFAULT,!1,!1),n=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const s=new WGLDisplayObject_e(t.displayId);s.insertAfter=t.insertAfter,n.push(s),i.writeGraphic(a,r,e.level,this.container.stage.resourceManager)}const h=e.tileInfoView.tileInfo.isWrappable,l=a.serialize(h);if(1!==l.length)return new B;const d=l[0].message;return B.fromVertexData(d,n)}_abortProcessingGraphic(e){this._graphicIdToAbortController.get(e)?.abort()}_getNullSymbol(e){const t=e.geometry;return(0,jsonUtils.Rg)(t)?defaults.x3:(0,jsonUtils.Bi)(t)||(0,jsonUtils.ZC)(t)?defaults.JJ:this.defaultPointSymbolEnabled?defaults.jM:null}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};(0,tslib_es6._)([(0,property.MZ)()],se.prototype,"_effectiveRenderer",null),(0,tslib_es6._)([(0,property.MZ)({constructOnly:!0})],se.prototype,"requestUpdateCallback",void 0),(0,tslib_es6._)([(0,property.MZ)()],se.prototype,"container",void 0),(0,tslib_es6._)([(0,property.MZ)({constructOnly:!0})],se.prototype,"graphics",void 0),(0,tslib_es6._)([(0,property.MZ)()],se.prototype,"renderer",void 0),(0,tslib_es6._)([(0,property.MZ)()],se.prototype,"updating",null),(0,tslib_es6._)([(0,property.MZ)()],se.prototype,"view",void 0),(0,tslib_es6._)([(0,property.MZ)()],se.prototype,"updateRequested",void 0),(0,tslib_es6._)([(0,property.MZ)()],se.prototype,"defaultPointSymbolEnabled",void 0),se=(0,tslib_es6._)([(0,subclass.$)("esri.views.2d.layers.support.GraphicsView2D")],se);const re=se}}]);
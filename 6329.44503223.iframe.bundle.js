"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[6329],{"./node_modules/@arcgis/core/layers/ImageryTileLayer.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>J});var tslib_es6=__webpack_require__("./node_modules/@arcgis/core/chunks/tslib.es6.js"),PopupTemplate=__webpack_require__("./node_modules/@arcgis/core/PopupTemplate.js"),rasterRenderers=__webpack_require__("./node_modules/@arcgis/core/rasterRenderers.js"),Error=__webpack_require__("./node_modules/@arcgis/core/core/Error.js"),maybe=__webpack_require__("./node_modules/@arcgis/core/core/maybe.js"),MultiOriginJSONSupport=__webpack_require__("./node_modules/@arcgis/core/core/MultiOriginJSONSupport.js"),promiseUtils=__webpack_require__("./node_modules/@arcgis/core/core/promiseUtils.js"),reactiveUtils=__webpack_require__("./node_modules/@arcgis/core/core/reactiveUtils.js"),property=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/property.js"),ensureType=(__webpack_require__("./node_modules/@arcgis/core/core/arrayUtils.js"),__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/ensureType.js")),enumeration=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/enumeration.js"),reader=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/reader.js"),subclass=__webpack_require__("./node_modules/@arcgis/core/core/accessorSupport/decorators/subclass.js"),Layer=__webpack_require__("./node_modules/@arcgis/core/layers/Layer.js"),BlendLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/BlendLayer.js"),CustomParametersMixin=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/CustomParametersMixin.js"),request=(__webpack_require__("./node_modules/@arcgis/core/geometry.js"),__webpack_require__("./node_modules/@arcgis/core/request.js")),Logger=__webpack_require__("./node_modules/@arcgis/core/core/Logger.js"),spatialReferenceUtils=__webpack_require__("./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js"),arcgisLayerUrl=__webpack_require__("./node_modules/@arcgis/core/layers/support/arcgisLayerUrl.js"),commonProperties=__webpack_require__("./node_modules/@arcgis/core/layers/support/commonProperties.js"),DimensionalDefinition=__webpack_require__("./node_modules/@arcgis/core/layers/support/DimensionalDefinition.js"),MultidimensionalSubset=__webpack_require__("./node_modules/@arcgis/core/layers/support/MultidimensionalSubset.js"),RasterFunction=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterFunction.js"),RasterJobHandler=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterJobHandler.js"),TileInfo=__webpack_require__("./node_modules/@arcgis/core/layers/support/TileInfo.js"),JSONSupport=__webpack_require__("./node_modules/@arcgis/core/core/JSONSupport.js"),core_Promise=__webpack_require__("./node_modules/@arcgis/core/core/Promise.js"),RasterStorageInfo=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterStorageInfo.js"),multidimensionalUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/multidimensionalUtils.js"),RawBlockCache=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/RawBlockCache.js"),RasterCodec=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/RasterCodec.js"),pixelUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js"),rasterProjectionHelper=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js"),vectorFieldUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/vectorFieldUtils.js"),Extent=__webpack_require__("./node_modules/@arcgis/core/geometry/Extent.js"),Point=__webpack_require__("./node_modules/@arcgis/core/geometry/Point.js");let $=class extends((0,core_Promise.v)(JSONSupport.wq)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=(0,rasterProjectionHelper.zD)();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:TileInfo.Z.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=(0,rasterProjectionHelper.ut)(t.spatialReference);return(0,maybe.pC)(e)&&t.extent.width>=e/2}set url(t){this._set("url",(0,arcgisLayerUrl.Nm)(t,Logger.Z.getLogger(this.declaredClass)))}async open(t){throw new Error.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,i,o={}){const r=o.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(t,e,i,r);return this.fetchPixels(n,r.size[0],r.size[1],o)}async identify(t,e={}){t=(0,ensureType.TJ)(Point.Z,t).clone().normalize();const{multidimensionalDefinition:i,timeExtent:o}=e,{hasMultidimensionalTranspose:r,multidimensionalInfo:l}=this.rasterInfo;let{transposedVariableName:c}=e;const m=(0,maybe.pC)(l)&&r&&(null!=o||(0,multidimensionalUtils.WU)(i));m&&!c&&(c=(0,maybe.pC)(i)&&i.length>0?i[0].variableName??void 0:l.variables[0].name,e={...e,transposedVariableName:c}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:f,extent:u}=this.rasterInfo,{datumTransformation:p}=e;let d=(0,rasterProjectionHelper.nF)(t,f,p);if(!u.intersects(d))return{location:d,value:null};if((0,maybe.pC)(this.rasterInfo.transform)){const t=this.rasterInfo.transform.inverseTransform(d);if(!this.rasterInfo.nativeExtent.intersects(t))return{location:t,value:null};d=t}let x=0;const g=(0,maybe.pC)(c)&&(0,maybe.pC)(l)&&this.rasterInfo.hasMultidimensionalTranspose;if(!g)if(e.srcResolution)x=(0,rasterProjectionHelper.kr)(e.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(x=await this.computeBestPyramidLevelForLocation(t,e),null==x)return{location:d,value:null};const y=this.identifyPixelLocation(d,x,null,g);if(null===y)return{location:d,value:null};const{row:R,col:w,rowOffset:k,colOffset:T,blockWidth:B}=y,P=c??(0,maybe.Wg)(e.sliceId),W=(0,RawBlockCache.Rq)(this.url,P),M=`${x}/${R}/${w}`;let C=(0,RawBlockCache.Qg)(W,null,M);(0,maybe.Wi)(C)&&(C=this.fetchRawTile(x,R,w,e),(0,RawBlockCache.gX)(W,null,M,C));const _=await C;if((0,maybe.Wi)(_)||!_.pixels?.length)return{location:d,value:null};const j=k*B+T;return this._processIdentifyResult(_,{srcLocation:d,position:j,pyramidLevel:x,useTransposedTile:!!g,requestSomeSlices:m,identifyOptions:e})}async fetchPixels(t,e,i,o={}){if(t=(0,rasterProjectionHelper.kZ)(t),(o=this._getRequestOptionsWithSliceId(o)).requestRawData)return this._fetchPixels(t,e,i,o);const r=(0,rasterProjectionHelper.ut)(t.spatialReference),n=(0,rasterProjectionHelper.Hq)(t);if((0,maybe.Wi)(r)||0===n||1===n&&this._isGlobalWrappableSource)return this._fetchPixels(t,e,i,o);if(n>=3)return{extent:t,pixelBlock:null};const s=[],{xmin:l,xmax:c}=t,m=Math.round(r/(c-l)*e),f=m-Math.round((r/2-l)/(c-l)*e);let h=0;const u=[];for(let a=0;a<=n;a++){const p=new Extent.Z({xmin:0===a?l:-r/2,xmax:a===n?c-r*a:r/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),d=0===a?m-f:a===n?e-h:m;h+=d,u.push(d);const x=o.disableWrapAround&&a>0?null:this._fetchPixels(p,d,i,o);s.push(x)}const p=(await Promise.all(s)).map((t=>t?.pixelBlock));let d=null;const x={width:e,height:i};return d=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:u},o)).pixelBlock:(0,pixelUtils.us)(p,x,{blockWidths:u}),{extent:t,srcExtent:(0,rasterProjectionHelper.tB)(t,this.rasterInfo.spatialReference,o.datumTransformation),pixelBlock:d}}async fetchRawPixels(t,e,i,o={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const r=await this._fetchRawTiles(t,e,i,o),{nativeExtent:s,nativePixelSize:a,storageInfo:l}=this.rasterInfo,c=2**t,m=a.x*c,f=a.y*c,h=new Extent.Z({xmin:s.xmin+m*e.x,xmax:s.xmin+m*(e.x+i.width-1),ymin:s.ymax-f*(e.y+i.height-1),ymax:s.ymax-f*e.y,spatialReference:s.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:u,mosaicSize:p}=r;if(1===u.length&&(0,maybe.pC)(u[0])&&u[0].width===i.width&&u[0].height===i.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const d=t>0?l.pyramidBlockWidth:l.blockWidth,x=t>0?l.pyramidBlockHeight:l.blockHeight,g={x:e.x%d,y:e.y%x};let y;return y=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:u,srcMosaicSize:p,destDimension:i,clipOffset:g,clipSize:i,coefs:null,sampleSpacing:null,interpolation:o.interpolation,alignmentInfo:null,blockWidths:null},o)).pixelBlock:(0,pixelUtils.us)(u,p,{clipOffset:g,clipSize:i}),{extent:h,srcExtent:h,pixelBlock:y}}fetchRawTile(t,e,o,r){throw new Error.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return(0,rasterProjectionHelper.tB)(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?(0,RasterCodec.J)(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,i,o=0){const{customFetchParameters:r}=this.ioConfig,{range:n,query:s,headers:a}=i;o=o??i.retryCount??this.ioConfig.retryCount;const l=n?{Range:`bytes=${n.from}-${n.to}`}:null;try{return await(0,request.default)(t,{...i,query:{...s,...r},headers:{...a,...l}})}catch(c){if(o>0)return o--,this.request(t,i,o);throw c}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return(0,maybe.Wi)(e)||(0,maybe.Wi)(t)||0===t.length?null:(0,multidimensionalUtils.gk)(t,e)}getTileExtentFromTileInfo(t,e,i,o){const r=(0,maybe.s3)(o.lodAt(t));return this.getTileExtent({x:r.resolution,y:r.resolution},e,i,o.origin,o.spatialReference,o.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:i,pixelSize:o}=this.rasterInfo;if(!t.tileInfo){const r=[],n=t.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let t=0;t<=n;t++)r.push({level:n-t,resolution:s,scale:a}),s*=2,a*=2;const l=new Point.Z({x:i.xmin,y:i.ymax,spatialReference:e});t.tileInfo=new TileInfo.Z({origin:l,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:r}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,i=512,o){const{width:r,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=t,c=new Point.Z({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const m=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[a],o);t.storageInfo=new RasterStorageInfo.Z({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,i,o,r,n=0,s=2){if(1===r.length&&n>0){r=[...r];let{x:t,y:e}=r[0];for(let i=0;i<n;i++)t*=s,e*=s,r.push({x:t,y:e})}const a=[],{x:l,y:c}=o;for(let m=0;m<r.length;m++){const{x:o,y:n}=r[m];a.push({minCol:Math.floor((t.xmin-l+.1*o)/e/o),maxCol:Math.floor((t.xmax-l-.1*o)/e/o),minRow:Math.floor((c-t.ymax+.1*n)/i/n),maxRow:Math.floor((c-t.ymin-.1*n)/i/n)})}return a}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo;if(0===t)return e;if((0,maybe.pC)(i)&&i.length)return i[t-1];const r=o**t;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(t,e,i,o){const{spatialReference:r,nativeExtent:s,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:m}=a,f=o&&(0,maybe.pC)(m)?m.tileSize[0]:a.blockWidth,h=o&&(0,maybe.pC)(m)?m.tileSize[1]:a.blockHeight,u=(0,rasterProjectionHelper.nF)(t,r,i);if(!s.intersects(u))return null;if(e<0||e>l)return null;const p=this.getPyramidPixelSize(e),{x:d,y:x}=p,g=(c.y-u.y)/x/h,y=(u.x-c.x)/d/f,I=Math.min(h-1,Math.floor((g-Math.floor(g))*h)),R=Math.min(f-1,Math.floor((y-Math.floor(y))*f));return{pyramidLevel:e,row:Math.floor(g),col:Math.floor(y),rowOffset:I,colOffset:R,blockWidth:f,srcLocation:u}}getTileExtent(t,e,i,o,r,n){const[s,a]=n,l=o.x+i*s*t.x,c=l+s*t.x,m=o.y-e*a*t.y,f=m-a*t.y;return new Extent.Z({xmin:l,xmax:c,ymin:f,ymax:m,spatialReference:r})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,i){const o=this.rasterInfo.storageInfo.blockBoundary[t];return!o||o.maxRow<e||o.maxCol<i||o.minRow>e||o.minCol>i}async _fetchPixels(t,e,i,o={}){let r=(0,rasterProjectionHelper.Hq)(t);if(r>=2)return{extent:t,pixelBlock:null};const a=this._getSourceDataInfo(t,e,i,o),{pyramidLevel:l,pyramidResolution:c,srcResolution:m,srcExtent:f,srcWidth:h,srcHeight:u}=a;if(0===h||0===u)return{extent:t,srcExtent:f,pixelBlock:null};const p=(0,maybe.Wg)(this.rasterInfo.transform),d="gcs-shift"===p?.type,x=(0,maybe.pC)((0,rasterProjectionHelper.ut)(t.spatialReference));!d&&x||(r=(0,rasterProjectionHelper.Hq)(a.srcExtent,d));const g=this.rasterInfo.storageInfo,y={x:Math.floor((f.xmin-g.origin.x)/c.x+.1),y:Math.floor((g.origin.y-f.ymax)/c.y+.1)},I=await this._fetchRawTiles(l,y,{width:h,height:u,wrapCount:r},o);if(!I)return{extent:t,srcExtent:f,pixelBlock:null};const R=l>0?g.pyramidBlockWidth:g.blockWidth,w=l>0?g.pyramidBlockHeight:g.blockHeight,k=R===h&&w===u&&y.x%R==0&&y.y%w==0,b=new Point.Z({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference}),v=!t.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:S}=o;if(!v&&k&&1===I.pixelBlocks.length&&R===e&&w===i&&m.x===b.x&&m.y===b.y)return{extent:t,srcExtent:f,pixelBlock:I.pixelBlocks[0]};const T=x&&(0,maybe.pC)((0,rasterProjectionHelper.ut)(f.spatialReference)),B=o.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");B&&!this.rasterJobHandler&&await(0,rasterProjectionHelper.zD)();const P=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:b.toJSON(),datumTransformation:S,rasterTransform:p,hasWrapAround:r>0||T,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:B},o):(0,rasterProjectionHelper.Qp)({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:b,datumTransformation:S,rasterTransform:p,hasWrapAround:r>0||T,isAdaptive:!1,includeGCSGrid:B});let H;const E=!o.requestRawData,L={rows:P.spacing[0],cols:P.spacing[1]},z=(0,maybe.Wg)(this._getRasterTileAlignmentInfo(l,I.extent.xmin)),{pixelBlocks:F,mosaicSize:O,isPartiallyFilled:G}=I;let J=null;if(this.rasterJobHandler){const t=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:F,srcMosaicSize:O,destDimension:E?{width:e,height:i}:null,coefs:E?P.coefficients:null,sampleSpacing:E?L:null,projectDirections:B,gcsGrid:B?P.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:o.interpolation,alignmentInfo:z,blockWidths:null},o);({pixelBlock:H,localNorthDirections:J}=t)}else{const t=(0,pixelUtils.us)(F,O,{alignmentInfo:z});H=E?(0,pixelUtils.Uk)(t,{width:e,height:i},P.coefficients,L,o.interpolation):t,B&&P.gcsGrid&&(J=(0,pixelUtils.Qh)({width:e,height:i},P.gcsGrid),H=(0,vectorFieldUtils.xQ)(H,this.rasterInfo.dataType,J))}return o.requestRawData||B?{srcExtent:f,pixelBlock:H,transformGrid:P,localNorthDirections:J,extent:t,isPartiallyFilled:G}:{srcExtent:f,extent:t,pixelBlock:H}}async _fetchRawTiles(t,e,i,o){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(t);let{x:c,y:m}=e,{width:f,height:h,wrapCount:u}=i;const p=this._getRasterTileAlignmentInfo(t,0);o.buffer&&(c-=o.buffer.cols,m-=o.buffer.rows,f+=2*o.buffer.cols,h+=2*o.buffer.rows);let d=0,x=0,g=0;u&&(0,maybe.pC)(p)&&(({worldColumnCountFromOrigin:x,originColumnOffset:g,rightPadding:d}=p),x*p.blockWidth-d>=c+f&&(d=0));const y=Math.floor(c/a),I=Math.floor(m/l),R=Math.floor((c+f+d-1)/a),w=Math.floor((m+h+d-1)/l),k=s[t];if(!k)return null;const{minRow:b,minCol:v,maxCol:S,maxRow:T}=k;if(0===u&&(w<b||R<v||I>T||y>S))return null;const B=new Array;let P=!1;const W=null==this.ioConfig.allowPartialFill?o.allowPartialFill:this.ioConfig.allowPartialFill;for(let L=I;L<=w;L++)for(let e=y;e<=R;e++){let i=e;if(!o.disableWrapAround&&u&&(0,maybe.pC)(p)&&x<=e&&(i=e-x-g),L>=b&&i>=v&&T>=L&&S>=i){const e=this._fetchRawTile(t,L,i,o);W?B.push(new Promise((t=>{e.then((e=>t(e))).catch((()=>{P=!0,t(null)}))}))):B.push(e)}else B.push(Promise.resolve(null))}if(0===B.length)return null;const M=await Promise.all(B),C={height:(w-I+1)*l,width:(R-y+1)*a},{spatialReference:_}=this.rasterInfo,j=this.getPyramidPixelSize(t),{x:H,y:E}=j;return{extent:new Extent.Z({xmin:r.x+y*a*H,xmax:r.x+(R+1)*a*H,ymin:r.y-(w+1)*l*E,ymax:r.y-I*l*E,spatialReference:_}),pixelBlocks:M,mosaicSize:C,isPartiallyFilled:P}}_fetchRawTile(t,e,i,o){const r=this.rasterInfo.storageInfo.blockBoundary[t];if(!r)return Promise.resolve(null);const{minRow:n,minCol:s,maxCol:l,maxRow:c}=r;if(e<n||i<s||e>c||i>l)return Promise.resolve(null);const f=(0,RawBlockCache.Rq)(this.url,o.sliceId),h=`${t}/${e}/${i}`;let u=(0,RawBlockCache.Qg)(f,o.registryId,h);if((0,maybe.Wi)(u)){const r=new AbortController;u=this.fetchRawTile(t,e,i,{...o,signal:r.signal}),(0,RawBlockCache.gX)(f,o.registryId,h,u,r),u.catch((()=>(0,RawBlockCache.Gc)(f,o.registryId,h)))}return o.signal&&(0,promiseUtils.fu)(o,(()=>{(0,RawBlockCache.OE)(f,o.registryId,h)})),u}_computeMagDirValues(t){const{bandCount:e,dataType:i}=this.rasterInfo;if((2!==e||"vector-magdir"!==i)&&"vector-uv"!==i||2!==t?.length||!t[0]?.length)return null;const o=t[0].length;if("vector-magdir"===i){const e=t[1].map((t=>(t+360)%360));return[t[0],e]}const[r,n]=t,s=[],a=[];for(let l=0;l<o;l++){const[t,e]=(0,vectorFieldUtils.Tg)([r[l],n[l]]);s.push(t),a.push(e)}return[s,a]}_getRasterTileAlignmentInfo(t,e){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,rasterProjectionHelper.P_)(this.rasterInfo)),(0,maybe.Wi)(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,i,o={}){const r={datumTransformation:o.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};o.srcResolution&&(r.srcResolution=o.srcResolution,this._updateSourceDataInfo(t,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:a,pyramidLevel:l}=r,c=s/e,m=a/i,f=l<n&&c*m>=16;if(f||l===n&&(c>8||m>8)||0===s||0===a){const s=new Point.Z({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/i,spatialReference:t.spatialReference});let a=(0,rasterProjectionHelper.VO)(s,this.rasterInfo.spatialReference,t,r.datumTransformation);const h=!a||o.srcResolution&&a.x+a.y<o.srcResolution.x+o.srcResolution.y;if(f&&o.srcResolution&&h){const t=Math.round(Math.log(Math.max(c,m))/Math.LN2)-1;if(n-l+3>=t){const e=2**t;a={x:o.srcResolution.x*e,y:o.srcResolution.y*e}}}a&&(r.srcResolution=a,this._updateSourceDataInfo(t,r))}return(r.srcWidth/e>8||r.srcHeight/i>8)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:o,datumTransformation:r}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:l}=(0,rasterProjectionHelper.kr)(o,this.rasterInfo,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||(0,rasterProjectionHelper.tB)(t,i,r);if(null==c)return;const m=(0,maybe.Wg)(this.rasterInfo.transform);m&&(c=m.inverseTransform(c)),e.srcExtent=c;const f=Math.ceil((c.xmax-c.xmin)/a.x-.1),h=Math.ceil((c.ymax-c.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=f,e.srcHeight=h}_getRequestOptionsWithSliceId(t){return(0,maybe.pC)(this.rasterInfo.multidimensionalInfo)&&null==t.sliceId&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:i,position:o,pyramidLevel:r,useTransposedTile:n}=e,l=t.pixels[0].length/t.width/t.height;if(t.mask&&!t.mask[o])return{location:i,value:null};const{multidimensionalInfo:c}=this.rasterInfo;if((0,maybe.Wi)(c)||!n){const e=t.pixels.map((t=>t[o])),n={location:i,value:e,pyramidLevel:r},s=this._computeMagDirValues(e.map((t=>[t])));return s?.length&&(n.magdirValue=s.map((t=>t[0]))),n}let m=t.pixels.map((t=>Array.prototype.slice.call(t,o*l,o*l+l))),f=this._computeMagDirValues(m);const{requestSomeSlices:h,identifyOptions:u}=e;let p=(0,multidimensionalUtils.MO)(c,u.transposedVariableName);if(h){const t=(0,multidimensionalUtils.Ur)(p,(0,maybe.Wg)(u.multidimensionalDefinition),(0,maybe.Wg)(u.timeExtent));m=m.map((e=>t.map((t=>e[t])))),f=f?.map((e=>t.map((t=>e[t])))),p=t.map((t=>p[t]))}return{location:i,value:null,dataSeries:p.map(((t,e)=>{const i={value:m.map((t=>t[e])),multidimensionalDefinition:t.multidimensionalDefinition.map((t=>new DimensionalDefinition.Z({...t,isSlice:!0})))};return f?.length&&(i.magdirValue=[f[0][e],f[1][e]]),i})),pyramidLevel:r}}};(0,tslib_es6._)([(0,property.Cb)()],$.prototype,"_rasterTileAlighmentInfo",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],$.prototype,"_isGlobalWrappableSource",null),(0,tslib_es6._)([(0,property.Cb)(commonProperties.HQ)],$.prototype,"url",null),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],$.prototype,"datasetName",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],$.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.Cb)()],$.prototype,"rasterInfo",void 0),(0,tslib_es6._)([(0,property.Cb)()],$.prototype,"ioConfig",void 0),(0,tslib_es6._)([(0,property.Cb)()],$.prototype,"sourceJSON",void 0),$=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.BaseRaster")],$);const U=$;let n=class extends U{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._primaryRasters=null}async open(r){await this.init();const{rasterFunction:s}=this,{rasters:e,rasterIds:o}=s.getPrimaryRasters(),a=e.map((t=>t.rasterInfo?void 0:t.open(r)));await Promise.all(a);const i=e.map((({rasterInfo:r})=>r)),n=s.bind({rasterInfos:i,rasterIds:o});if(!n.success)throw new Error.Z("raster-function:open",`cannot bind the function: ${n.error??""}`);await this.syncJobHandler(),this.set("sourceJSON",e[0].sourceJSON),this.set("rasterInfo",s.rasterInfo)}async syncJobHandler(){const{rasterFunction:r}=this;if(this._primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler)return this.rasterJobHandler.updateRasterFunction(r)}async fetchPixels(r,t,o,a={}){const{rasters:i,rasterIds:n}=this._primaryRasters,c=i.map((s=>s.fetchPixels(r,t,o,a))),p=await Promise.all(c),l=p.map((r=>r.pixelBlock));if(l.every((r=>(0,maybe.Wi)(r))))return p[0];const m=p.find((r=>(0,maybe.pC)(r.pixelBlock)))?.extent??r,u=this.rasterJobHandler?await this.rasterJobHandler.process({extent:m,primaryPixelBlocks:l,primaryRasterIds:n}):this.rasterFunction.process({extent:m,primaryPixelBlocks:l,primaryRasterIds:n});return{...p[0],pixelBlock:u}}};(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],n.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.Cb)()],n.prototype,"tileType",void 0),(0,tslib_es6._)([(0,property.Cb)()],n.prototype,"rasterFunction",void 0),n=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.FunctionRaster")],n);const c=n;var rasterFunctionHelper=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterFunctionHelper.js"),rasterRendererHelper=__webpack_require__("./node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js"),RasterSymbolizer=__webpack_require__("./node_modules/@arcgis/core/renderers/support/RasterSymbolizer.js"),dataUtils=__webpack_require__("./node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js"),SpatialReference=__webpack_require__("./node_modules/@arcgis/core/geometry/SpatialReference.js");const w=Logger.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),N=s=>{let N=class extends s{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.sourceJSON=null,this.symbolizer=null}get fullExtent(){return this.rasterInfo?.extent}get rasterInfo(){return this.raster?.rasterInfo}get spatialReference(){return this.rasterInfo?.spatialReference??SpatialReference.Z.WGS84}get tileInfo(){return this.rasterInfo?.storageInfo.tileInfo}set url(e){this._set("url",(0,arcgisLayerUrl.Nm)(e,w))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async convertVectorFieldData(e,t){if((0,maybe.Wi)(e)||!this.rasterInfo)return null;const r=this._rasterJobHandler.instance,i=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:i},t):(0,vectorFieldUtils.KC)(e,i)}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):(0,dataUtils.GE)(e.meshType,e.simulationSettings,e.flowData,(0,maybe.pC)(t.signal)?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){const{multidimensionalInfo:t}=this.rasterInfo??{};if((0,maybe.Wi)(t))return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;!(0,maybe.Wi)(r)&&r.length||(r=(0,multidimensionalUtils.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const i=e.timeExtent||this.timeExtent;if((0,maybe.pC)(r)&&(0,maybe.pC)(i)&&((0,maybe.pC)(i.start)||(0,maybe.pC)(i.end))){r=r.map((e=>e.clone()));const s=t.variables.find((({name:e})=>e===r[0].variableName))?.dimensions?.find((({name:e})=>"StdTime"===e)),a=r.find((({dimensionName:e})=>"StdTime"===e));if(!s||!a)return{...e,multidimensionalDefinition:null};const{start:l,end:m}=i,u=(0,maybe.Wi)(l)?null:l.getTime(),d=(0,maybe.Wi)(m)?null:m.getTime(),h=u??d,c=d??u;if((0,maybe.pC)(s.values)){const e=s.values.filter((e=>{if(Array.isArray(e)){if(h===c)return e[0]<=h&&e[1]>=h;const t=e[0]<=h&&e[1]>h||e[0]<c&&e[1]>=c,r=e[0]>=h&&e[1]<=c||e[0]<h&&e[1]>c;return t||r}return h===c?e===h:e>=h&&e<=c}));if(e.length){const t=e.sort(((e,t)=>h===c?(e[0]??e)-(t[0]??t):Math.abs((e[1]??e)-c)-Math.abs((t[1]??t)-c)))[0];a.values=[t]}else r=null}else if(s.hasRegularIntervals&&s.extent){const[e,t]=s.extent;h>t||c<e?r=null:a.values=h===c?[h]:[Math.max(e,h),Math.min(t,c)]}}return(0,maybe.pC)(r)&&(0,multidimensionalUtils.nb)(r,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:r}}async updateRenderer(){const{loaded:e,symbolizer:t}=this;if(!e||!t)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const r=this._rasterJobHandler.instance;r&&(t.rendererJSON=(0,rasterRendererHelper.ol)(this.renderer.toJSON()),t.bind(),await r.updateSymbolizer(t),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!((0,maybe.pC)(r)&&r.pixels&&r.pixels.length>0))return null;let i;await this.updateRenderer();const s=this._rasterJobHandler.instance,n=this.bandIds??[];return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),i}getTileUrl(e,t,r){return"RasterTileServer"===this.raster?.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""}getCompatibleTileInfo(e,t,r=!1){if(!this.loaded||(0,maybe.Wi)(t))return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const i=(0,spatialReferenceUtils.C5)(e);return TileInfo.Z.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,s={}){if(O(this),s.requestAsImageElement){const n=this.getTileUrl(e,t,i);return(0,request.default)(n,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:s.signal}).then((e=>e.data))}if((0,maybe.pC)(this.rasterInfo.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),(0,maybe.Wi)(s.multidimensionalDefinition))){const r=s.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,i,r),pixelBlock:null}}return await this._initJobHandler(),await this._updateRasterFunction(),"raster-shaded-relief"===this.renderer.type&&(s={...s,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,i,s)}async fetchPixels(e,t,r,i={}){return(0,maybe.pC)(this.rasterInfo.multidimensionalInfo)&&(i=this.normalizeRasterFetchOptions(i),(0,maybe.Wi)(i.multidimensionalDefinition))?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this._updateRasterFunction(),this.raster.fetchPixels(e,t,r,i))}async identify(e,t={}){return O(this),!(0,maybe.pC)(this.rasterInfo.multidimensionalInfo)||this.rasterInfo.hasMultidimensionalTranspose&&((0,multidimensionalUtils.WU)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent)||(t=this.normalizeRasterFetchOptions(t),!(0,maybe.Wi)(t.multidimensionalDefinition))?this.raster.identify(e,t):{location:e,value:null}}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const e=this.rasterInfo?.multidimensionalInfo;if((0,maybe.Wi)(e)||"standard-time"!==this.rasterInfo?.dataType)return!1;const t=this.multidimensionalDefinition,r=t?.[0]?.variableName;return e.variables.some((e=>e.name===r&&(!t?.[0].dimensionName||e.dimensions.some((e=>"StdTime"===e.name)))))}getStandardTimeValue(e){return new Date(24*(e-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(e){const t=e??this.rasterInfo.multidimensionalInfo;return(0,multidimensionalUtils.jj)(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,multidimensionalUtils.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new RasterJobHandler.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{O(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer(),"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler()})).catch((()=>{})),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){O(this);const e=(0,rasterRendererHelper.In)(this.rasterInfo,this.raster.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",e)}}_configDefaultRenderer(){O(this);const e=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=(0,rasterRendererHelper.YD)(e)),!this.renderer){const t=(0,rasterRendererHelper.Ob)(e,{bandIds:this.bandIds,variableName:(0,maybe.pC)(this.multidimensionalDefinition)?this.multidimensionalDefinition[0]?.variableName:null});"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===t.type&&((e.statistics?.[0].max??0)>1e24||(e.statistics?.[0].min??0)<-1e24)&&(t.dynamicRangeAdjustment=!0,t.statistics=null,"none"===t.stretchType&&(t.stretchType="min-max")),this.renderer=t}this.symbolizer?(this.symbolizer.rendererJSON=(0,rasterRendererHelper.ol)(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new RasterSymbolizer.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:e});const t=this.symbolizer.bind();t.success||w.warn("imagery-tile-mixin",t.error||"The given renderer is not supported by the layer.")}async _updateRasterFunction(){if("imagery-tile"!==this.type||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;let e=this.raster;if("Function"===e?.datasetFormat){const t=e.rasterFunction.getPrimaryRasters();e=t.rasters[0]}const{rasterFunction:t}=this;if(t){const r=(0,rasterFunctionHelper.Ue)(t.toJSON(),{raster:e}),i=new c({rasterFunction:r});i.rasterJobHandler=this._rasterJobHandler.instance,await i.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=i}else this.raster=e}};function O(e){if(!e.raster||!e.rasterInfo)throw new Error.Z("imagery-tile","no raster")}return(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"_cachedRendererJson",void 0),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"_cachedRasterFunctionJson",void 0),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"_compatibleFullExtent",void 0),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"_rasterJobHandler",void 0),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"bandIds",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],N.prototype,"copyright",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{read:!1}})],N.prototype,"fullExtent",null),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"interpolation",void 0),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"ioConfig",void 0),(0,tslib_es6._)([(0,property.Cb)({type:[DimensionalDefinition.Z]})],N.prototype,"multidimensionalDefinition",void 0),(0,tslib_es6._)([(0,property.Cb)({type:MultidimensionalSubset.Z,json:{write:!0}})],N.prototype,"multidimensionalSubset",void 0),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"raster",void 0),(0,tslib_es6._)([(0,property.Cb)({type:RasterFunction.Z})],N.prototype,"rasterFunction",void 0),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"rasterInfo",null),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"sourceJSON",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{read:!1}})],N.prototype,"spatialReference",null),(0,tslib_es6._)([(0,property.Cb)({json:{read:!1}})],N.prototype,"tileInfo",null),(0,tslib_es6._)([(0,property.Cb)(commonProperties.HQ)],N.prototype,"url",null),(0,tslib_es6._)([(0,property.Cb)({types:rasterRenderers.dr})],N.prototype,"renderer",null),(0,tslib_es6._)([(0,property.Cb)()],N.prototype,"symbolizer",void 0),N=(0,tslib_es6._)([(0,subclass.j)("esri.layers.ImageryTileMixin")],N),N};var OperationalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/OperationalLayer.js"),PortalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/PortalLayer.js"),RefreshableLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/RefreshableLayer.js"),ScaleRangeLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/ScaleRangeLayer.js"),TemporalLayer=__webpack_require__("./node_modules/@arcgis/core/layers/mixins/TemporalLayer.js"),Field=__webpack_require__("./node_modules/@arcgis/core/layers/support/Field.js"),rasterEnums=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterEnums.js"),RasterInfo=__webpack_require__("./node_modules/@arcgis/core/layers/support/RasterInfo.js"),byteStreamUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterDatasets/byteStreamUtils.js");function t(e){const t=e.fields,r=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=i.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t})})),{displayFieldName:"",fields:i,features:a}}class DBFParser_r{static get supportedVersions(){return[5]}static parse(r){const n=new DataView(r),i=3&n.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const s=n.getUint32(4,!0),a=n.getUint16(8,!0),o=n.getUint16(10,!0),l={version:i,recordCount:s,headerByteCount:a,recordByteCount:o};let p=32;const g=[],u=[];let d;if(3===i){for(;13!==n.getUint8(p);)d=String.fromCharCode(n.getUint8(p+11)).trim(),g.push({name:(0,byteStreamUtils.f)(new Uint8Array(r,p,11)),type:d,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(d)],length:n.getUint8(p+16)}),p+=32;if(p+=1,g.length>0)for(;u.length<s&&r.byteLength-p>o;){const t=[];32===n.getUint8(p)?(p+=1,g.forEach((n=>{if("C"===n.type)t.push((0,byteStreamUtils.f)(new Uint8Array(r,p,n.length)).trim());else if("N"===n.type)t.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim(),10));else if("F"===n.type)t.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim()));else if("D"===n.type){const e=String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim();t.push(new Date(parseInt(e.substring(0,4),10),parseInt(e.substring(4,6),10)-1,parseInt(e.substring(6,8),10)))}p+=n.length})),u.push(t)):p+=o}}return{header:l,fields:g,records:u,recordSet:t({fields:g,records:u})}}}var utils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterTransforms/utils.js"),FeatureSet=__webpack_require__("./node_modules/@arcgis/core/rest/support/FeatureSet.js");const y=new Map;y.set("int16","esriFieldTypeSmallInteger"),y.set("int32","esriFieldTypeInteger"),y.set("int64","esriFieldTypeInteger"),y.set("float32","esriFieldTypeSingle"),y.set("float64","esriFieldTypeDouble"),y.set("text","esriFieldTypeString");let S=class extends U{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:r}=await this.request(this.url+"/conf.json",{signal:e?.signal});if(!this._validateHeader(r))throw new Error.Z("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:o}=this._parseHeader(r);if("thematic"===o.dataType){const e=await this._fetchAuxiliaryInformation();o.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",o),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,r,i={}){const{transposeInfo:o}=this.rasterInfo.storageInfo,{transposedVariableName:a}=i,s=!(!o||!a),n=s?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const l=this._buildCacheFilePath(n,t,r,i.multidimensionalDefinition,a),f=this._getIndexRecordFromBundle(t,r,s),m=await this.request(l,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!m)return null;const c=new Uint8Array(m.data),p=this._getTileEndAndContentType(c,f);if(0===p.recordSize)return null;const d=await this.request(l,{range:{from:p.position,to:p.position+p.recordSize},responseType:"array-buffer",signal:i.signal});if(!d)return null;const[u,h]=this._getTileSize(s);return this.decodePixelBlock(d.data,{width:u,height:h,planes:null,pixelType:null,returnInterleaved:s})}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){const t=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:r,histograms:i,colormap:o,blockWidth:a,blockHeight:f,firstPyramidLevel:m,maximumPyramidLevel:c}=e,p=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),d=e.extent.spatialReference,y=e.geodataXform?.spatialReference,S=new SpatialReference.Z(d?.wkid||d?.wkt?d:y);let I=new Extent.Z({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:S});const w=new Point.Z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:S}),_=Math.round((I.xmax-I.xmin)/w.x),v=Math.round((I.ymax-I.ymin)/w.y),b=this._parseTransform(e.geodataXform),z=b?I:null;b&&(I=b.forwardTransform(I),w.x=(I.xmax-I.xmin)/_,w.y=(I.ymax-I.ymin)/v);const T=e.properties??{},k=e.format.toLowerCase().replace("cache/",""),j=new Point.Z(e.origin.x,e.origin.y,S);let C,R,F,P;if(o&&o.colors)for(C=[],R=0;R<o.colors.length;R++)F=o.colors[R],P=o.values?o.values[R]:R,C.push([P,255&F,F<<16>>>24,F<<8>>>24,F>>>24]);const H=e.LODInfos,D=[];for(R=0;R<H.levels.length;R++)D.push({level:H.levels[R],resolution:H.resolutions[R],scale:96/.0254*H.resolutions[R]});const L=new TileInfo.Z({dpi:96,lods:D,format:k,origin:j,size:[a,f],spatialReference:S}),M={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},B=[{maxCol:Math.ceil(_/a)-1,maxRow:Math.ceil(v/f)-1,minCol:0,minRow:0}];let O=2;if(c>0)for(R=0;R<c;R++)B.push({maxCol:Math.ceil(_/O/a)-1,maxRow:Math.ceil(v/O/f)-1,minCol:0,minRow:0}),O*=2;const $=e.mdInfo;let N=null;if($&&T._yxs){const e=T._yxs;N={packetSize:e.PacketSize,tileSize:[e.TileXSize,e.TileYSize]}}return{storageInfo:M,rasterInfo:new RasterInfo.Z({width:_,height:v,pixelType:t,bandCount:r,extent:I,nativeExtent:z,transform:b,spatialReference:S,pixelSize:w,keyProperties:T,statistics:p,histograms:i,multidimensionalInfo:$,colormap:C,storageInfo:new RasterStorageInfo.Z({blockWidth:a,blockHeight:f,pyramidBlockWidth:a,pyramidBlockHeight:f,origin:j,tileInfo:L,transposeInfo:N,firstPyramidLevel:m,maximumPyramidLevel:c,blockBoundary:B})})}}_parseTransform(e){if(!(0,utils.j)(e))throw new Error.Z("cloudraster:open","the data contains unsupported geodata transform types");const r=(0,utils.c)(e);if("identity"===r.type)return null;if("polynomial"!==r.type||!r.forwardCoefficients?.length||!r.inverseCoefficients?.length)throw new Error.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return r}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),i=await Promise.all([t,r]);let o;if(i[0]){let e=i[0].fields;const t=i[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":y.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(o={fields:e,features:r})}}return!o&&i[1]&&(o=DBFParser_r.parse(i[1]).recordSet),FeatureSet.default.fromJSON(o)}_buildCacheFilePath(e,t,i,o,a){const s=this._getPackageSize(!!a),n=Math.floor(t/s)*s,l=Math.floor(i/s)*s,f="R"+this._toHexString4(n)+"C"+this._toHexString4(l);let m="L";m+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:c}=this.rasterInfo,p=o?.[0];if((0,maybe.Wi)(c)||!p)return`${this.url}/_alllayers/${m}/${f}.bundle`;let d="_yxs";if(!a){d=c.variables.find((e=>e.name===p.variableName)).dimensions[0].values.indexOf(p.values[0]).toString(16);const e=4-d.length;for(let t=0;t<e;t++)d="0"+d;d="S"+d}const u=this._getVariableFolderName(a||p.variableName);return`${this.url}/_alllayers/${u}/${d}/${m}/${f}.bundle`}_getPackageSize(e=!1){const{transposeInfo:t}=this.rasterInfo.storageInfo;return e&&(0,maybe.pC)(t)?t.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:t}=this.rasterInfo,{transposeInfo:r}=t;return e&&(0,maybe.pC)(r)?r.tileSize:t.tileInfo.size}_getVariableFolderName(e){return""===(e=e.trim())?"_v":e.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,t,r=!1){const i=this._getPackageSize(r),o=i*(e%i)+t%i;if(o<0)throw"Invalid level / row / col";return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let i,o=0;for(i=0;i<5;i++)o|=(255&r[i])<<8*i;const a=0xffffffffff&o;for(o=0,i=5;i<8;i++)o|=(255&r[i])<<8*(i-5);return{position:a,recordSize:0xffffffffff&o}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],S.prototype,"storageInfo",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],S.prototype,"datasetFormat",void 0),S=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.CloudRaster")],S);const I=S;var has=__webpack_require__("./node_modules/@arcgis/core/core/has.js"),stretchUtils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");let h=class extends U{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(t){await this.init();const e=this.data,{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:m,nativeExtent:n,transform:l}=this.data,{width:h,height:f,pixelType:d}=s,u=e.extent??new Extent.Z({xmin:-.5,ymin:.5,xmax:h-.5,ymax:f-.5,spatialReference:new SpatialReference.Z({wkid:3857})}),y=e.isPseudoSpatialReference??!e.extent,x={x:u.width/h,y:u.height/f},g=new RasterInfo.Z({width:h,height:f,pixelType:d,extent:u,nativeExtent:n,transform:l,pixelSize:x,spatialReference:u.spatialReference,bandCount:3,keyProperties:m||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=o,this.url="/InMemory/"+o}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(t,i,o){const a=this.rasterInfo.storageInfo.maximumPyramidLevel,m=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:i,maximumPyramidLevel:a},o):Promise.resolve((0,pixelUtils.Vl)(t,i,a)),p=(0,maybe.pC)(this.rasterInfo.statistics),c=(0,maybe.pC)(this.rasterInfo.histograms),h=p?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},o):Promise.resolve((0,stretchUtils.Hv)(t)),f=await(0,promiseUtils.as)([m,h]);if(!f[0].value&&f[1].value)throw new Error.Z("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=f[0].value,p||(this.rasterInfo.statistics=f[1].value?.statistics),c||(this.rasterInfo.histograms=f[1].value?.histograms)}};(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],h.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.Cb)()],h.prototype,"data",void 0),h=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],h);const InMemoryRaster_f=h;function xmlUtilities_n(e,t){if(!e||!t)return[];let l=t;t.includes("/")?(l=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const u=xmlUtilities_n(e,l);for(let e=0;e<u.length;e++)xmlUtilities_n(u[e],t).forEach((n=>r.push(n)));return r}const u=e.getElementsByTagNameNS("*",l);if(!u||0===u.length)return[];for(let n=0;n<u.length;n++)r.push(u[n]||u.item[n]);return r}function xmlUtilities_e(t,l){if(!t||!l)return null;let r=l;l.includes("/")?(r=l.slice(0,l.indexOf("/")),l=l.slice(l.indexOf("/")+1)):l="";const u=xmlUtilities_n(t,r);return u.length>0?l?xmlUtilities_e(u[0],l):u[0]:null}function xmlUtilities_t(n,t=null){const l=t?xmlUtilities_e(n,t):n;let r;return l?(r=l.textContent||l.nodeValue,r?r.trim():null):null}function xmlUtilities_u(n,e){return function l(e,t){const l=xmlUtilities_n(e,t),r=[];let u;for(let n=0;n<l.length;n++)u=l[n].textContent||l[n].nodeValue,u&&(u=u.trim(),""!==u&&r.push(u));return r}(n,e).map((n=>Number(n)))}function xmlUtilities_o(n,e){const l=xmlUtilities_t(n,e);return Number(l)}function xmlUtilities_i(n,e){const t=n?.nodeName?.toLowerCase(),l=e.toLowerCase();return t.slice(t.lastIndexOf(":")+1)===l}var PolynomialTransform=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterTransforms/PolynomialTransform.js");function f(e,t){if(!e||!t)return null;const n=[];for(let r=0;r<e.length;r++)n.push(e[r]),n.push(t[r]);return n}function pamParser_m(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new SpatialReference.Z({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const n=e.indexOf("VERTCS"),r=e.indexOf("PROJCS"),s=r>-1?r:e.indexOf("GEOGCS");if(-1===s)return null;const a=e.slice(s,e.lastIndexOf("]",n)+1).trim(),i=e.slice(n,e.lastIndexOf("]")).trim();t=d(a);const l=new SpatialReference.Z(t?{wkid:t}:{wkt:a}),f=d(i);return f&&(l.vcsWkid=f),l}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=d(e),new SpatialReference.Z(0!==t?{wkid:t}:{wkt:e})):null}function d(e){const t=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),n=t[t.length-1].split(","),r=n[0]?.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){const e=Number(n[1]);if(!isNaN(e)&&0!==e)return e}return 0}function pamParser_p(s){if("pamdataset"!==s?.documentElement.tagName?.toLowerCase())return{};const a={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};s.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(xmlUtilities_i(e,"SRS")){if(!a.spatialReference){const t=xmlUtilities_t(e);a.spatialReference=pamParser_m(t)}}else if(xmlUtilities_i(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function u(e){const t=xmlUtilities_e(e,"GeodataXform"),r=pamParser_m(xmlUtilities_o(t,"SpatialReference/WKID")||xmlUtilities_t(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:r,transform:null};const o=xmlUtilities_o(t,"PolynomialOrder")??1,u=xmlUtilities_u(t,"CoeffX/Double"),c=xmlUtilities_u(t,"CoeffY/Double"),d=xmlUtilities_u(t,"InverseCoeffX/Double"),p=xmlUtilities_u(t,"InverseCoeffY/Double"),S=f(u,c),C=f(d,p);return{spatialReference:r,transform:S&&C&&S.length&&C.length?new PolynomialTransform.Z({spatialReference:r,polynomialOrder:o,forwardCoefficients:S,inverseCoefficients:C}):null}}(e);a.transform=n,a.spatialReference||(a.spatialReference=t)}else xmlUtilities_n(e,"MDI").forEach((e=>a.metadata[e.getAttribute("key")]=xmlUtilities_t(e)));else if(xmlUtilities_i(e,"PAMRasterBand")){const t=function pamParser_c(e){const t=xmlUtilities_o(e,"NoDataValue"),i=xmlUtilities_e(e,"Histograms/HistItem"),l=xmlUtilities_o(i,"HistMin"),o=xmlUtilities_o(i,"HistMax"),f=xmlUtilities_o(i,"BucketCount"),u=xmlUtilities_t(i,"HistCounts")?.split("|").map((e=>Number(e)));let c,m,d,p;xmlUtilities_n(e,"Metadata/MDI").forEach((e=>{const t=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":c=t;break;case"STATISTICS_MAXIMUM":m=t;break;case"STATISTICS_MEAN":d=t;break;case"STATISTICS_STDDEV":p=t}}));const S=xmlUtilities_o(e,"Metadata/SourceBandIndex");return{noDataValue:t,histogram:u?.length&&null!=l&&null!=o?{min:l,max:o,size:f||u.length,counts:u}:null,sourceBandIndex:S,statistics:null!=c&&null!=m?{min:c,max:m,avg:d,stddev:p}:null}}(e);null!=t.sourceBandIndex&&null==a.rasterBands[t.sourceBandIndex]?a.rasterBands[t.sourceBandIndex]=t:a.rasterBands.push(t)}}));const i=a.rasterBands;if(i.length){const t=!!i[0].statistics;a.statistics=t?i.map((e=>e.statistics)).filter(maybe.pC):null;const n=!!i[0].histogram;a.histograms=n?i.map((e=>e.histogram)).filter(maybe.pC):null}return a}let ImageAuxRaster_d=class extends U{async open(t){await this.init();const s=await this._fetchData(t);let{spatialReference:e,statistics:r,histograms:a,transform:o}=await this._fetchAuxiliaryData(t);const i=!e;i&&(e=new SpatialReference.Z({wkid:3857})),a?.length&&null==r&&(r=(0,stretchUtils.Oh)(a));const{width:n,height:l}=s;let p=new Extent.Z({xmin:-.5,ymin:.5-l,xmax:n-.5,ymax:.5,spatialReference:e});const f=o?o.forwardTransform(p):p;let d=!0;if(o){const t=o.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(o=null,p=f)}const y=new InMemoryRaster_f({data:{extent:f,nativeExtent:p,transform:o,pixelBlock:s,statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:i}});await y.open(),y.data=null,this._set("rasterInfo",y.rasterInfo),this._inMemoryRaster=y}fetchRawTile(t,s,e,r={}){return this._inMemoryRaster.fetchRawTile(t,s,e,r)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t?.signal}),r=(0,RasterCodec.y)(e).toUpperCase();if("JPG"!==r&&"PNG"!==r&&"GIF"!==r&&"BMP"!==r)throw new Error.Z("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const a=r.toLowerCase(),o="gif"===a||"bmp"===a||!(0,has.Z)("ios");return await this.decodePixelBlock(e,{format:a,useCanvas:o,hasNoZlibMask:!0})}async _fetchAuxiliaryData(t){const s=(0,maybe.Wg)(t?.signal),o=this.ioConfig.skipExtensions??[],i=o.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:s}),n=this.datasetFormat,m="JPG"===n?"jgw":"PNG"===n?"pgw":"BMP"===n?"bpw":null,p=m&&o.includes(m)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+m,{responseType:"text",signal:s}),c=await(0,promiseUtils.as)([i,p]);if(s?.aborted)throw(0,promiseUtils.zE)();const u=pamParser_p(c[0].value?.data);if(!u.transform){const t=c[1].value?c[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;u.transform=6===t?.length?new PolynomialTransform.Z({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null}return u}};(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],ImageAuxRaster_d.prototype,"datasetFormat",void 0),ImageAuxRaster_d=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],ImageAuxRaster_d);const ImageAuxRaster_y=ImageAuxRaster_d;var urlUtils=__webpack_require__("./node_modules/@arcgis/core/core/urlUtils.js"),serviceTileInfoProperty=__webpack_require__("./node_modules/@arcgis/core/layers/support/serviceTileInfoProperty.js"),TilemapCache=__webpack_require__("./node_modules/@arcgis/core/layers/support/TilemapCache.js"),GCSShiftTransform=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterTransforms/GCSShiftTransform.js"),fetchRasterInfo=__webpack_require__("./node_modules/@arcgis/core/rest/imageService/fetchRasterInfo.js");let ImageServerRaster_I=class extends U{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){await this.init();const r=e&&e.signal,a=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:r});a.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const o=a.data;if(this.sourceJSON=o,!o)throw new Error.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!o.tileInfo)throw new Error.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=o.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(o.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===o.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=o.name?.slice(o.name.indexOf("/")+1)??"";const c=await this._fetchRasterInfo({signal:r});if((0,maybe.Wi)(c))throw new Error.Z("image-server-raster:open","cannot initialize image service");const u="Map"===this.tileType?(0,serviceTileInfoProperty.d)(o.tileInfo,o):TileInfo.Z.fromJSON(o.tileInfo);(0,maybe.O3)(u);const[y,d]=this._computeMinMaxLOD(c,u),{extent:x,pixelSize:g}=c,v=.5/c.width*g.x,S=Math.max(g.x,g.y),{lods:I}=u;("Map"!==this.tileType&&0!==o.maxScale||Math.abs(g.x-g.y)>v||!I.some((e=>Math.abs(e.resolution-S)<v)))&&(g.x=g.y=y.resolution,c.width=Math.ceil((x.xmax-x.xmin)/g.x-.1),c.height=Math.ceil((x.ymax-x.ymin)/g.y-.1));const w=y.level-d.level,[j,T]=u.size,b=[];I.forEach((e=>{e.level>=d.level&&e.level<=y.level&&b.push({x:e.resolution,y:e.resolution})})),b.sort(((e,t)=>e.x-t.x));const _=this.computeBlockBoundary(x,j,T,u.origin,b,w),M=b.length>1?b.slice(1):null;let R;if(o.transposeInfo&&(R={tileSize:[o.transposeInfo.rows,o.transposeInfo.cols],packetSize:c.keyProperties?._yxs.PacketSize??0}),c.storageInfo=new RasterStorageInfo.Z({blockWidth:u.size[0],blockHeight:u.size[1],pyramidBlockWidth:u.size[0],pyramidBlockHeight:u.size[1],pyramidResolutions:M,compression:u.format,origin:u.origin,firstPyramidLevel:1,maximumPyramidLevel:w,tileInfo:u,transposeInfo:R,blockBoundary:_}),this._fixGCSShift(c),this._set("rasterInfo",c),o.capabilities.toLowerCase().includes("tilemap")){const e={tileInfo:c.storageInfo.tileInfo,parsedUrl:(0,urlUtils.mN)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new TilemapCache.y({layer:e})}}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:l}=this.rasterInfo,{transposeInfo:o}=a,n=(0,maybe.pC)(o)&&!!s.transposedVariableName;if(this._slices&&!n&&null==s.sliceId)return null;const c=n?0:a.maximumPyramidLevel-e+this._levelOffset,m=`${this.url}/tile/${c}/${t}/${i}`,h=this._slices?n?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:f}=await this.request(m,{query:h,responseType:"array-buffer",signal:s.signal});if(!f)return null;const p=n?o.tileSize:a.tileInfo.size,u=await this.decodePixelBlock(f,{width:p[0],height:p[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:n}),d=a.blockBoundary[e];if("jpg"!==a.compression||i>d.minCol&&i<d.maxCol&&t>d.minRow&&t<d.maxRow)return u;const{origin:x,blockWidth:g,blockHeight:v}=a,{x:S,y:I}=this.getPyramidPixelSize(e),w=Math.round((l.xmin-x.x)/S)%g,j=Math.round((l.xmax-x.x)/S)%g||g,T=Math.round((x.y-l.ymax)/I)%v,b=Math.round((x.y-l.ymin)/I)%v||v,_=i===d.minCol?w:0,M=t===d.minRow?T:0,R=i===d.maxCol?j:g,z=t===d.maxRow?b:v;return(0,pixelUtils.pW)(u,{x:_,y:M},{width:R-_,height:z-M}),u}getSliceIndex(e){if(!this._slices||(0,maybe.Wi)(e)||0===e.length)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.find((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName));return!i||(Array.isArray(e.values[0])?`${e.values[0][0]}-${e.values[0][1]}`:e.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.statistics)),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>e.data?.histograms)),r=await Promise.all([i,s]);return r[0]&&r[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,(0,maybe.Wg)(t.datumTransformation));if(null===i)return null;let s=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let l=r-s+this._levelOffset;const o=i.srcLocation;for(;l>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(l,i.row,i.col,t))break}catch{}if(l--,s++,i=this.identifyPixelLocation(o,s,(0,maybe.Wg)(t.datumTransformation)),null===i)return null}return-1===l||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON;if("Map"===this.tileType){const e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),s=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),r=SpatialReference.Z.fromJSON(t.spatialReference||e.spatialReference),a=new Point.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:r});return new RasterInfo.Z({width:i,height:s,bandCount:3,extent:Extent.Z.fromJSON(e),spatialReference:r,pixelSize:a,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=e,s=(0,fetchRasterInfo.g)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),r=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then((e=>e.data&&e.data.slices)).catch((()=>null)):null,a=await Promise.all([s,r]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new GCSShiftTransform.Z,e.extent=e.transform.forwardTransform(t))}_computeMinMaxLOD(e,t){const{pixelSize:i}=e,s=.5/e.width*i.x,{lods:r}=t,a=t.lodAt(Math.max.apply(null,r.map((e=>e.level)))),l=t.lodAt(Math.min.apply(null,r.map((e=>e.level)))),{tileType:o}=this;if("Map"===o)return this._levelOffset=r[0].level,[a,l];if("Raster"===o)return[r.find((e=>e.resolution===i.x))??a,l];const{minScale:n,maxScale:c}=this.sourceJSON;let m=a;c>0&&(m=r.find((e=>Math.abs(e.scale-c)<s)),m||(m=r.filter((e=>e.scale>c)).sort(((e,t)=>e.scale>t.scale?1:-1))[0]??a));let h=l;return n>0&&(h=r.find((e=>Math.abs(e.scale-n)<s))??l,this._levelOffset=h.level-l.level),[m,h]}};(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],ImageServerRaster_I.prototype,"datasetFormat",void 0),(0,tslib_es6._)([(0,property.Cb)()],ImageServerRaster_I.prototype,"tileType",void 0),ImageServerRaster_I=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],ImageServerRaster_I);const ImageServerRaster_w=ImageServerRaster_I;var PixelBlock=__webpack_require__("./node_modules/@arcgis/core/layers/support/PixelBlock.js"),rasterFormats_utils=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/utils.js");const MRFRaster_I=new Map;MRFRaster_I.set("Int8","s8"),MRFRaster_I.set("UInt8","u8"),MRFRaster_I.set("Int16","s16"),MRFRaster_I.set("UInt16","u16"),MRFRaster_I.set("Int32","s32"),MRFRaster_I.set("UInt32","u32"),MRFRaster_I.set("Float32","f32"),MRFRaster_I.set("Float64","f32"),MRFRaster_I.set("Double64","f32");const b=new Map;b.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),b.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),b.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),b.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let A=class extends U{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?(0,maybe.Wg)(t.signal):null,o=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:i,files:a}=this._parseHeader(o.data);if(-1===this.ioConfig.skipExtensions?.indexOf("aux.xml")){const e=await this._fetchAuxiliaryData(t);null!=e&&(i.statistics=e.statistics??i.statistics,i.histograms=e.histograms,e.histograms&&(0,maybe.Wi)(i.statistics)&&(i.statistics=(0,stretchUtils.Oh)(e.histograms)))}this._set("rasterInfo",i),this._files=a;const n=await this.request(a.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:l,blockHeight:f}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:m,height:p}=this.rasterInfo,h=[],u=this._getBandSegmentCount();let g=0,y=-1;for(;g<this._storageIndex.length;){y++;const t=Math.ceil(m/l/c**y)-1,e=Math.ceil(p/f/c**y)-1;g+=(t+1)*(e+1)*u*4,h.push({maxRow:e,maxCol:t,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(t,e,r,s={}){const{blockWidth:i,blockHeight:a,blockBoundary:l}=this.rasterInfo.storageInfo,f=l[t];if(!f||f.maxRow<e||f.maxCol<r||f.minRow>e||f.minCol>r)return null;const{bandCount:c,pixelType:m}=this.rasterInfo,{ranges:p,actualTileWidth:h,actualTileHeight:u}=this._getTileLocation(t,e,r);if(!p||0===p.length)return null;if(0===p[0].from&&0===p[0].to){const t=new Uint8Array(i*a);return new PixelBlock.Z({width:i,height:a,pixels:null,mask:t,validPixelCount:0})}const{bandIds:g}=this.ioConfig,d=this._getBandSegmentCount(),y=[];let x=0;for(x=0;x<d;x++)(!g||g.indexOf[x]>-1)&&y.push(this.request(this._files.data,{range:{from:p[x].from,to:p[x].to},responseType:"array-buffer",signal:s.signal}));const w=await Promise.all(y),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),A=new Uint8Array(I);let F=0;for(x=0;x<d;x++)A.set(new Uint8Array(w[x].data),F),F+=w[x].data.byteLength;const _=b.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(A.buffer,{width:i,height:a,format:_,planes:g?.length||c,pixelType:m});if((0,maybe.pC)(this.rasterInfo.noDataValue)&&"lerc"!==_&&!R.mask){const t=this.rasterInfo.noDataValue[0];if(null!=t){const e=R.width*R.height,r=new Uint8Array(e);if(Math.abs(t)>1e24)for(x=0;x<e;x++)Math.abs((R.pixels[0][x]-t)/t)>1e-6&&(r[x]=1);else for(x=0;x<e;x++)R.pixels[0][x]!==t&&(r[x]=1);R.mask=r}}let S=0,j=0;if(h!==i||u!==a){let t=R.mask;if(t)for(x=0;x<a;x++)if(j=x*i,x<u)for(S=h;S<i;S++)t[j+S]=0;else for(S=0;S<i;S++)t[j+S]=0;else for(t=new Uint8Array(i*a),R.mask=t,x=0;x<u;x++)for(j=x*i,S=0;S<h;S++)t[j+S]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let e,r,s,o,i,a;if(rasterFormats_utils.f){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return b.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i}=this.rasterInfo.storageInfo,{width:a,height:n}=this.rasterInfo,l=this._getBandSegmentCount();let f,c,m,p=0,h=0;for(m=0;m<t;m++)h=i**m,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=f*c;h=i**t,f=Math.ceil(a/s/h),c=Math.ceil(n/o/h),p+=e*f+r,p*=4*l;const u=this._storageIndex.subarray(p,p+4*l);let g=0,d=0;const y=[];for(let x=0;x<l;x++)g=u[4*x+0]*2**32+u[4*x+1],d=g+u[4*x+2]*2**32+u[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<f-1?s:Math.ceil(a/h)-s*(f-1),actualTileHeight:e<c-1?o:Math.ceil(n/h)-o*(c-1)}}_parseHeader(t){const r=xmlUtilities_e(t,"MRF_META/Raster");if(!r)throw new Error.Z("mrf:open","not a valid MRF format");const s=xmlUtilities_e(r,"Size"),o=parseInt(s.getAttribute("x"),10),i=parseInt(s.getAttribute("y"),10),a=parseInt(s.getAttribute("c"),10),n=(xmlUtilities_t(r,"Compression")||"none").toLowerCase();if(!b.has(n))throw new Error.Z("mrf:open","currently does not support compression "+n);const c=xmlUtilities_t(r,"DataType")||"UInt8",p=MRFRaster_I.get(c);if(null==p)throw new Error.Z("mrf:open","currently does not support pixel type "+c);const g=xmlUtilities_e(r,"PageSize"),d=parseInt(g.getAttribute("x"),10),A=parseInt(g.getAttribute("y"),10),F=xmlUtilities_e(r,"DataValues");let _,R;if(F&&(R=F.getAttribute("NoData"),null!=R&&(_=R.trim().split(" ").map((t=>parseFloat(t))))),xmlUtilities_e(t,"MRF_META/CachedSource"))throw new Error.Z("mrf:open","currently does not support MRF referencing other data files");const S=xmlUtilities_e(t,"MRF_META/GeoTags"),j=xmlUtilities_e(S,"BoundingBox");let k,M=!1;if(null!=j){const t=parseFloat(j.getAttribute("minx")),e=parseFloat(j.getAttribute("miny")),r=parseFloat(j.getAttribute("maxx")),s=parseFloat(j.getAttribute("maxy")),o=xmlUtilities_t(S,"Projection")||"";let i=SpatialReference.Z.WGS84;if("LOCAL_CS[]"!==o)if(o.toLowerCase().startsWith("epsg:")){const t=Number(o.slice(5));isNaN(t)||0===t||(i=new SpatialReference.Z({wkid:t}))}else i=pamParser_m(o)??SpatialReference.Z.WGS84;else M=!0,i=new SpatialReference.Z({wkid:3857});k=new Extent.Z(t,e,r,s),k.spatialReference=i}else M=!0,k=new Extent.Z({xmin:-.5,ymin:.5-i,xmax:o-.5,ymax:.5,spatialReference:new SpatialReference.Z({wkid:3857})});const T=xmlUtilities_e(t,"MRF_META/Rsets"),C=parseInt(T&&T.getAttribute("scale")||"2",10),U=k.spatialReference,B=new RasterStorageInfo.Z({origin:new Point.Z({x:k.xmin,y:k.ymax,spatialReference:U}),blockWidth:d,blockHeight:A,pyramidBlockWidth:d,pyramidBlockHeight:A,compression:n,pyramidScalingFactor:C}),L=new Point.Z({x:k.width/o,y:k.height/i,spatialReference:U}),E=new RasterInfo.Z({width:o,height:i,extent:k,isPseudoSpatialReference:M,spatialReference:U,bandCount:a,pixelType:p,pixelSize:L,noDataValue:_,storageInfo:B}),P=xmlUtilities_t(t,"datafile"),O=xmlUtilities_t(t,"IndexFile");return{rasterInfo:E,files:{mrf:this.url,index:O||this.url.replace(".mrf",".idx"),data:P||this.url.replace(".mrf",b.get(n).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return pamParser_p(e)}catch{return null}}};(0,tslib_es6._)([(0,property.Cb)()],A.prototype,"_files",void 0),(0,tslib_es6._)([(0,property.Cb)()],A.prototype,"_storageIndex",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],A.prototype,"datasetFormat",void 0),A=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterIO.MRFRaster")],A);const F=A;var TiffDecoder=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/TiffDecoder.js"),TiffTags=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFormats/TiffTags.js");const E=(e,t)=>e.get(t)?.values,TIFFRaster_F=(e,t)=>e.get(t)?.values?.[0];let R=class extends U{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();const s=e?(0,maybe.Wg)(e.signal):null,{data:a}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:s});if(!a)throw new Error.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:n,firstIFDPos:o,isBigTiff:f}=(0,TiffDecoder.cK)(a),l=[];await this._readIFDs(l,a,n,o,0,f?8:4,s);const{imageInfo:u,rasterInfo:p}=this._parseIFDs(l);if(this._headerInfo={littleEndian:n,isBigTiff:f,ifds:l,...u},this._set("rasterInfo",p),!u.isSupported)throw new Error.Z("tiffraster:open","this tiff is not supported: "+u.message);if(!u.tileWidth)throw new Error.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:m=[]}=this.ioConfig;if(!m.includes("aux.xml")){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,p)}m.includes("vat.dbf")||1!==p.bandCount||"u8"!==p.pixelType||(p.attributeTable=await this._fetchAuxiliaryTable(e),(0,maybe.pC)(p.attributeTable)&&(p.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(e,t,r,i={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,r))return null;const s=this._getTileLocation(e,t,r);if(!s)return null;const{ranges:a,actualTileWidth:n,actualTileHeight:o,ifd:f}=s,l=a.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:i.signal}))),u=await Promise.all(l),p=u.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),m=1===u.length?u[0].data:new ArrayBuffer(p),c=[0],h=[0];if(u.length>1){const e=new Uint8Array(m);for(let t=0,r=0;t<u.length;t++){const i=u[t].data;e.set(new Uint8Array(i),r),c[t]=r,r+=i.byteLength,h[t]=i.byteLength}}const{blockWidth:d,blockHeight:y}=this.getBlockWidthHeight(e),g=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offsets:c,sizes:h},width:d,height:y,planes:null,pixelType:null});let x,T,I;if(n!==d||o!==y){let e=g.mask;if(e)for(x=0;x<y;x++)if(I=x*d,x<o)for(T=n;T<d;T++)e[I+T]=0;else for(T=0;T<d;T++)e[I+T]=0;else for(e=new Uint8Array(d*y),g.mask=e,x=0;x<o;x++)for(I=x*d,T=0;T<n;T++)e[I+T]=1}return g}_parseIFDs(e){const t=(0,TiffDecoder.FI)(e),{width:r,height:i,tileWidth:s,tileHeight:a,planes:n,pixelType:l,compression:u,firstPyramidLevel:m,maximumPyramidLevel:c,pyramidBlockWidth:d,pyramidBlockHeight:y,tileBoundary:g,affine:x,metadata:T}=t;let R=pamParser_m(t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid),v=!1;null==R&&(v=!0,R=new SpatialReference.Z({wkid:3857}));const k=new Extent.Z({...t.extent,spatialReference:R}),D=new Point.Z(k?{x:k.xmin,y:k.ymax,spatialReference:R}:{x:0,y:0}),j=new RasterStorageInfo.Z({blockWidth:s,blockHeight:a,pyramidBlockWidth:d,pyramidBlockHeight:y,compression:u,origin:D,firstPyramidLevel:m,maximumPyramidLevel:c,blockBoundary:g}),O=new Point.Z({x:(k.xmax-k.xmin)/r,y:(k.ymax-k.ymin)/i,spatialReference:R}),P=T?{BandProperties:T.bandProperties,DataType:T.dataType}:{};let B=null;const L=TIFFRaster_F(e[0],"PHOTOMETRICINTERPRETATION"),A=E(e[0],"COLORMAP");if(3===L&&A?.length>3&&A.length%3==0){B=[];const e=A.length/3;for(let t=0;t<e;t++)B.push([t,A[t]>>>8,A[t+e]>>>8,A[t+2*e]>>>8])}const z=new RasterInfo.Z({width:r,height:i,bandCount:n,pixelType:l,pixelSize:O,storageInfo:j,spatialReference:R,isPseudoSpatialReference:v,keyProperties:P,extent:k,colormap:B,statistics:T?T.statistics:null});return x?.length&&(z.nativeExtent=new Extent.Z({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:R}),z.transform=new PolynomialTransform.Z({polynomialOrder:1,forwardCoefficients:[x[2]+x[0]/2,x[5]-x[3]/2,x[0],x[3],-x[1],-x[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new Point.Z({x:(k.xmax-k.xmin)/r,y:(k.ymax-k.ymin)/i,spatialReference:R}),j.origin.x=-.5,j.origin.y=.5),{imageInfo:t,rasterInfo:z}}_processPAMInfo(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&(0,maybe.Wi)(t.statistics)&&(t.statistics=(0,stretchUtils.Oh)(e.histograms)),e.transform&&(0,maybe.Wi)(t.transform)){t.transform=e.transform,t.nativeExtent=t.extent;const r=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new Point.Z({x:(r.xmax-r.xmin)/t.width,y:(r.ymax-r.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=r}t.spatialReference||(t.spatialReference=e.spatialReference)}async _readIFDs(e,t,r,i,s,a=4,n){if(!i)return null;(i>=t.byteLength||i<0)&&(t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=i+s,i=0);const o=await this._readIFD(t,r,i,s,TiffTags.Z.TIFF_TAGS,a,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-s,s,a,n)}async _readIFD(e,t,r,s,a=TiffTags.Z.TIFF_TAGS,n=4,o){if(!e)return null;const f=(0,TiffDecoder.vr)(e,t,r,s,a,n);if(f.success){const r=[];if(f.ifd?.forEach((e=>{e.values||r.push(e)})),r.length>0){const a=r.map((e=>e.offlineOffsetSize)).filter(maybe.pC),n=Math.min.apply(null,a.map((e=>e[0])));if(Math.min.apply(null,a.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:i}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:o});e=i,s=n,r.forEach((r=>(0,TiffDecoder.Dq)(e,t,r,s)))}}if(f.ifd?.has("GEOKEYDIRECTORY")){const r=f.ifd.get("GEOKEYDIRECTORY"),i=r?.values;if(i&&i.length>4){const a=i[0]+"."+i[1]+"."+i[2],n=await this._readIFD(e,t,r.valueOffset+6-s,s,TiffTags.Z.GEO_KEYS,2,o);r.data=n.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]})}}return f}if(f.requiredBufferSize&&f.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:s,to:s+f.requiredBufferSize+4},responseType:"array-buffer",signal:o});return(e=r.data).byteLength<f.requiredBufferSize?null:this._readIFD(e,t,0,s,TiffTags.Z.TIFF_TAGS,4,o)}}_getTileLocation(e,t,r){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(i-1),n=this._headerInfo?.ifds[a];if(!n)return null;const o=(0,TiffDecoder.If)(n,this._headerInfo),f=E(n,"TILEOFFSETS");if(void 0===f)return null;const l=E(n,"TILEBYTECOUNTS"),{minRow:u,minCol:p,maxRow:m,maxCol:c}=s[a];if(t>m||r>c||t<u||r<p)return null;const h=TIFFRaster_F(n,"IMAGEWIDTH"),d=TIFFRaster_F(n,"IMAGELENGTH"),y=TIFFRaster_F(n,"TILEWIDTH"),x=TIFFRaster_F(n,"TILELENGTH"),T=o?this.rasterInfo.bandCount:1,I=T*t*(c+1)+r,w=[{from:f[I],to:f[I+T-1]+l[I+T-1]-1}];if(o){let e=!0;for(let t=0;t<T;t++)if(f[I+t]+l[I+t]!==f[I+t+1]){e=!1;break}if(!e)for(let t=0;t<T;t++)w[t]={from:f[I+t],to:f[I+t]+l[I+t]-1}}const b=f[I],_=l[I];return null==b||null==_?null:{ranges:w,ifd:n,actualTileWidth:r===c&&h%y||y,actualTileHeight:t===m&&d%x||x}}async _fetchAuxiliaryMetaData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return pamParser_p(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),r=DBFParser_r.parse(t);return r?.recordSet?FeatureSet.default.fromJSON(r.recordSet):null}catch{return null}}};(0,tslib_es6._)([(0,property.Cb)()],R.prototype,"_files",void 0),(0,tslib_es6._)([(0,property.Cb)()],R.prototype,"_headerInfo",void 0),(0,tslib_es6._)([(0,property.Cb)()],R.prototype,"_bufferSize",void 0),(0,tslib_es6._)([(0,property.Cb)({type:String,json:{write:!0}})],R.prototype,"datasetFormat",void 0),R=(0,tslib_es6._)([(0,subclass.j)("esri.layers.support.rasterDatasets.TIFFRaster")],R);const v=R,RasterFactory_c=new Map;RasterFactory_c.set("CRF",{desc:"Cloud Raster Format",constructor:I}),RasterFactory_c.set("MRF",{desc:"Meta Raster Format",constructor:F}),RasterFactory_c.set("TIFF",{desc:"GeoTIFF",constructor:v}),RasterFactory_c.set("RasterTileServer",{desc:"Raster Tile Server",constructor:ImageServerRaster_w}),RasterFactory_c.set("JPG",{desc:"JPG Raster Format",constructor:ImageAuxRaster_y}),RasterFactory_c.set("PNG",{desc:"PNG Raster Format",constructor:ImageAuxRaster_y}),RasterFactory_c.set("GIF",{desc:"GIF Raster Format",constructor:ImageAuxRaster_y}),RasterFactory_c.set("BMP",{desc:"BMP Raster Format",constructor:ImageAuxRaster_y});var popupUtils=__webpack_require__("./node_modules/@arcgis/core/support/popupUtils.js");let ImageryTileLayer_N=class extends((0,BlendLayer.h)((0,ScaleRangeLayer.M)((0,OperationalLayer.q)((0,PortalLayer.I)((0,CustomParametersMixin.N)(N((0,TemporalLayer.n)((0,RefreshableLayer.Q)((0,MultiOriginJSONSupport.R)(Layer.Z)))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=(0,maybe.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(promiseUtils.r9).then((()=>this._openRaster(r)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let e=[new Field.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:r}=this,{attributeTable:t}=r,o=(0,maybe.pC)(t)?t.fields:null;if(o){const r=o.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name="Raster."+e.name,r}));e=e.concat(r)}const{dataType:s,multidimensionalInfo:n}=r;if(("vector-magdir"===s||"vector-uv"===s)&&(0,maybe.pC)(n)){const r=n.variables[0].unit?.trim(),t="Magnitude"+(r?` (${r})`:"");e.push(new Field.Z({name:"Raster.Magnitude",alias:t,domain:null,editable:!1,type:"double"})),e.push(new Field.Z({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return e}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,r,o){const i=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,s=(0,rasterRenderers.ij)(i,o)||void 0;if(null!=s)return s}createPopupTemplate(e){return(0,popupUtils.eZ)({fields:this.rasterFields,title:this.title},e)}write(e,r){const{raster:t}=this;if(this.loaded?"RasterTileServer"===t.datasetFormat&&("Raster"===t.tileType||"Map"===t.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,r);if(r&&r.messages){const e=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new Error.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url;else{const r=await class RasterFactory_n{static get supportedFormats(){const t=new Set;return RasterFactory_c.forEach(((e,r)=>t.add(r))),t}static async open(e){const{url:r,ioConfig:s,sourceJSON:o}=e;let a=e.datasetFormat;null==a&&r.lastIndexOf(".")&&(a=r.slice(r.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(a="RasterTileServer");const n={url:r,sourceJSON:o,datasetFormat:a,ioConfig:s??{bandIds:null,sampling:null}};let l,i;if(a&&this.supportedFormats.has(a)){if("CRF"===a&&!s?.enableCRF)throw new Error.Z("rasterfactory:open",`cannot open raster: ${r}`);return l=RasterFactory_c.get(a).constructor,i=new l(n),await i.open({signal:e.signal}),i}if(a)throw new Error.Z("rasterfactory:open","not a supported format "+a);const u=Array.from(RasterFactory_c.keys());let F=0;const m=()=>(a=u[F++],a&&("CRF"!==a||s?.enableCRF)?(l=RasterFactory_c.get(a).constructor,i=new l(n),i.open({signal:e.signal}).then((()=>i)).catch((()=>m()))):null);return m()}static register(t,e,r){RasterFactory_c.has(t.toUpperCase())||RasterFactory_c.set(t.toUpperCase(),{desc:e,constructor:r})}}.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:e});if(this.rasterFunction){const e=(0,rasterFunctionHelper.Ue)(this.rasterFunction.toJSON(),{raster:r}),t=new c({rasterFunction:e});await t.open(),this.raster=t}else this.raster=r}const{rasterInfo:r}=this.raster;if(!r)throw new Error.Z("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){const e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,reactiveUtils.YP)((()=>this.customParameters),(e=>{this.raster.ioConfig.customFetchParameters=e})))}};(0,tslib_es6._)([(0,property.Cb)({type:[ensureType.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],ImageryTileLayer_N.prototype,"bandIds",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,enumeration.J)(rasterEnums.c)],ImageryTileLayer_N.prototype,"interpolation",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{write:!0}})],ImageryTileLayer_N.prototype,"multidimensionalDefinition",void 0),(0,tslib_es6._)([(0,property.Cb)(commonProperties.rn)],ImageryTileLayer_N.prototype,"legendEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ImageryTileLayer_N.prototype,"isReference",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["show","hide"]})],ImageryTileLayer_N.prototype,"listMode",void 0),(0,tslib_es6._)([(0,property.Cb)({json:{read:!0,write:!0}})],ImageryTileLayer_N.prototype,"blendMode",void 0),(0,tslib_es6._)([(0,property.Cb)()],ImageryTileLayer_N.prototype,"sourceJSON",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],ImageryTileLayer_N.prototype,"version",void 0),(0,tslib_es6._)([(0,property.Cb)()],ImageryTileLayer_N.prototype,"title",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,json:{read:!1}})],ImageryTileLayer_N.prototype,"type",void 0),(0,tslib_es6._)([(0,property.Cb)({type:["ArcGISTiledImageServiceLayer"]})],ImageryTileLayer_N.prototype,"operationalLayerType",void 0),(0,tslib_es6._)([(0,property.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,r,t){r[t]=!e}}}})],ImageryTileLayer_N.prototype,"popupEnabled",void 0),(0,tslib_es6._)([(0,property.Cb)({type:PopupTemplate.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],ImageryTileLayer_N.prototype,"popupTemplate",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0})],ImageryTileLayer_N.prototype,"defaultPopupTemplate",null),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,type:[Field.Z]})],ImageryTileLayer_N.prototype,"fields",void 0),(0,tslib_es6._)([(0,property.Cb)({readOnly:!0,type:[Field.Z]})],ImageryTileLayer_N.prototype,"rasterFields",null),(0,tslib_es6._)([(0,property.Cb)({types:rasterRenderers.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:rasterRenderers.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],ImageryTileLayer_N.prototype,"renderer",null),(0,tslib_es6._)([(0,reader.r)("renderer")],ImageryTileLayer_N.prototype,"readRenderer",null),ImageryTileLayer_N=(0,tslib_es6._)([(0,subclass.j)("esri.layers.ImageryTileLayer")],ImageryTileLayer_N);const J=ImageryTileLayer_N},"./node_modules/@arcgis/core/layers/support/rasterDatasets/RawBlockCache.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{OE:()=>m,Gc:()=>d,Qg:()=>x,Rq:()=>a,gX:()=>h,z2:()=>u,ET:()=>f,Vx:()=>g});__webpack_require__("./node_modules/@arcgis/core/geometry.js");var maybe=__webpack_require__("./node_modules/@arcgis/core/core/maybe.js");var rasterProjectionHelper=__webpack_require__("./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js"),Point=__webpack_require__("./node_modules/@arcgis/core/geometry/Point.js");const c=new Map,i=new class t{constructor(t=15e3,e=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,e)}decreaseRefCount(t,e){const s=t+"/"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.refCount--,t.refCount<=0&&(r.delete(s),t.controller&&t.controller.abort()),t.refCount}return 0}getBlock(t,e){const s=t+"/"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.ts=Date.now(),t.refCount++,r.delete(s),r.set(s,t),t.block}return null}putBlock(t,e,s,r){const i=this._cachedBlocks,c=t+"/"+e;if(i.has(c)){const t=i.get(c);t.ts=Date.now(),t.refCount++}else i.set(c,{block:s,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(t,e){const s=this._cachedBlocks,r=t+"/"+e;s.has(r)&&s.delete(r)}updateMaxSize(t){this._size=t,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval((()=>{const e=Array.from(t),s=Date.now();for(let r=0;r<e.length&&e[r][1].ts<=s-this._duration;r++)t.delete(e[r][0]);0===t.size&&this._clearTimer()}),this._interval)}_trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const e=Array.from(t);for(let s=0;s<e.length-this._size;s++)t.delete(e[s][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};function a(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){const n={extent:null,rasterInfo:t,cache:new Map},o=c.get(e);return o?(o.push(n),o.length-1):(c.set(e,[n]),0)}function f(e,t){const n=c.get(e);n&&(n[t]=null,n.some((e=>null!=e))||c.delete(e))}function m(e,t,n){const o=c.get(e);if(!o)return null==t?i.decreaseRefCount(e,n):0;if(null==t||null==o[t])return i.decreaseRefCount(e,n);const l=o[t]?.cache,r=l?.get(n);if(l&&r){if(r.refCount--,0===r.refCount){l.delete(n);for(let e=0;e<o.length;e++)o[e]?.cache.delete(n);r.controller&&r.controller.abort()}return r.refCount}return 0}function x(e,t,n){const o=c.get(e);if(!o)return null==t?i.getBlock(e,n):null;if(null==t||null==o[t]){for(let e=0;e<o.length;e++){const t=o[e]?.cache.get(n);if(t)return t.refCount++,t.block}return i.getBlock(e,n)}const l=o[t]?.cache.get(n);if(l)return l.refCount++,l.block;for(let r=0;r<o.length;r++){if(r===t||!o[r])continue;const e=o[r]?.cache,l=e?.get(n);if(e&&l)return l.refCount++,e.set(n,l),l.block}return null}function h(e,t,n,o,l=null){const r=c.get(e);if(!r)return void(null==t&&i.putBlock(e,n,o,l));if(null==t||null==r[t])return void i.putBlock(e,n,o,l);const a={refCount:1,block:o,isResolved:!1,isRejected:!1,controller:l};o.then((()=>a.isResolved=!0)).catch((()=>a.isRejected=!0)),r[t]?.cache.set(n,a)}function d(e,t,n){const o=c.get(e);o?null!=t&&null!=o[t]?o[t]?.cache.delete(n):i.deleteBlock(e,n):null==t&&i.deleteBlock(e,n)}function y(e,t){const n=c.get(e);return n?n[t]??null:null}function g(t,c,i,a,u,f,s=null){const m=y(t,c);if(!m)return;const x=m.extent,{cache:h,rasterInfo:d}=m;if(x&&x.xmin===i.xmin&&x.xmax===i.xmax&&x.ymin===i.ymin&&x.ymax===i.ymax)return;a=a??0;const g=i.clone().normalize(),{spatialReference:p,transform:k}=d,M=new Set;for(let y=0;y<g.length;y++){const t=g[y];if(t.xmax-t.xmin<=a||t.ymax-t.ymin<=a)continue;let c=(0,rasterProjectionHelper.tB)(t,p,s);(0,maybe.pC)(k)&&(c=k.inverseTransform(c));const i=new Point.Z({x:a,y:a,spatialReference:t.spatialReference});if(null==u&&!(u=(0,rasterProjectionHelper.VO)(i,p,t,s)))return;const{pyramidLevel:m,pyramidResolution:x,excessiveReading:h}=(0,rasterProjectionHelper.kr)(u,d,f||"closest");if(h)return;const{storageInfo:R}=d,{origin:C}=R,j={x:Math.max(0,Math.floor((c.xmin-C.x)/x.x)),y:Math.max(0,Math.floor((C.y-c.ymax)/x.y))},B=Math.ceil((c.xmax-c.xmin)/x.x-.1),b=Math.ceil((c.ymax-c.ymin)/x.y-.1),v=m>0?R.pyramidBlockWidth:R.blockWidth,w=m>0?R.pyramidBlockHeight:R.blockHeight,$=1,I=Math.max(0,Math.floor(j.x/v)-$),H=Math.max(0,Math.floor(j.y/w)-$),E=Math.floor((j.x+B-1)/v)+$,P=Math.floor((j.y+b-1)/w)+$;for(let e=H;e<=P;e++)for(let t=I;t<=E;t++)M.add(`${m}/${e}/${t}`)}h.forEach(((e,t)=>{if(!M.has(t)){const e=h.get(t);(null==e||e.isResolved||e.isRejected)&&h.delete(t)}})),m.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}}}]);
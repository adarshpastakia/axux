{"version":3,"file":"9353.8bf1525f.iframe.bundle.js","mappings":";;;;AAQA;;;;;AAKA;;;;;;AAMA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;AAOA;;;AAGA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;;;AAIA;;;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;;ACzFA;;;;;AAKA;;;;;;;;;AASA;;AAEA;;;;AAIA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;;AAEA;;AAEA;;;AAGA;AACA;;;;;;;;;AASA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;ACzDA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;AAMA;;;;;;;AC5EA;;;;AAIA;;;;;;;;AAQA;;;;;;;;AAQA;;;ACxBA;;ACDA;;AAEA;;;;;;;ACGA;;;ACJA;;AAEA;;ACHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;;;;ACxDA;;AAEA;;;;AAIA;;AAEA;;ACVA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;;ACpBA;;ACDA;;AAEA;;AAEA;;;;;;;;;ACGA;;;AAGA;;;AAGA;;;AAGA;;;;;;AAMA;;;;;;AClBA;AACA;;ACLA;;;;;AAKA;;;AAGA;ACTA;;;ACEA;;AAEA;;AAEA;;;;;;;;;ACEA;;;;AAIA;;;;;;AAMA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;ACFA;;;AClBA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;ACEA;;AAEA;;;;;;;AAOA;;AAEA;;;;;AAKA;;AAEA;;AAEA;;;AC5BA;AACA;;AAEA;;;;;;;;;;AAUA;;ACdA;;AAEA;;;;;;;;;ACKA;;AAEA;;;;ACPA;;;;;;;;AAQA;;;;;ACPA;;;;AAIA;;;AAGA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;;;;;AAKA;;;;;AAKA;;;AAGA;;;AAGA;AACA;AACA;;;AAGA;;;;;ACnDA;;;;;ACAA;;;;;AAKA;;;;;;;;;;;AAWA;;;AAGA;;;;AAIA;;AC1BA;;;;;;;AAOA;AACA;;;ACPA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;AAKA;;;AC3CA;AACA;;AAEA;;;AAGA;;;AAGA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;AAkBA;;AAEA;;;;;;;AAOA;;;;;;;;AAQA;;;;;AAKA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;;;ACtFA;;;ACDA;;;;AAIA;;;ACJA;;AAEA;;AAEA;;AAEA;;;ACNA;;;AAGA;;;;;;;AAOA;;;;;ACRA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;AAQA;;AAEA;;;;;;;AAOA;;AClDA;;;;AAIA;;AAEA;;;;;AAKA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;;ACjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACwDA;;;;AAIA;;AC7DA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;ACLA;;;;;;;AAOA;;;;;;;AAOA;AACA;AACA;;;;;;;;;;;;;;;;AAgBA;;;AAGA;AACA;ACxCA;AACA;;ACAA;;ACAA;;;;;;;;;;;ACSA;;;;;AAKA;;;;;;;;;;;;;;;;;;ACEA;;;;;;;ACXA;;;AAGA;;;AAGA;;;;;;;;;;;;;;;;;AAiBA;;;AAGA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;ACpBA","sources":["webpack://axux/./node_modules/@arcgis/core/chunks/DefaultMaterial.glsl.js","webpack://axux/./node_modules/@arcgis/core/chunks/RealisticTree.glsl.js","webpack://axux/./node_modules/@arcgis/core/chunks/SSAO.glsl.js","webpack://axux/./node_modules/@arcgis/core/chunks/SSAOBlur.glsl.js","webpack://axux/./node_modules/@arcgis/core/chunks/TextureOnly.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/DecodeNormal.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/DecodeSymbolColor.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexPosition.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/TextureAtlasLookup.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexTextureCoordinates.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/AnalyticalSkyModel.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PiUtils.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/DiscardOrAdjustAlphaBlend.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/DoublePrecision.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../core/maybe.js\";import{I as r}from\"./mat4f64.js\";import{ForwardLinearDepth as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as i}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as l}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as s}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as n,NormalAttributeType as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as u}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as p}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as h}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as w,addAmbientBoostFactor as x,addLightingGlobalFactor as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as T}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Normals as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as M,PBRMode as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as P,ReadShadowMapDraw as $}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{colorTextureUV as A,normalTextureUV as N,emissiveTextureUV as S,occlusionTextureUV as E,metallicRoughnessTextureUV as V}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as _}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as D}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as F}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as U}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as B,addCameraPosition as I}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as R}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as W}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as G}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as k}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as q}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as H}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as J}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as K}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function Q(Q){const X=new q,{vertex:Y,fragment:Z,varyings:ee}=X;return B(Y,Q),X.include(c),ee.add(\"vpos\",\"vec3\"),X.include(_,Q),X.include(t,Q),X.include(v,Q),Q.hasColorTextureTransform&&X.include(A),Q.output!==i.Color&&Q.output!==i.Alpha||(Q.hasNormalTextureTransform&&X.include(N),Q.hasEmissionTextureTransform&&X.include(S),Q.hasOcclusionTextureTransform&&X.include(E),Q.hasMetallicRoughnessTextureTransform&&X.include(V),I(Y,Q),X.include(n,Q),X.include(s,Q),Q.normalType===d.Attribute&&Q.offsetBackfaces&&X.include(a),X.include(b,Q),X.include(p,Q),Q.instancedColor&&X.attributes.add(K.INSTANCECOLOR,\"vec4\"),ee.add(\"localvpos\",\"vec3\"),X.include(g,Q),X.include(o,Q),X.include(m,Q),X.include(u,Q),Y.uniforms.add(new z(\"externalColor\",(e=>e.externalColor))),ee.add(\"vcolorExt\",\"vec4\"),Q.hasMultipassTerrain&&ee.add(\"depth\",\"float\"),Q.hasModelTransformation&&Y.uniforms.add(new k(\"model\",(o=>e(o.modelTransformation)?o.modelTransformation:r))),Y.code.add(G`\n      void main(void) {\n        forwardNormalizedVertexColor();\n        vcolorExt = externalColor;\n        ${Q.instancedColor?\"vcolorExt *= instanceColor;\":\"\"}\n        vcolorExt *= vvColor();\n        vcolorExt *= getSymbolColor();\n        forwardColorMixMode();\n\n        if (vcolorExt.a < ${G.float(D)}) {\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        } else {\n          vpos = calculateVPos();\n          localvpos = vpos - view[3].xyz;\n          vpos = subtractOrigin(vpos);\n          ${Q.normalType===d.Attribute?G`vNormalWorld = dpNormal(vvLocalNormal(normalModel()));`:\"\"}\n          vpos = addVerticalOffset(vpos, localOrigin);\n          ${Q.hasVertexTangents?\"vTangent = dpTransformVertexTangent(tangent);\":\"\"}\n          gl_Position = transformPosition(proj, view, ${Q.hasModelTransformation?\"model,\":\"\"} vpos);\n          ${Q.normalType===d.Attribute&&Q.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n        }\n\n        ${Q.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n        forwardLinearDepth();\n        forwardTextureCoordinates();\n        ${Q.hasColorTextureTransform?G`forwardColorUV();`:\"\"}\n        ${Q.hasNormalTextureTransform?G`forwardNormalUV();`:\"\"}\n        ${Q.hasEmissionTextureTransform?G`forwardEmissiveUV();`:\"\"}\n        ${Q.hasOcclusionTextureTransform?G`forwardOcclusionUV();`:\"\"}\n        ${Q.hasMetallicRoughnessTextureTransform?G`forwardMetallicRoughnessUV();`:\"\"}\n      }\n    `)),Q.output===i.Alpha&&(X.include(l,Q),X.include(F,Q),X.include(T,Q),Z.uniforms.add([new W(\"opacity\",(e=>e.opacity)),new W(\"layerOpacity\",(e=>e.layerOpacity))]),Q.hasColorTexture&&Z.uniforms.add(new H(\"tex\",(e=>e.texture))),Z.include(U),Z.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Q.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        ${Q.hasColorTexture?G`\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform?G`colorUV`:G`vuv0`});\n                ${Q.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\n        ${Q.hasVertexColors?G`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        gl_FragColor = vec4(opacity_);\n      }\n    `)),Q.output===i.Color&&(X.include(l,Q),X.include(w,Q),X.include(f,Q),X.include(F,Q),X.include(Q.instancedDoublePrecision?P:$,Q),X.include(T,Q),I(Z,Q),Z.uniforms.add([Y.uniforms.get(\"localOrigin\"),new R(\"ambient\",(e=>e.ambient)),new R(\"diffuse\",(e=>e.diffuse)),new W(\"opacity\",(e=>e.opacity)),new W(\"layerOpacity\",(e=>e.layerOpacity))]),Q.hasColorTexture&&Z.uniforms.add(new H(\"tex\",(e=>e.texture))),X.include(M,Q),X.include(L,Q),Z.include(U),X.include(j,Q),x(Z),y(Z),C(Z),Z.code.add(G`\n      void main() {\n        discardBySlice(vpos);\n        ${Q.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        ${Q.hasColorTexture?G`\n                vec4 texColor = texture2D(tex, ${Q.hasColorTextureTransform?G`colorUV`:G`vuv0`});\n                ${Q.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:G`vec4 texColor = vec4(1.0);`}\n        shadingParams.viewDirection = normalize(vpos - cameraPosition);\n        ${Q.normalType===d.ScreenDerivative?G`\n                vec3 normal = screenDerivativeNormal(localvpos);`:G`\n                shadingParams.normalView = vNormalWorld;\n                vec3 normal = shadingNormal(shadingParams);`}\n        ${Q.pbrMode===O.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        vec3 posWorld = vpos + localOrigin;\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\n        float shadow = ${Q.receiveShadows?\"readShadowMap(vpos, linearDepth)\":Q.spherical?\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\":\"0.0\"};\n\n        vec3 matColor = max(ambient, diffuse);\n        ${Q.hasVertexColors?G`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:G`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${Q.hasNormalTexture?G`\n                mat3 tangentSpace = ${Q.hasVertexTangents?\"computeTangentSpace(normal);\":\"computeTangentSpace(normal, vpos, vuv0);\"}\n                vec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);`:G`vec3 shadingNormal = normal;`}\n        vec3 normalGround = ${Q.spherical?G`normalize(posWorld);`:G`vec3(0.0, 0.0, 1.0);`}\n\n        ${Q.snowCover?G`\n                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\n                albedo = mix(albedo, vec3(1), snow);\n                shadingNormal = mix(shadingNormal, normal, snow);\n                ssao = mix(ssao, 1.0, snow);`:\"\"}\n\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n\n        ${Q.pbrMode===O.Normal||Q.pbrMode===O.Schematic?G`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${Q.snowCover?G`\n                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\n                        emission = mix(emission, vec3(0.0), snow);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:G`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${Q.transparencyPassType===J.Color?G`gl_FragColor = premultiplyAlpha(gl_FragColor);`:\"\"}\n      }\n    `)),X.include(h,Q),X}const X=Object.freeze(Object.defineProperty({__proto__:null,build:Q},Symbol.toStringTag,{value:\"Module\"}));export{X as D,Q as b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as s}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VerticalOffset as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as m}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{EvaluateAmbientOcclusion as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as p,addAmbientBoostFactor as u,addLightingGlobalFactor as b}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightDirection as h,addMainLightIntensity as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{PhysicallyBasedRendering as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as y,PBRMode as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as L,ReadShadowMapDraw as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{VisualVariables as M}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as O}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as P}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as A}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as T,addCameraPosition as E}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as _}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as $}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as N}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as V}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as B}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function I(I){const R=new N,{vertex:z,fragment:k,varyings:G}=R;return T(z,I),R.include(s),G.add(\"vpos\",\"vec3\"),R.include(M,I),R.include(l,I),R.include(g,I),I.output!==r.Color&&I.output!==r.Alpha||(E(R.vertex,I),R.include(t,I),R.include(a,I),I.offsetBackfaces&&R.include(o),I.instancedColor&&R.attributes.add(B.INSTANCECOLOR,\"vec4\"),G.add(\"vNormalWorld\",\"vec3\"),G.add(\"localvpos\",\"vec3\"),I.hasMultipassTerrain&&G.add(\"depth\",\"float\"),R.include(d,I),R.include(e,I),R.include(n,I),R.include(c,I),z.uniforms.add(new _(\"externalColor\",(e=>e.externalColor))),G.add(\"vcolorExt\",\"vec4\"),z.code.add($`\n        void main(void) {\n          forwardNormalizedVertexColor();\n          vcolorExt = externalColor;\n          ${I.instancedColor?\"vcolorExt *= instanceColor;\":\"\"}\n          vcolorExt *= vvColor();\n          vcolorExt *= getSymbolColor();\n          forwardColorMixMode();\n\n          if (vcolorExt.a < ${$.float(O)}) {\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          } else {\n            vpos = calculateVPos();\n            localvpos = vpos - view[3].xyz;\n            vpos = subtractOrigin(vpos);\n            vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, vpos);\n            ${I.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n          }\n          ${I.hasMultipassTerrain?$`depth = (view * vec4(vpos, 1.0)).z;`:\"\"}\n          forwardLinearDepth();\n          forwardTextureCoordinates();\n        }\n      `)),I.output===r.Alpha&&(R.include(i,I),R.include(P,I),R.include(f,I),k.uniforms.add([new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity))]),I.hasColorTexture&&k.uniforms.add(new D(\"tex\",(e=>e.texture))),k.include(A),k.code.add($`\n      void main() {\n        discardBySlice(vpos);\n        ${I.hasMultipassTerrain?$`terrainDepthTest(gl_FragCoord, depth);`:\"\"}\n        ${I.hasColorTexture?$`\n                vec4 texColor = texture2D(tex, ${I.hasColorTextureTransform?$`colorUV`:$`vuv0`});\n                ${I.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:$`vec4 texColor = vec4(1.0);`}\n        ${I.hasVertexColors?$`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:$`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n\n        gl_FragColor = vec4(opacity_);\n      }\n    `)),I.output===r.Color&&(R.include(i,I),R.include(p,I),R.include(v,I),R.include(P,I),R.include(I.instancedDoublePrecision?L:j,I),R.include(f,I),E(R.fragment,I),h(k),u(k),b(k),k.uniforms.add([z.uniforms.get(\"localOrigin\"),z.uniforms.get(\"view\"),new S(\"ambient\",(e=>e.ambient)),new S(\"diffuse\",(e=>e.diffuse)),new F(\"opacity\",(e=>e.opacity)),new F(\"layerOpacity\",(e=>e.layerOpacity))]),I.hasColorTexture&&k.uniforms.add(new D(\"tex\",(e=>e.texture))),R.include(y,I),R.include(x,I),k.include(A),R.extensions.add(\"GL_OES_standard_derivatives\"),w(k),k.code.add($`\n      void main() {\n        discardBySlice(vpos);\n        ${I.hasMultipassTerrain?$`terrainDepthTest(gl_FragCoord, depth);`:\"\"}\n        ${I.hasColorTexture?$`\n                vec4 texColor = texture2D(tex, ${I.hasColorTextureTransform?$`colorUV`:$`vuv0`});\n                ${I.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:$`vec4 texColor = vec4(1.0);`}\n        vec3 viewDirection = normalize(vpos - cameraPosition);\n        ${I.pbrMode===C.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n        ${I.receiveShadows?\"float shadow = readShadowMap(vpos, linearDepth);\":I.spherical?\"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\":\"float shadow = 0.0;\"}\n        vec3 matColor = max(ambient, diffuse);\n        ${I.hasVertexColors?$`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:$`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${I.snowCover?$`albedo = mix(albedo, vec3(1), 0.9);`:$``}\n        ${$`\n            vec3 shadingNormal = normalize(vNormalWorld);\n            albedo *= 1.2;\n            vec3 viewForward = vec3(view[0][2], view[1][2], view[2][2]);\n            float alignmentLightView = clamp(dot(viewForward, -mainLightDirection), 0.0, 1.0);\n            float transmittance = 1.0 - clamp(dot(viewForward, shadingNormal), 0.0, 1.0);\n            float treeRadialFalloff = vColor.r;\n            float backLightFactor = 0.5 * treeRadialFalloff * alignmentLightView * transmittance * (1.0 - shadow);\n            additionalLight += backLightFactor * mainLightIntensity;`}\n        ${I.pbrMode===C.Normal||I.pbrMode===C.Schematic?I.spherical?$`vec3 normalGround = normalize(vpos + localOrigin);`:$`vec3 normalGround = vec3(0.0, 0.0, 1.0);`:$``}\n        ${I.pbrMode===C.Normal||I.pbrMode===C.Schematic?$`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${I.snowCover?$`\n                        mrr = vec3(0.0, 1.0, 0.04);\n                        emission = vec3(0.0);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:$`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        gl_FragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${I.transparencyPassType===V.Color?$`gl_FragColor = premultiplyAlpha(gl_FragColor);`:$``}\n      }\n    `)),R.include(m,I),R}const R=Object.freeze(Object.defineProperty({__proto__:null,build:I},Symbol.toStringTag,{value:\"Module\"}));export{R,I as b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{unwrap as e}from\"../core/maybe.js\";import{s as r}from\"./vec2.js\";import{a as t}from\"./vec2f64.js\";import{ScreenSpacePass as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{ReadLinearDepth as a}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{CameraSpace as n,getZScale as i}from\"../views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js\";import{Float2PassUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{FloatPassUniform as c}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as u}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as f}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";const m=16;function d(){const t=new u,d=t.fragment;return t.include(o),d.include(a),t.include(n),d.uniforms.add(new c(\"radius\",((e,r)=>p(r.camera)))),d.code.add(l`vec3 sphere[16];\nvoid fillSphere() {\nsphere[0] = vec3(0.186937, 0.0, 0.0);\nsphere[1] = vec3(0.700542, 0.0, 0.0);\nsphere[2] = vec3(-0.864858, -0.481795, -0.111713);\nsphere[3] = vec3(-0.624773, 0.102853, -0.730153);\nsphere[4] = vec3(-0.387172, 0.260319, 0.007229);\nsphere[5] = vec3(-0.222367, -0.642631, -0.707697);\nsphere[6] = vec3(-0.01336, -0.014956, 0.169662);\nsphere[7] = vec3(0.122575, 0.1544, -0.456944);\nsphere[8] = vec3(-0.177141, 0.85997, -0.42346);\nsphere[9] = vec3(-0.131631, 0.814545, 0.524355);\nsphere[10] = vec3(-0.779469, 0.007991, 0.624833);\nsphere[11] = vec3(0.308092, 0.209288,0.35969);\nsphere[12] = vec3(0.359331, -0.184533, -0.377458);\nsphere[13] = vec3(0.192633, -0.482999, -0.065284);\nsphere[14] = vec3(0.233538, 0.293706, -0.055139);\nsphere[15] = vec3(0.417709, -0.386701, 0.442449);\n}\nfloat fallOffFunction(float vv, float vn, float bias) {\nfloat f = max(radius * radius - vv, 0.0);\nreturn f * f * f * max(vn-bias, 0.0);\n}`),d.code.add(l`float aoValueFromPositionsAndNormal(vec3 C, vec3 n_C, vec3 Q) {\nvec3 v = Q - C;\nfloat vv = dot(v, v);\nfloat vn = dot(normalize(v), n_C);\nreturn fallOffFunction(vv, vn, 0.1);\n}`),d.uniforms.add([new s(\"nearFar\",((e,r)=>r.camera.nearFar)),new f(\"normalMap\",(e=>e.normalTexture)),new f(\"depthMap\",(e=>e.depthTexture)),new s(\"zScale\",((e,r)=>i(r))),new c(\"projScale\",(e=>e.projScale)),new f(\"rnm\",(e=>e.noiseTexture)),new s(\"rnmScale\",((t,o)=>r(v,o.camera.fullWidth/e(t.noiseTexture).descriptor.width,o.camera.fullHeight/e(t.noiseTexture).descriptor.height))),new c(\"intensity\",(e=>e.intensity)),new s(\"screenSize\",((e,t)=>r(v,t.camera.fullWidth,t.camera.fullHeight)))]),d.code.add(l`\n    void main(void) {\n      fillSphere();\n      vec3 fres = normalize((texture2D(rnm, uv * rnmScale).xyz * 2.0) - vec3(1.0));\n      float currentPixelDepth = linearDepthFromTexture(depthMap, uv, nearFar);\n\n      if (-currentPixelDepth>nearFar.y || -currentPixelDepth<nearFar.x) {\n        gl_FragColor = vec4(0.0);\n        return;\n      }\n\n      vec3 currentPixelPos = reconstructPosition(gl_FragCoord.xy,currentPixelDepth);\n\n      // get the normal of current fragment\n      vec4 norm4 = texture2D(normalMap, uv);\n      vec3 norm = vec3(-1.0) + 2.0 * norm4.xyz;\n      bool isTerrain = norm4.w<0.5;\n\n      float sum = .0;\n      vec3 tapPixelPos;\n\n      // note: the factor 2.0 should not be necessary, but makes ssao much nicer.\n      // bug or deviation from CE somewhere else?\n      float ps = projScale / (2.0 * currentPixelPos.z * zScale.x + zScale.y);\n\n      for(int i = 0; i < ${l.int(m)}; ++i) {\n        vec2 unitOffset = reflect(sphere[i], fres).xy;\n        vec2 offset = vec2(-unitOffset * radius * ps);\n\n        //don't use current or very nearby samples\n        if ( abs(offset.x)<2.0 || abs(offset.y)<2.0) continue;\n\n        vec2 tc = vec2(gl_FragCoord.xy + offset);\n        if (tc.x < 0.0 || tc.y < 0.0 || tc.x > screenSize.x || tc.y > screenSize.y) continue;\n        vec2 tcTap = tc / screenSize;\n        float occluderFragmentDepth = linearDepthFromTexture(depthMap, tcTap, nearFar);\n\n        if (isTerrain) {\n          bool isTerrainTap = texture2D(normalMap, tcTap).w<0.5;\n          if (isTerrainTap) {\n            continue;\n          }\n        }\n\n        tapPixelPos = reconstructPosition(tc, occluderFragmentDepth);\n\n        sum+= aoValueFromPositionsAndNormal(currentPixelPos, norm, tapPixelPos);\n      }\n\n      // output the result\n      float A = max(1.0 - sum * intensity / float(${l.int(m)}),0.0);\n\n      // Anti-tone map to reduce contrast and drag dark region farther: (x^0.2 + 1.2 * x^4)/2.2\n      A = (pow(A, 0.2) + 1.2 * A*A*A*A) / 2.2;\n      gl_FragColor = vec4(A);\n    }\n  `),t}function p(e){return Math.max(10,20*e.computeRenderPixelSizeAtDist(Math.abs(4*e.relativeElevation)))}const v=t(),h=Object.freeze(Object.defineProperty({__proto__:null,build:d,getRadius:p},Symbol.toStringTag,{value:\"Module\"}));export{h as S,d as b,p as g};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{i as e}from\"./vec3.js\";import{ScreenSpacePass as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{ReadLinearDepth as o}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{Float2DrawUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float2DrawUniform.js\";import{Float2PassUniform as a}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{FloatPassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as s}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DDrawUniform as i}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";const f=4;function c(){const c=new s,u=c.fragment;c.include(r);const m=(f+1)/2,p=1/(2*m*m);return u.include(o),u.uniforms.add([new d(\"depthMap\",(e=>e.depthTexture)),new i(\"tex\",(e=>e.colorTexture)),new t(\"blurSize\",(e=>e.blurSize)),new n(\"projScale\",((r,o)=>{const t=e(o.camera.eye,o.camera.center);return t>5e4?Math.max(0,r.projScale-(t-5e4)):r.projScale})),new a(\"nearFar\",((e,r)=>r.camera.nearFar))]),u.code.add(l`\n    void blurFunction(vec2 uv, float r, float center_d, float sharpness, inout float wTotal, inout float bTotal) {\n      float c = texture2D(tex, uv).r;\n      float d = linearDepthFromTexture(depthMap, uv, nearFar);\n\n      float ddiff = d - center_d;\n\n      float w = exp(-r * r * ${l.float(p)} - ddiff * ddiff * sharpness);\n      wTotal += w;\n      bTotal += w * c;\n    }\n  `),u.code.add(l`\n    void main(void) {\n      float b = 0.0;\n      float w_total = 0.0;\n\n      float center_d = linearDepthFromTexture(depthMap, uv, nearFar);\n\n      float sharpness = -0.05 * projScale / center_d;\n      for (int r = -${l.int(f)}; r <= ${l.int(f)}; ++r) {\n        float rf = float(r);\n        vec2 uvOffset = uv + rf * blurSize;\n        blurFunction(uvOffset, rf, center_d, sharpness, w_total, b);\n      }\n\n      gl_FragColor = vec4(b / w_total);\n    }\n  `),c}const u=Object.freeze(Object.defineProperty({__proto__:null,build:c},Symbol.toStringTag,{value:\"Module\"}));export{u as S,c as b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{f as e}from\"./vec4f64.js\";import{ScreenSpacePass as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{Float4PassUniform as o}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{NoParameters as s,glsl as t}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as n}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as a}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";class i extends s{constructor(){super(...arguments),this.color=e(1,1,1,1)}}function l(){const e=new n;return e.include(r),e.fragment.uniforms.add([new a(\"tex\",(e=>e.texture)),new o(\"uColor\",(e=>e.color))]),e.fragment.code.add(t`void main() {\nvec4 texColor = texture2D(tex, uv);\ngl_FragColor = texColor * uColor;\n}`),e}const d=Object.freeze(Object.defineProperty({__proto__:null,TextureOnlyPassParameters:i,build:l},Symbol.toStringTag,{value:\"Module\"}));export{i as T,d as a,l as b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as e}from\"./ShaderOutput.js\";import{VertexPosition as r}from\"./attributes/VertexPosition.glsl.js\";import{Float2PassUniform as a}from\"../shaderModules/Float2PassUniform.js\";import{glsl as o}from\"../shaderModules/interfaces.js\";function t(e){e.varyings.add(\"linearDepth\",\"float\")}function i(e){e.vertex.uniforms.add(new a(\"nearFar\",((e,r)=>r.camera.nearFar)))}function n(e){e.vertex.code.add(o`float calculateLinearDepth(vec2 nearFar,float z) {\nreturn (-z - nearFar[0]) / (nearFar[1] - nearFar[0]);\n}`)}function d(a,d){const{vertex:s}=a;switch(d.output){case e.Color:if(d.receiveShadows)return t(a),void s.code.add(o`void forwardLinearDepth() { linearDepth = gl_Position.w; }`);break;case e.Depth:case e.Shadow:case e.ShadowHighlight:case e.ShadowExcludeHighlight:return a.include(r,d),t(a),i(a),n(a),void s.code.add(o`void forwardLinearDepth() {\nlinearDepth = calculateLinearDepth(nearFar, vPosition_view.z);\n}`)}s.code.add(o`void forwardLinearDepth() {}`)}export{d as ForwardLinearDepth,n as addCalculateLinearDepth,t as addLinearDepth,i as addNearFar};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../shaderModules/interfaces.js\";function e(e){e.vertex.code.add(o`vec4 offsetBackfacingClipPosition(vec4 posClip, vec3 posWorld, vec3 normalWorld, vec3 camPosWorld) {\nvec3 camToVert = posWorld - camPosWorld;\nbool isBackface = dot(camToVert, normalWorld) > 0.0;\nif (isBackface) {\nposClip.z += 0.0000003 * posClip.w;\n}\nreturn posClip;\n}`)}export{e as Offset};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as i}from\"../shaderModules/interfaces.js\";import{VertexAttribute as e}from\"../../lib/VertexAttribute.js\";function o(o,t=!0){o.attributes.add(e.POSITION,\"vec2\"),t&&o.varyings.add(\"uv\",\"vec2\"),o.vertex.code.add(i`\n    void main(void) {\n      gl_Position = vec4(position, 0.0, 1.0);\n      ${t?i`uv = position * 0.5 + vec2(0.5);`:\"\"}\n    }\n  `)}export{o as ScreenSpacePass};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{unwrap as e,isNone as s,isSome as i}from\"../../../../../core/maybe.js\";import{w as a}from\"../../../../../chunks/mat4.js\";import{c as o}from\"../../../../../chunks/mat4f64.js\";import{m as c,a as r,b as l,s as t}from\"../../../../../chunks/vec3.js\";import{Z as n,c as f}from\"../../../../../chunks/vec3f64.js\";import{Float3DrawUniform as d}from\"../shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as _}from\"../shaderModules/Float3PassUniform.js\";import{NoParameters as P,glsl as h}from\"../shaderModules/interfaces.js\";class m extends P{constructor(e){super(),this.slicePlaneLocalOrigin=e}}function p(s,i){H(s,i,[new _(\"slicePlaneOrigin\",((e,s)=>v(i,e,s))),new _(\"slicePlaneBasis1\",((s,a)=>B(i,s,a,e(a.slicePlane)?.basis1))),new _(\"slicePlaneBasis2\",((s,a)=>B(i,s,a,e(a.slicePlane)?.basis2)))])}function u(s,i){H(s,i,[new d(\"slicePlaneOrigin\",((e,s)=>v(i,e,s))),new d(\"slicePlaneBasis1\",((s,a)=>B(i,s,a,e(a.slicePlane)?.basis1))),new d(\"slicePlaneBasis2\",((s,a)=>B(i,s,a,e(a.slicePlane)?.basis2)))])}function H(e,s,i){if(!s.hasSlicePlane){const i=h`#define rejectBySlice(_pos_) false\n#define discardBySlice(_pos_) {}\n#define highlightSlice(_color_, _pos_) (_color_)`;return s.hasSliceInVertexProgram&&e.vertex.code.add(i),void e.fragment.code.add(i)}e.extensions.add(\"GL_OES_standard_derivatives\"),s.hasSliceInVertexProgram&&e.vertex.uniforms.add(i),e.fragment.uniforms.add(i);const a=h`struct SliceFactors {\nfloat front;\nfloat side0;\nfloat side1;\nfloat side2;\nfloat side3;\n};\nSliceFactors calculateSliceFactors(vec3 pos) {\nvec3 rel = pos - slicePlaneOrigin;\nvec3 slicePlaneNormal = -cross(slicePlaneBasis1, slicePlaneBasis2);\nfloat slicePlaneW = -dot(slicePlaneNormal, slicePlaneOrigin);\nfloat basis1Len2 = dot(slicePlaneBasis1, slicePlaneBasis1);\nfloat basis2Len2 = dot(slicePlaneBasis2, slicePlaneBasis2);\nfloat basis1Dot = dot(slicePlaneBasis1, rel);\nfloat basis2Dot = dot(slicePlaneBasis2, rel);\nreturn SliceFactors(\ndot(slicePlaneNormal, pos) + slicePlaneW,\n-basis1Dot - basis1Len2,\nbasis1Dot - basis1Len2,\n-basis2Dot - basis2Len2,\nbasis2Dot - basis2Len2\n);\n}\nbool sliceByFactors(SliceFactors factors) {\nreturn factors.front < 0.0\n&& factors.side0 < 0.0\n&& factors.side1 < 0.0\n&& factors.side2 < 0.0\n&& factors.side3 < 0.0;\n}\nbool sliceEnabled() {\nreturn dot(slicePlaneBasis1, slicePlaneBasis1) != 0.0;\n}\nbool sliceByPlane(vec3 pos) {\nreturn sliceEnabled() && sliceByFactors(calculateSliceFactors(pos));\n}\n#define rejectBySlice(_pos_) sliceByPlane(_pos_)\n#define discardBySlice(_pos_) { if (sliceByPlane(_pos_)) discard; }`,o=h`vec4 applySliceHighlight(vec4 color, vec3 pos) {\nSliceFactors factors = calculateSliceFactors(pos);\nconst float HIGHLIGHT_WIDTH = 1.0;\nconst vec4 HIGHLIGHT_COLOR = vec4(0.0, 0.0, 0.0, 0.3);\nfactors.front /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.front);\nfactors.side0 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side0);\nfactors.side1 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side1);\nfactors.side2 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side2);\nfactors.side3 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side3);\nif (sliceByFactors(factors)) {\nreturn color;\n}\nfloat highlightFactor = (1.0 - step(0.5, factors.front))\n* (1.0 - step(0.5, factors.side0))\n* (1.0 - step(0.5, factors.side1))\n* (1.0 - step(0.5, factors.side2))\n* (1.0 - step(0.5, factors.side3));\nreturn mix(color, vec4(HIGHLIGHT_COLOR.rgb, color.a), highlightFactor * HIGHLIGHT_COLOR.a);\n}`,c=s.hasSliceHighlight?h`\n        ${o}\n        #define highlightSlice(_color_, _pos_) (sliceEnabled() ? applySliceHighlight(_color_, _pos_) : (_color_))\n      `:h`#define highlightSlice(_color_, _pos_) (_color_)`;s.hasSliceInVertexProgram&&e.vertex.code.add(a),e.fragment.code.add(a),e.fragment.code.add(c)}function g(e,s,i){return e.instancedDoublePrecision?t(S,i.camera.viewInverseTransposeMatrix[3],i.camera.viewInverseTransposeMatrix[7],i.camera.viewInverseTransposeMatrix[11]):s.slicePlaneLocalOrigin}function I(e,s){return i(e)?l(L,s.origin,e):s.origin}function b(e,s,o){return e.hasSliceTranslatedView?i(s)?a(G,o.camera.viewMatrix,s):o.camera.viewMatrix:null}function v(e,a,o){if(s(o.slicePlane))return n;const r=g(e,a,o),l=I(r,o.slicePlane),t=b(e,r,o);return i(t)?c(L,l,t):l}function B(e,a,o,t){if(s(t)||s(o.slicePlane))return n;const f=g(e,a,o),d=I(f,o.slicePlane),_=b(e,f,o);return i(_)?(r(w,t,d),c(L,d,_),c(w,w,_),l(w,w,L)):t}const S=f(),L=f(),w=f(),G=o();export{u as SliceDraw,p as SlicePass,m as SlicePlaneParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{addCalculateLinearDepth as e}from\"./ForwardLinearDepth.glsl.js\";import{glsl as o}from\"../shaderModules/interfaces.js\";function r(r,t){if(e(r),t.hasModelTransformation)return r.vertex.code.add(o`vec4 transformPositionWithDepth(mat4 proj, mat4 view, mat4 model, vec3 pos, vec2 nearFar, out float depth) {\nvec4 eye = view * (model * vec4(pos, 1.0));\ndepth = calculateLinearDepth(nearFar, eye.z);\nreturn proj * eye;\n}`),void r.vertex.code.add(o`vec4 transformPosition(mat4 proj, mat4 view, mat4 model, vec3 pos) {\nreturn proj * (view * (model * vec4(pos, 1.0)));\n}`);r.vertex.code.add(o`vec4 transformPositionWithDepth(mat4 proj, mat4 view, vec3 pos, vec2 nearFar, out float depth) {\nvec4 eye = view * vec4(pos, 1.0);\ndepth = calculateLinearDepth(nearFar,eye.z);\nreturn proj * eye;\n}`),r.vertex.code.add(o`vec4 transformPosition(mat4 proj, mat4 view, vec3 pos) {\nreturn proj * (view * vec4(pos, 1.0));\n}`)}export{r as Transform};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../../../chunks/tslib.es6.js\";import{s as r}from\"../../../../../../chunks/vec3.js\";import{c as i}from\"../../../../../../chunks/vec3f64.js\";import{ShaderOutput as o}from\"../ShaderOutput.js\";import{DoublePrecision as n}from\"../util/DoublePrecision.glsl.js\";import{addViewNormal as a}from\"../util/View.glsl.js\";import{Float3DrawUniform as t}from\"../../shaderModules/Float3DrawUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";import{ShaderTechniqueConfiguration as c,parameter as d}from\"../../shaderTechnique/ShaderTechniqueConfiguration.js\";import{VertexAttribute as l}from\"../../../lib/VertexAttribute.js\";import{encodeDoubleHi as m,encodeDoubleLo as u}from\"../../../../../webgl/doublePrecisionUtils.js\";class v extends c{constructor(){super(...arguments),this.instancedDoublePrecision=!1}}function p(e,i){i.instanced&&i.instancedDoublePrecision&&(e.attributes.add(l.MODELORIGINHI,\"vec3\"),e.attributes.add(l.MODELORIGINLO,\"vec3\"),e.attributes.add(l.MODEL,\"mat3\"),e.attributes.add(l.MODELNORMAL,\"mat3\"));const c=e.vertex;i.instancedDoublePrecision&&(c.include(n,i),c.uniforms.add(new t(\"viewOriginHi\",((e,i)=>m(r(b,i.camera.viewInverseTransposeMatrix[3],i.camera.viewInverseTransposeMatrix[7],i.camera.viewInverseTransposeMatrix[11]),b)))),c.uniforms.add(new t(\"viewOriginLo\",((e,i)=>u(r(b,i.camera.viewInverseTransposeMatrix[3],i.camera.viewInverseTransposeMatrix[7],i.camera.viewInverseTransposeMatrix[11]),b))))),c.code.add(s`\n    vec3 calculateVPos() {\n      ${i.instancedDoublePrecision?\"return model * localPosition().xyz;\":\"return localPosition().xyz;\"}\n    }\n    `),c.code.add(s`\n    vec3 subtractOrigin(vec3 _pos) {\n      ${i.instancedDoublePrecision?s`\n          vec3 originDelta = dpAdd(viewOriginHi, viewOriginLo, -modelOriginHi, -modelOriginLo);\n          return _pos - originDelta;`:\"return vpos;\"}\n    }\n    `),c.code.add(s`\n    vec3 dpNormal(vec4 _normal) {\n      ${i.instancedDoublePrecision?\"return normalize(modelNormal * _normal.xyz);\":\"return normalize(_normal.xyz);\"}\n    }\n    `),i.output===o.Normal&&(a(c),c.code.add(s`\n    vec3 dpNormalView(vec4 _normal) {\n      ${i.instancedDoublePrecision?\"return normalize((viewNormal * vec4(modelNormal * _normal.xyz, 1.0)).xyz);\":\"return normalize((viewNormal * _normal).xyz);\"}\n    }\n    `)),i.hasVertexTangents&&c.code.add(s`\n    vec4 dpTransformVertexTangent(vec4 _tangent) {\n      ${i.instancedDoublePrecision?\"return vec4(modelNormal * _tangent.xyz, _tangent.w);\":\"return _tangent;\"}\n\n    }\n    `)}e([d()],v.prototype,\"instancedDoublePrecision\",void 0);const b=i();export{v as InstancedDoubleConfiguration,p as InstancedDoublePrecision};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function o(o){const f=e`vec3 decodeNormal(vec2 f) {\nfloat z = 1.0 - abs(f.x) - abs(f.y);\nreturn vec3(f + sign(f) * min(z, 0.0), z);\n}`;o.vertex.code.add(f)}export{o as DecodeNormal};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{DecodeNormal as r}from\"../util/DecodeNormal.glsl.js\";import{glsl as t}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as o}from\"../../../lib/VertexAttribute.js\";function i(i,d){switch(d.normalType){case a.CompressedAttribute:i.include(r),i.attributes.add(o.NORMALCOMPRESSED,\"vec2\"),i.vertex.code.add(t`vec3 normalModel() {\nreturn decodeNormal(normalCompressed);\n}`);break;case a.Attribute:i.attributes.add(o.NORMAL,\"vec3\"),i.vertex.code.add(t`vec3 normalModel() {\nreturn normal;\n}`);break;case a.ScreenDerivative:i.extensions.add(\"GL_OES_standard_derivatives\"),i.fragment.code.add(t`vec3 screenDerivativeNormal(vec3 positionView) {\nreturn normalize(cross(dFdx(positionView), dFdy(positionView)));\n}`);break;default:e(d.normalType);case a.COUNT:case a.Ground:}}var a;!function(e){e[e.Attribute=0]=\"Attribute\",e[e.CompressedAttribute=1]=\"CompressedAttribute\",e[e.Ground=2]=\"Ground\",e[e.ScreenDerivative=3]=\"ScreenDerivative\",e[e.COUNT=4]=\"COUNT\"}(a||(a={}));export{i as NormalAttribute,a as NormalAttributeType};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ColorMixModeEnum as o}from\"../../../../../layers/support/symbolColorUtils.js\";import{glsl as l}from\"../../../../core/shaderModules/interfaces.js\";function e(e){e.vertex.code.add(l`\n    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {\n      float symbolAlpha = 0.0;\n\n      const float maxTint = 85.0;\n      const float maxReplace = 170.0;\n      const float scaleAlpha = 3.0;\n\n      if (symbolColor.a > maxReplace) {\n        colorMixMode = ${l.int(o.Multiply)};\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);\n      } else if (symbolColor.a > maxTint) {\n        colorMixMode = ${l.int(o.Replace)};\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);\n      } else if (symbolColor.a > 0.0) {\n        colorMixMode = ${l.int(o.Tint)};\n        symbolAlpha = scaleAlpha * symbolColor.a;\n      } else {\n        colorMixMode = ${l.int(o.Multiply)};\n        symbolAlpha = 0.0;\n      }\n\n      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);\n    }\n  `)}export{e as DecodeSymbolColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{DecodeSymbolColor as o}from\"../../../collections/Component/Material/shader/DecodeSymbolColor.glsl.js\";import{IntegerPassUniform as r}from\"../../shaderModules/IntegerPassUniform.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as l}from\"../../../lib/VertexAttribute.js\";import{colorMixModes as d}from\"../../../materials/internal/MaterialUtil.js\";function i(i,t){t.hasSymbolColors?(i.include(o),i.attributes.add(l.SYMBOLCOLOR,\"vec4\"),i.varyings.add(\"colorMixMode\",\"mediump float\"),i.vertex.code.add(e`int symbolColorMixMode;\nvec4 getSymbolColor() {\nreturn decodeSymbolColor(symbolColor, symbolColorMixMode) * 0.003921568627451;\n}\nvoid forwardColorMixMode() {\ncolorMixMode = float(symbolColorMixMode) + 0.5;\n}`)):(i.fragment.uniforms.add(new r(\"colorMixMode\",(o=>d[o.colorMixMode]))),i.vertex.code.add(e`vec4 getSymbolColor() { return vec4(1.0); }\nvoid forwardColorMixMode() {}`))}export{i as SymbolColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as t}from\"../../../lib/VertexAttribute.js\";var d;function o(o,v){switch(v.textureCoordinateType){case d.Default:return o.attributes.add(t.UV0,\"vec2\"),o.varyings.add(\"vuv0\",\"vec2\"),void o.vertex.code.add(r`void forwardTextureCoordinates() {\nvuv0 = uv0;\n}`);case d.Compressed:return o.attributes.add(t.UV0,\"vec2\"),o.varyings.add(\"vuv0\",\"vec2\"),void o.vertex.code.add(r`vec2 getUV0() {\nreturn uv0 / 16384.0;\n}\nvoid forwardTextureCoordinates() {\nvuv0 = getUV0();\n}`);case d.Atlas:return o.attributes.add(t.UV0,\"vec2\"),o.varyings.add(\"vuv0\",\"vec2\"),o.attributes.add(t.UVREGION,\"vec4\"),o.varyings.add(\"vuvRegion\",\"vec4\"),void o.vertex.code.add(r`void forwardTextureCoordinates() {\nvuv0 = uv0;\nvuvRegion = uvRegion;\n}`);default:e(v.textureCoordinateType);case d.None:return void o.vertex.code.add(r`void forwardTextureCoordinates() {}`);case d.COUNT:return}}!function(e){e[e.None=0]=\"None\",e[e.Default=1]=\"Default\",e[e.Atlas=2]=\"Atlas\",e[e.Compressed=3]=\"Compressed\",e[e.COUNT=4]=\"COUNT\"}(d||(d={}));export{o as TextureCoordinateAttribute,d as TextureCoordinateAttributeType};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as r}from\"../../../lib/VertexAttribute.js\";function e(e,d){d.hasVertexColors?(e.attributes.add(r.COLOR,\"vec4\"),e.varyings.add(\"vColor\",\"vec4\"),e.vertex.code.add(o`void forwardVertexColor() { vColor = color; }`),e.vertex.code.add(o`void forwardNormalizedVertexColor() { vColor = color * 0.003921568627451; }`)):e.vertex.code.add(o`void forwardVertexColor() {}\nvoid forwardNormalizedVertexColor() {}`)}export{e as VertexColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{neverReached as r}from\"../../../../../../core/compilerUtils.js\";import{c as o}from\"../../../../../../chunks/mat3f64.js\";import{c as a}from\"../../../../../../chunks/vec4f64.js\";import{NormalAttributeType as e,NormalAttribute as l}from\"./NormalAttribute.glsl.js\";import{VertexPosition as m,VertexPositionPassParameters as s,VertexPositionDrawParameters as t}from\"./VertexPosition.glsl.js\";import{glsl as d}from\"../../shaderModules/interfaces.js\";import{Matrix3DrawUniform as i}from\"../../shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as n}from\"../../shaderModules/Matrix3PassUniform.js\";function c(o,a){switch(a.normalType){case e.Attribute:case e.CompressedAttribute:o.include(l,a),o.varyings.add(\"vNormalWorld\",\"vec3\"),o.varyings.add(\"vNormalView\",\"vec3\"),o.vertex.uniforms.add([new i(\"transformNormalGlobalFromModel\",(r=>r.transformNormalGlobalFromModel)),new n(\"transformNormalViewFromGlobal\",(r=>r.transformNormalViewFromGlobal))]),o.vertex.code.add(d`void forwardNormal() {\nvNormalWorld = transformNormalGlobalFromModel * normalModel();\nvNormalView = transformNormalViewFromGlobal * vNormalWorld;\n}`);break;case e.Ground:o.include(m,a),o.varyings.add(\"vNormalWorld\",\"vec3\"),o.vertex.code.add(d`\n        void forwardNormal() {\n          vNormalWorld = ${a.spherical?d`normalize(vPositionWorldCameraRelative);`:d`vec3(0.0, 0.0, 1.0);`}\n        }\n        `);break;case e.ScreenDerivative:o.vertex.code.add(d`void forwardNormal() {}`);break;default:r(a.normalType);case e.COUNT:}}class f extends s{constructor(){super(...arguments),this.transformNormalViewFromGlobal=o()}}class v extends t{constructor(){super(...arguments),this.transformNormalGlobalFromModel=o(),this.toMapSpace=a()}}export{c as VertexNormal,v as VertexNormalDrawParameters,f as VertexNormalPassParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{c as r}from\"../../../../../../chunks/mat3f64.js\";import{c as o}from\"../../../../../../chunks/mat4f64.js\";import{c as e}from\"../../../../../../chunks/vec3f32.js\";import{c as t}from\"../../../../../../chunks/vec3f64.js\";import{PositionAttribute as a}from\"./PositionAttribute.glsl.js\";import{DoublePrecision as s}from\"../util/DoublePrecision.glsl.js\";import{Float3DrawUniform as i}from\"../../shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as m}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as d,NoParameters as n}from\"../../shaderModules/interfaces.js\";import{Matrix3DrawUniform as l}from\"../../shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as f}from\"../../shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as v}from\"../../shaderModules/Matrix4PassUniform.js\";function F(r,o){r.include(a);const e=r.vertex;e.include(s,o),r.varyings.add(\"vPositionWorldCameraRelative\",\"vec3\"),r.varyings.add(\"vPosition_view\",\"vec3\"),e.uniforms.add([new m(\"transformWorldFromViewTH\",(r=>r.transformWorldFromViewTH)),new m(\"transformWorldFromViewTL\",(r=>r.transformWorldFromViewTL)),new f(\"transformViewFromCameraRelativeRS\",(r=>r.transformViewFromCameraRelativeRS)),new v(\"transformProjFromView\",(r=>r.transformProjFromView)),new l(\"transformWorldFromModelRS\",(r=>r.transformWorldFromModelRS)),new i(\"transformWorldFromModelTH\",(r=>r.transformWorldFromModelTH)),new i(\"transformWorldFromModelTL\",(r=>r.transformWorldFromModelTL))]),e.code.add(d`vec3 positionWorldCameraRelative() {\nvec3 rotatedModelPosition = transformWorldFromModelRS * positionModel();\nvec3 transform_CameraRelativeFromModel = dpAdd(\ntransformWorldFromModelTL,\ntransformWorldFromModelTH,\n-transformWorldFromViewTL,\n-transformWorldFromViewTH\n);\nreturn transform_CameraRelativeFromModel + rotatedModelPosition;\n}`),e.code.add(d`\n    void forwardPosition(float fOffset) {\n      vPositionWorldCameraRelative = positionWorldCameraRelative();\n      if (fOffset != 0.0) {\n        vPositionWorldCameraRelative += fOffset * ${o.spherical?d`normalize(transformWorldFromViewTL + vPositionWorldCameraRelative)`:d`vec3(0.0, 0.0, 1.0)`};\n      }\n\n      vPosition_view = transformViewFromCameraRelativeRS * vPositionWorldCameraRelative;\n      gl_Position = transformProjFromView * vec4(vPosition_view, 1.0);\n    }\n  `),r.fragment.uniforms.add(new m(\"transformWorldFromViewTL\",(r=>r.transformWorldFromViewTL))),e.code.add(d`vec3 positionWorld() {\nreturn transformWorldFromViewTL + vPositionWorldCameraRelative;\n}`),r.fragment.code.add(d`vec3 positionWorld() {\nreturn transformWorldFromViewTL + vPositionWorldCameraRelative;\n}`)}class c extends n{constructor(){super(...arguments),this.transformWorldFromViewTH=t(),this.transformWorldFromViewTL=t(),this.transformViewFromCameraRelativeRS=r(),this.transformProjFromView=o()}}class W extends n{constructor(){super(...arguments),this.transformWorldFromModelRS=r(),this.transformWorldFromModelTH=e(),this.transformWorldFromModelTL=e()}}export{F as VertexPosition,W as VertexPositionDrawParameters,c as VertexPositionPassParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function t(t){t.extensions.add(\"GL_EXT_shader_texture_lod\"),t.extensions.add(\"GL_OES_standard_derivatives\"),t.fragment.code.add(e`#ifndef GL_EXT_shader_texture_lod\nfloat calcMipMapLevel(const vec2 ddx, const vec2 ddy) {\nfloat deltaMaxSqr = max(dot(ddx, ddx), dot(ddy, ddy));\nreturn max(0.0, 0.5 * log2(deltaMaxSqr));\n}\n#endif\nvec4 textureAtlasLookup(sampler2D texture, vec2 textureSize, vec2 textureCoordinates, vec4 atlasRegion) {\nvec2 atlasScale = atlasRegion.zw - atlasRegion.xy;\nvec2 uvAtlas = fract(textureCoordinates) * atlasScale + atlasRegion.xy;\nfloat maxdUV = 0.125;\nvec2 dUVdx = clamp(dFdx(textureCoordinates), -maxdUV, maxdUV) * atlasScale;\nvec2 dUVdy = clamp(dFdy(textureCoordinates), -maxdUV, maxdUV) * atlasScale;\n#ifdef GL_EXT_shader_texture_lod\nreturn texture2DGradEXT(texture, uvAtlas, dUVdx, dUVdy);\n#else\nvec2 dUVdxAuto = dFdx(uvAtlas);\nvec2 dUVdyAuto = dFdy(uvAtlas);\nfloat mipMapLevel = calcMipMapLevel(dUVdx * textureSize, dUVdy * textureSize);\nfloat autoMipMapLevel = calcMipMapLevel(dUVdxAuto * textureSize, dUVdyAuto * textureSize);\nreturn texture2D(texture, uvAtlas, mipMapLevel - autoMipMapLevel);\n#endif\n}`)}export{t as TextureAtlasLookup};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{TextureCoordinateAttribute as t,TextureCoordinateAttributeType as r}from\"./TextureCoordinateAttribute.glsl.js\";import{TextureAtlasLookup as o}from\"../util/TextureAtlasLookup.glsl.js\";import{glsl as u}from\"../../shaderModules/interfaces.js\";function a(a,s){switch(a.include(t,s),a.fragment.code.add(u`\n  struct TextureLookupParameter {\n    vec2 uv;\n    ${s.supportsTextureAtlas?\"vec2 size;\":\"\"}\n  } vtc;\n  `),s.textureCoordinateType){case r.Default:case r.Compressed:return void a.fragment.code.add(u`vec4 textureLookup(sampler2D texture, TextureLookupParameter params) {\nreturn texture2D(texture, params.uv);\n}`);case r.Atlas:return a.include(o),void a.fragment.code.add(u`vec4 textureLookup(sampler2D texture, TextureLookupParameter params) {\nreturn textureAtlasLookup(texture, params.size, params.uv, vuvRegion);\n}`);default:e(s.textureCoordinateType);case r.None:case r.COUNT:return}}export{a as VertexTextureCoordinates};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{s as e}from\"../../../../../../chunks/vec4.js\";import{c as a}from\"../../../../../../chunks/vec4f64.js\";import{Float4PassUniform as r}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";function c(e){e.vertex.code.add(s`float screenSizePerspectiveMinSize(float size, vec4 factor) {\nfloat nonZeroSize = 1.0 - step(size, 0.0);\nreturn (\nfactor.z * (\n1.0 +\nnonZeroSize *\n2.0 * factor.w / (\nsize + (1.0 - nonZeroSize)\n)\n)\n);\n}`),e.vertex.code.add(s`float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {\nreturn absCosAngle * absCosAngle * absCosAngle;\n}`),e.vertex.code.add(s`vec4 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec4 params) {\nreturn vec4(\nmin(params.x / (distanceToCamera - params.y), 1.0),\nscreenSizePerspectiveViewAngleDependentFactor(absCosAngle),\nparams.z,\nparams.w\n);\n}`),e.vertex.code.add(s`float applyScreenSizePerspectiveScaleFactorFloat(float size, vec4 factor) {\nreturn max(mix(size * factor.x, size, factor.y), screenSizePerspectiveMinSize(size, factor));\n}`),e.vertex.code.add(s`float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec4 params) {\nreturn applyScreenSizePerspectiveScaleFactorFloat(\nsize,\nscreenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)\n);\n}`),e.vertex.code.add(s`vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec4 factor) {\nreturn mix(size * clamp(factor.x, screenSizePerspectiveMinSize(size.y, factor) / max(1e-5, size.y), 1.0), size, factor.y);\n}`),e.vertex.code.add(s`vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec4 params) {\nreturn applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));\n}`)}function t(e){e.uniforms.add(new r(\"screenSizePerspective\",(e=>o(e.screenSizePerspective))))}function i(e){e.uniforms.add(new r(\"screenSizePerspectiveAlignment\",(e=>o(e.screenSizePerspectiveAlignment||e.screenSizePerspective))))}function o(a){return e(n,a.parameters.divisor,a.parameters.offset,a.parameters.minPixelSize,a.paddingPixelsOverride)}const n=a();export{c as ScreenSizePerspective,t as addScreenSizePerspective,i as addScreenSizePerspectiveAlignment};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{s as e}from\"../../../../../../chunks/vec4.js\";import{c as r}from\"../../../../../../chunks/vec4f64.js\";import{ScreenSizePerspective as t,addScreenSizePerspectiveAlignment as l}from\"../util/ScreenSizePerspective.glsl.js\";import{addCameraPosition as o}from\"../util/View.glsl.js\";import{Float4PassUniform as c}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";function a(e,r){const c=e.vertex;r.hasVerticalOffset?(f(c),r.hasScreenSizePerspective&&(e.include(t),l(c),o(e.vertex,r)),c.code.add(s`\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ${r.spherical?s`vec3 worldNormal = normalize(worldPos + localOrigin);`:s`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\n        ${r.hasScreenSizePerspective?s`\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);`:s`\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    `)):c.code.add(s`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`)}const i=r();function f(r){r.uniforms.add(new c(\"verticalOffset\",((r,t)=>{const{minWorldLength:l,maxWorldLength:o,screenLength:c}=r.verticalOffset,s=Math.tan(.5*t.camera.fovY)/(.5*t.camera.fullViewport[3]),a=t.camera.pixelRatio||1;return e(i,c*a,s,l,o)})))}export{a as VerticalOffset,f as addVerticalOffset};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as o}from\"../ShaderOutput.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as e}from\"../../../lib/VertexAttribute.js\";function d(d,t){const a=t.output===o.ObjectAndLayerIdColor,n=t.objectAndLayerIdColorInstanced;a&&(d.varyings.add(\"objectAndLayerIdColorVarying\",\"vec4\"),n?d.attributes.add(e.OBJECTANDLAYERIDCOLOR_INSTANCED,\"vec4\"):d.attributes.add(e.OBJECTANDLAYERIDCOLOR,\"vec4\")),d.vertex.code.add(r`\n     void forwardObjectAndLayerIdColor() {\n      ${a?n?r`objectAndLayerIdColorVarying = objectAndLayerIdColor_instanced * 0.003921568627451;`:r`objectAndLayerIdColorVarying = objectAndLayerIdColor * 0.003921568627451;`:r``} }`),d.fragment.code.add(r`\n      void outputObjectAndLayerIdColor() {\n        ${a?r`gl_FragColor = objectAndLayerIdColorVarying;`:r``} }`)}export{d as ObjectAndLayerIdColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as t}from\"../ShaderOutput.js\";import{RgbaFloatEncoding as a}from\"../util/RgbaFloatEncoding.glsl.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";function o(o,l){switch(o.fragment.include(a),l.output){case t.Shadow:case t.ShadowHighlight:case t.ShadowExcludeHighlight:o.extensions.add(\"GL_OES_standard_derivatives\"),o.fragment.code.add(e`float _calculateFragDepth(const in float depth) {\nconst float SLOPE_SCALE = 2.0;\nconst float BIAS = 20.0 * .000015259;\nfloat m = max(abs(dFdx(depth)), abs(dFdy(depth)));\nfloat result = depth + SLOPE_SCALE * m + BIAS;\nreturn clamp(result, .0, .999999);\n}\nvoid outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_calculateFragDepth(_linearDepth));\n}`);break;case t.Depth:o.fragment.code.add(e`void outputDepth(float _linearDepth) {\ngl_FragColor = float2rgba(_linearDepth);\n}`)}}export{o as OutputDepth};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../../chunks/vec4f64.js\";import{texelFetch as o}from\"../util/WebGL2Utils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{createTexture2DPassSizeUniforms as t}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as d}from\"../../shaderModules/TextureSizeUniformType.js\";const g=e(1,1,0,1),i=e(1,0,1,1);function a(e,a){e.fragment.uniforms.add(t(\"depthTex\",((e,o)=>o.highlightDepthTexture),a.hasWebGL2Context?d.None:d.InvSize)),e.fragment.constants.add(\"occludedHighlightFlag\",\"vec4\",g).add(\"unoccludedHighlightFlag\",\"vec4\",i),e.fragment.code.add(r`\n    void outputHighlight() {\n      vec3 fragCoord = gl_FragCoord.xyz;\n\n      float sceneDepth = ${o(a,\"depthTex\",\"fragCoord.xy\")}.x;\n      if (fragCoord.z > sceneDepth + 5e-7) {\n        gl_FragColor = occludedHighlightFlag;\n      }\n      else {\n        gl_FragColor = unoccludedHighlightFlag;\n      }\n    }\n  `)}export{a as OutputHighlight,g as occludedHighlightFlag,i as unoccludedHighlightFlag};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as o}from\"../../../../../../core/maybe.js\";import{I as r}from\"../../../../../../chunks/mat4f64.js\";import{addNearFar as e}from\"../ForwardLinearDepth.glsl.js\";import{ShaderOutput as t}from\"../ShaderOutput.js\";import{SliceDraw as i}from\"../Slice.glsl.js\";import{Transform as a}from\"../Transform.glsl.js\";import{NormalAttribute as s,NormalAttributeType as l}from\"../attributes/NormalAttribute.glsl.js\";import{ObjectAndLayerIdColor as d}from\"../attributes/ObjectAndLayerIdColor.glsl.js\";import{TextureCoordinateAttribute as n}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexNormal as c}from\"../attributes/VertexNormal.glsl.js\";import{OutputDepth as u}from\"../output/OutputDepth.glsl.js\";import{OutputHighlight as m}from\"../output/OutputHighlight.glsl.js\";import{VisualVariables as p}from\"../shading/VisualVariables.glsl.js\";import{DiscardOrAdjustAlphaPass as v}from\"../util/AlphaDiscard.glsl.js\";import{addProjViewLocalOrigin as f}from\"../util/View.glsl.js\";import{glsl as g}from\"../../shaderModules/interfaces.js\";import{Matrix4PassUniform as h}from\"../../shaderModules/Matrix4PassUniform.js\";import{Texture2DPassUniform as x}from\"../../shaderModules/Texture2DPassUniform.js\";import{AlphaDiscardMode as j}from\"../../../lib/basicInterfaces.js\";function b(b,O){const{vertex:w,fragment:C}=b,T=O.hasModelTransformation;T&&w.uniforms.add(new h(\"model\",(e=>o(e.modelTransformation)?e.modelTransformation:r)));const V=O.hasColorTexture&&O.alphaDiscardMode!==j.Opaque;switch(O.output){case t.Depth:case t.Shadow:case t.ShadowHighlight:case t.ShadowExcludeHighlight:case t.ObjectAndLayerIdColor:f(w,O),b.include(a,O),b.include(n,O),b.include(p,O),b.include(u,O),b.include(i,O),b.include(d,O),e(b),b.varyings.add(\"depth\",\"float\"),V&&C.uniforms.add(new x(\"tex\",(o=>o.texture))),w.code.add(g`\n          void main(void) {\n            vpos = calculateVPos();\n            vpos = subtractOrigin(vpos);\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPositionWithDepth(proj, view, ${T?\"model,\":\"\"} vpos, nearFar, depth);\n            forwardTextureCoordinates();\n            forwardObjectAndLayerIdColor();\n          }\n        `),b.include(v,O),C.code.add(g`\n          void main(void) {\n            discardBySlice(vpos);\n            ${V?g`\n                    vec4 texColor = texture2D(tex, ${O.hasColorTextureTransform?g`colorUV`:g`vuv0`});\n                    discardOrAdjustAlpha(texColor);`:\"\"}\n            ${O.output===t.ObjectAndLayerIdColor?g`outputObjectAndLayerIdColor();`:g`outputDepth(depth);`}\n          }\n        `);break;case t.Normal:f(w,O),b.include(a,O),b.include(s,O),b.include(c,O),b.include(n,O),b.include(p,O),V&&C.uniforms.add(new x(\"tex\",(o=>o.texture))),b.varyings.add(\"vPositionView\",\"vec3\"),w.code.add(g`\n          void main(void) {\n            vpos = calculateVPos();\n            vpos = subtractOrigin(vpos);\n            ${O.normalType===l.Attribute?g`\n            vNormalWorld = dpNormalView(vvLocalNormal(normalModel()));`:\"\"}\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, ${T?\"model,\":\"\"} vpos);\n            forwardTextureCoordinates();\n          }\n        `),b.include(i,O),b.include(v,O),C.code.add(g`\n          void main() {\n            discardBySlice(vpos);\n            ${V?g`\n                    vec4 texColor = texture2D(tex, ${O.hasColorTextureTransform?g`colorUV`:g`vuv0`});\n                    discardOrAdjustAlpha(texColor);`:\"\"}\n\n            ${O.normalType===l.ScreenDerivative?g`\n                vec3 normal = screenDerivativeNormal(vPositionView);`:g`\n                vec3 normal = normalize(vNormalWorld);\n                if (gl_FrontFacing == false) normal = -normal;`}\n            gl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n          }\n        `);break;case t.Highlight:f(w,O),b.include(a,O),b.include(n,O),b.include(p,O),V&&C.uniforms.add(new x(\"tex\",(o=>o.texture))),w.code.add(g`\n          void main(void) {\n            vpos = calculateVPos();\n            vpos = subtractOrigin(vpos);\n            vpos = addVerticalOffset(vpos, localOrigin);\n            gl_Position = transformPosition(proj, view, ${T?\"model,\":\"\"} vpos);\n            forwardTextureCoordinates();\n          }\n        `),b.include(i,O),b.include(v,O),b.include(m,O),C.code.add(g`\n          void main() {\n            discardBySlice(vpos);\n            ${V?g`\n                    vec4 texColor = texture2D(tex, ${O.hasColorTextureTransform?g`colorUV`:g`vuv0`});\n                    discardOrAdjustAlpha(texColor);`:\"\"}\n            outputHighlight();\n          }\n        `)}}export{b as DefaultMaterialAuxiliaryPasses};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as e}from\"../util/RgbaFloatEncoding.glsl.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function a(a){a.include(e),a.code.add(r`float linearDepthFromFloat(float depth, vec2 nearFar) {\nreturn -(depth * (nearFar[1] - nearFar[0]) + nearFar[0]);\n}\nfloat linearDepthFromTexture(sampler2D depthTex, vec2 uv, vec2 nearFar) {\nreturn linearDepthFromFloat(rgba2float(texture2D(depthTex, uv)), nearFar);\n}`)}export{a as ReadLinearDepth};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{TextureCoordinateAttributeType as e}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexTextureCoordinates as t}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{NormalsDoubleSidedMode as n}from\"./Normals.glsl.js\";import{textureSize as r}from\"../util/WebGL2Utils.js\";import{glsl as a}from\"../../shaderModules/interfaces.js\";import{createTexture2DDrawSizeUniforms as o}from\"../../shaderModules/Texture2DDrawUniform.js\";import{createTexture2DPassSizeUniforms as s}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as d}from\"../../shaderModules/TextureSizeUniformType.js\";import{BindType as m}from\"../../shaderTechnique/BindType.js\";import{VertexAttribute as i}from\"../../../lib/VertexAttribute.js\";function c(c,u){const l=c.fragment;if(u.hasVertexTangents?(c.attributes.add(i.TANGENT,\"vec4\"),c.varyings.add(\"vTangent\",\"vec4\"),u.doubleSidedMode===n.WindingOrder?l.code.add(a`mat3 computeTangentSpace(vec3 normal) {\nfloat tangentHeadedness = gl_FrontFacing ? vTangent.w : -vTangent.w;\nvec3 tangent = normalize(gl_FrontFacing ? vTangent.xyz : -vTangent.xyz);\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\nreturn mat3(tangent, bitangent, normal);\n}`):l.code.add(a`mat3 computeTangentSpace(vec3 normal) {\nfloat tangentHeadedness = vTangent.w;\nvec3 tangent = normalize(vTangent.xyz);\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\nreturn mat3(tangent, bitangent, normal);\n}`)):(c.extensions.add(\"GL_OES_standard_derivatives\"),l.code.add(a`mat3 computeTangentSpace(vec3 normal, vec3 pos, vec2 st) {\nvec3 Q1 = dFdx(pos);\nvec3 Q2 = dFdy(pos);\nvec2 stx = dFdx(st);\nvec2 sty = dFdy(st);\nfloat det = stx.t * sty.s - sty.t * stx.s;\nvec3 T = stx.t * Q2 - sty.t * Q1;\nT = T - normal * dot(normal, T);\nT *= inversesqrt(max(dot(T,T), 1.e-10));\nvec3 B = sign(det) * cross(normal, T);\nreturn mat3(T, B, normal);\n}`)),u.textureCoordinateType!==e.None){c.include(t,u);const e=u.supportsTextureAtlas?u.hasWebGL2Context?d.None:d.Size:d.None;l.uniforms.add(u.pbrTextureBindType===m.Pass?s(\"normalTexture\",(e=>e.textureNormal),e):o(\"normalTexture\",(e=>e.textureNormal),e)),l.code.add(a`\n    vec3 computeTextureNormal(mat3 tangentSpace, vec2 uv) {\n      vtc.uv = uv;\n      ${u.supportsTextureAtlas?a`vtc.size = ${r(u,\"normalTexture\")};`:\"\"}\n      vec3 rawNormal = textureLookup(normalTexture, vtc).rgb * 2.0 - 1.0;\n      return tangentSpace * rawNormal;\n    }\n  `)}}export{c as ComputeNormalTexture};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{textureSize as e}from\"../util/WebGL2Utils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{createTexture2DPassSizeUniforms as s}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as o}from\"../../shaderModules/TextureSizeUniformType.js\";import{blurSizePixels as t}from\"../../../lib/SSAOHelper.js\";function n(n,a){const i=n.fragment;a.receiveAmbientOcclusion?(i.uniforms.add(s(\"ssaoTex\",((e,r)=>r.ssaoHelper.colorTexture),a.hasWebGL2Context?o.None:o.InvSize)),i.constants.add(\"blurSizePixelsInverse\",\"float\",1/t),i.code.add(r`\n      float evaluateAmbientOcclusionInverse() {\n        vec2 ssaoTextureSizeInverse = ${e(a,\"ssaoTex\",!0)};\n        return texture2D(ssaoTex, gl_FragCoord.xy * blurSizePixelsInverse * ssaoTextureSizeInverse).a;\n      }\n\n      float evaluateAmbientOcclusion() {\n        return 1.0 - evaluateAmbientOcclusionInverse();\n      }\n    `)):i.code.add(r`float evaluateAmbientOcclusionInverse() { return 1.0; }\nfloat evaluateAmbientOcclusion() { return 0.0; }`)}export{n as EvaluateAmbientOcclusion};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{s as i}from\"../../../../../../chunks/vec3.js\";import{c as n}from\"../../../../../../chunks/vec3f64.js\";import{s as t}from\"../../../../../../chunks/vec4.js\";import{c as g}from\"../../../../../../chunks/vec4f64.js\";import{PBRMode as h}from\"./PhysicallyBasedRenderingParameters.glsl.js\";import{Float3PassUniform as e}from\"../../shaderModules/Float3PassUniform.js\";import{Float4PassUniform as l}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";function m(n,g){const m=n.fragment,o=void 0!==g.lightingSphericalHarmonicsOrder?g.lightingSphericalHarmonicsOrder:2;0===o?(m.uniforms.add(new e(\"lightingAmbientSH0\",((n,t)=>i(a,t.lighting.sh.r[0],t.lighting.sh.g[0],t.lighting.sh.b[0])))),m.code.add(s`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {\nvec3 ambientLight = 0.282095 * lightingAmbientSH0;\nreturn ambientLight * (1.0 - ambientOcclusion);\n}`)):1===o?(m.uniforms.add([new l(\"lightingAmbientSH_R\",((i,n)=>t(r,n.lighting.sh.r[0],n.lighting.sh.r[1],n.lighting.sh.r[2],n.lighting.sh.r[3]))),new l(\"lightingAmbientSH_G\",((i,n)=>t(r,n.lighting.sh.g[0],n.lighting.sh.g[1],n.lighting.sh.g[2],n.lighting.sh.g[3]))),new l(\"lightingAmbientSH_B\",((i,n)=>t(r,n.lighting.sh.b[0],n.lighting.sh.b[1],n.lighting.sh.b[2],n.lighting.sh.b[3])))]),m.code.add(s`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {\nvec4 sh0 = vec4(\n0.282095,\n0.488603 * normal.x,\n0.488603 * normal.z,\n0.488603 * normal.y\n);\nvec3 ambientLight = vec3(\ndot(lightingAmbientSH_R, sh0),\ndot(lightingAmbientSH_G, sh0),\ndot(lightingAmbientSH_B, sh0)\n);\nreturn ambientLight * (1.0 - ambientOcclusion);\n}`)):2===o&&(m.uniforms.add([new e(\"lightingAmbientSH0\",((n,t)=>i(a,t.lighting.sh.r[0],t.lighting.sh.g[0],t.lighting.sh.b[0]))),new l(\"lightingAmbientSH_R1\",((i,n)=>t(r,n.lighting.sh.r[1],n.lighting.sh.r[2],n.lighting.sh.r[3],n.lighting.sh.r[4]))),new l(\"lightingAmbientSH_G1\",((i,n)=>t(r,n.lighting.sh.g[1],n.lighting.sh.g[2],n.lighting.sh.g[3],n.lighting.sh.g[4]))),new l(\"lightingAmbientSH_B1\",((i,n)=>t(r,n.lighting.sh.b[1],n.lighting.sh.b[2],n.lighting.sh.b[3],n.lighting.sh.b[4]))),new l(\"lightingAmbientSH_R2\",((i,n)=>t(r,n.lighting.sh.r[5],n.lighting.sh.r[6],n.lighting.sh.r[7],n.lighting.sh.r[8]))),new l(\"lightingAmbientSH_G2\",((i,n)=>t(r,n.lighting.sh.g[5],n.lighting.sh.g[6],n.lighting.sh.g[7],n.lighting.sh.g[8]))),new l(\"lightingAmbientSH_B2\",((i,n)=>t(r,n.lighting.sh.b[5],n.lighting.sh.b[6],n.lighting.sh.b[7],n.lighting.sh.b[8])))]),m.code.add(s`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {\nvec3 ambientLight = 0.282095 * lightingAmbientSH0;\nvec4 sh1 = vec4(\n0.488603 * normal.x,\n0.488603 * normal.z,\n0.488603 * normal.y,\n1.092548 * normal.x * normal.y\n);\nvec4 sh2 = vec4(\n1.092548 * normal.y * normal.z,\n0.315392 * (3.0 * normal.z * normal.z - 1.0),\n1.092548 * normal.x * normal.z,\n0.546274 * (normal.x * normal.x - normal.y * normal.y)\n);\nambientLight += vec3(\ndot(lightingAmbientSH_R1, sh1),\ndot(lightingAmbientSH_G1, sh1),\ndot(lightingAmbientSH_B1, sh1)\n);\nambientLight += vec3(\ndot(lightingAmbientSH_R2, sh2),\ndot(lightingAmbientSH_G2, sh2),\ndot(lightingAmbientSH_B2, sh2)\n);\nreturn ambientLight * (1.0 - ambientOcclusion);\n}`),g.pbrMode!==h.Normal&&g.pbrMode!==h.Schematic||m.code.add(s`const vec3 skyTransmittance = vec3(0.9, 0.9, 1.0);\nvec3 calculateAmbientRadiance(float ambientOcclusion)\n{\nvec3 ambientLight = 1.2 * (0.282095 * lightingAmbientSH0) - 0.2;\nreturn ambientLight *= (1.0 - ambientOcclusion) * skyTransmittance;\n}`))}const a=n(),r=g();export{m as EvaluateAmbientLighting};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{neverReached as n}from\"../../../../../../core/compilerUtils.js\";import{EvaluateAmbientLighting as i}from\"./EvaluateAmbientLighting.glsl.js\";import{EvaluateAmbientOcclusion as e}from\"./EvaluateAmbientOcclusion.glsl.js\";import{addMainLightDirection as o,addMainLightIntensity as t,MainLighting as a}from\"./MainLighting.glsl.js\";import{PhysicallyBasedRendering as r}from\"./PhysicallyBasedRendering.glsl.js\";import{PBRMode as l}from\"./PhysicallyBasedRenderingParameters.glsl.js\";import{PiUtils as c}from\"./PiUtils.glsl.js\";import{BooleanPassUniform as d}from\"../../shaderModules/BooleanPassUniform.js\";import{FloatPassUniform as s}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as m}from\"../../shaderModules/interfaces.js\";import{ambientBoost as g}from\"../../../lighting/SceneLighting.js\";function h(n){n.constants.add(\"ambientBoostFactor\",\"float\",g)}function u(n){n.uniforms.add(new s(\"lightingGlobalFactor\",((n,i)=>i.lighting.globalFactor)))}function p(g,p){const v=g.fragment;switch(g.include(e,p),p.pbrMode!==l.Disabled&&g.include(r,p),g.include(i,p),g.include(c),v.code.add(m`\n    const float GAMMA_SRGB = 2.1;\n    const float INV_GAMMA_SRGB = 0.4761904;\n    ${p.pbrMode===l.Disabled?\"\":\"const vec3 GROUND_REFLECTANCE = vec3(0.2);\"}\n  `),h(v),u(v),o(v),v.code.add(m`\n    float additionalDirectedAmbientLight(vec3 vPosWorld) {\n      float vndl = dot(${p.spherical?m`normalize(vPosWorld)`:m`vec3(0.0, 0.0, 1.0)`}, mainLightDirection);\n      return smoothstep(0.0, 1.0, clamp(vndl * 2.5, 0.0, 1.0));\n    }\n  `),t(v),v.code.add(m`vec3 evaluateAdditionalLighting(float ambientOcclusion, vec3 vPosWorld) {\nfloat additionalAmbientScale = additionalDirectedAmbientLight(vPosWorld);\nreturn (1.0 - ambientOcclusion) * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor * mainLightIntensity;\n}`),p.pbrMode){case l.Disabled:case l.WaterOnIntegratedMesh:case l.Water:g.include(a,p),v.code.add(m`vec3 evaluateSceneLighting(vec3 normalWorld, vec3 albedo, float shadow, float ssao, vec3 additionalLight)\n{\nvec3 mainLighting = evaluateMainLighting(normalWorld, shadow);\nvec3 ambientLighting = calculateAmbientIrradiance(normalWorld, ssao);\nvec3 albedoLinear = pow(albedo, vec3(GAMMA_SRGB));\nvec3 totalLight = mainLighting + ambientLighting + additionalLight;\ntotalLight = min(totalLight, vec3(PI));\nvec3 outColor = vec3((albedoLinear / PI) * totalLight);\nreturn pow(outColor, vec3(INV_GAMMA_SRGB));\n}`);break;case l.Normal:case l.Schematic:v.code.add(m`const float fillLightIntensity = 0.25;\nconst float horizonLightDiffusion = 0.4;\nconst float additionalAmbientIrradianceFactor = 0.02;\nvec3 evaluateSceneLightingPBR(vec3 normal, vec3 albedo, float shadow, float ssao, vec3 additionalLight, vec3 viewDir, vec3 normalGround, vec3 mrr, vec3 _emission, float additionalAmbientIrradiance)\n{\nvec3 viewDirection = -viewDir;\nvec3 h = normalize(viewDirection + mainLightDirection);\nPBRShadingInfo inputs;\ninputs.NdotL = clamp(dot(normal, mainLightDirection), 0.001, 1.0);\ninputs.NdotV = clamp(abs(dot(normal, viewDirection)), 0.001, 1.0);\ninputs.NdotH = clamp(dot(normal, h), 0.0, 1.0);\ninputs.VdotH = clamp(dot(viewDirection, h), 0.0, 1.0);\ninputs.NdotNG = clamp(dot(normal, normalGround), -1.0, 1.0);\nvec3 reflectedView = normalize(reflect(viewDirection, normal));\ninputs.RdotNG = clamp(dot(reflectedView, normalGround), -1.0, 1.0);\ninputs.albedoLinear = pow(albedo, vec3(GAMMA_SRGB));\ninputs.ssao = ssao;\ninputs.metalness = mrr[0];\ninputs.roughness = clamp(mrr[1] * mrr[1], 0.001, 0.99);`),v.code.add(m`inputs.f0 = (0.16 * mrr[2] * mrr[2]) * (1.0 - inputs.metalness) + inputs.albedoLinear * inputs.metalness;\ninputs.f90 = vec3(clamp(dot(inputs.f0, vec3(50.0 * 0.33)), 0.0, 1.0));\ninputs.diffuseColor = inputs.albedoLinear * (vec3(1.0) - inputs.f0) * (1.0 - inputs.metalness);`),p.useFillLights?v.uniforms.add(new d(\"hasFillLights\",((n,i)=>i.enableFillLights))):v.constants.add(\"hasFillLights\",\"bool\",!1),v.code.add(m`vec3 ambientDir = vec3(5.0 * normalGround[1] - normalGround[0] * normalGround[2], - 5.0 * normalGround[0] - normalGround[2] * normalGround[1], normalGround[1] * normalGround[1] + normalGround[0] * normalGround[0]);\nambientDir = ambientDir != vec3(0.0)? normalize(ambientDir) : normalize(vec3(5.0, -1.0, 0.0));\ninputs.NdotAmbDir = hasFillLights ? abs(dot(normal, ambientDir)) : 1.0;\nvec3 mainLightIrradianceComponent = inputs.NdotL * (1.0 - shadow) * mainLightIntensity;\nvec3 fillLightsIrradianceComponent = inputs.NdotAmbDir * mainLightIntensity * fillLightIntensity;\nvec3 ambientLightIrradianceComponent = calculateAmbientIrradiance(normal, ssao) + additionalLight;\ninputs.skyIrradianceToSurface = ambientLightIrradianceComponent + mainLightIrradianceComponent + fillLightsIrradianceComponent ;\ninputs.groundIrradianceToSurface = GROUND_REFLECTANCE * ambientLightIrradianceComponent + mainLightIrradianceComponent + fillLightsIrradianceComponent ;`),v.uniforms.add([new s(\"lightingSpecularStrength\",((n,i)=>i.lighting.mainLight.specularStrength)),new s(\"lightingEnvironmentStrength\",((n,i)=>i.lighting.mainLight.environmentStrength))]),v.code.add(m`vec3 horizonRingDir = inputs.RdotNG * normalGround - reflectedView;\nvec3 horizonRingH = normalize(viewDirection + horizonRingDir);\ninputs.NdotH_Horizon = dot(normal, horizonRingH);\nvec3 mainLightRadianceComponent = lightingSpecularStrength * normalDistribution(inputs.NdotH, inputs.roughness) * mainLightIntensity * (1.0 - shadow);\nvec3 horizonLightRadianceComponent = lightingEnvironmentStrength * normalDistribution(inputs.NdotH_Horizon, min(inputs.roughness + horizonLightDiffusion, 1.0)) * mainLightIntensity * fillLightIntensity;\nvec3 ambientLightRadianceComponent = lightingEnvironmentStrength * calculateAmbientRadiance(ssao) + additionalLight;\ninputs.skyRadianceToSurface = ambientLightRadianceComponent + mainLightRadianceComponent + horizonLightRadianceComponent;\ninputs.groundRadianceToSurface = GROUND_REFLECTANCE * (ambientLightRadianceComponent + horizonLightRadianceComponent) + mainLightRadianceComponent;\ninputs.averageAmbientRadiance = ambientLightIrradianceComponent[1] * (1.0 + GROUND_REFLECTANCE[1]);`),v.code.add(m`\n        vec3 reflectedColorComponent = evaluateEnvironmentIllumination(inputs);\n        vec3 additionalMaterialReflectanceComponent = inputs.albedoLinear * additionalAmbientIrradiance;\n        vec3 emissionComponent = pow(_emission, vec3(GAMMA_SRGB));\n        vec3 outColorLinear = reflectedColorComponent + additionalMaterialReflectanceComponent + emissionComponent;\n        ${p.pbrMode===l.Schematic?m`vec3 outColor = pow(max(vec3(0.0), outColorLinear - 0.005 * inputs.averageAmbientRadiance), vec3(INV_GAMMA_SRGB));`:m`vec3 outColor = pow(blackLevelSoftCompression(outColorLinear, inputs), vec3(INV_GAMMA_SRGB));`}\n        return outColor;\n      }\n    `);break;case l.Terrain:case l.TerrainWithWater:g.include(a,p),v.code.add(m`const float roughnessTerrain = 0.5;\nconst float specularityTerrain = 0.5;\nconst vec3 fresnelReflectionTerrain = vec3(0.04);\nvec3 evaluateTerrainLighting(vec3 n, vec3 c, float shadow, float ssao, vec3 al, vec3 vd, vec3 nup) {\nvec3 viewDirection = -vd;\nvec3 h = normalize(viewDirection + mainLightDirection);\nfloat NdotL = clamp(dot(n, mainLightDirection), 0.001, 1.0);\nfloat NdotV = clamp(abs(dot(n, viewDirection)), 0.001, 1.0);\nfloat NdotH = clamp(dot(n, h), 0.0, 1.0);\nfloat NdotNG = clamp(dot(n, nup), -1.0, 1.0);\nvec3 albedoLinear = pow(c, vec3(GAMMA_SRGB));\nfloat lightness = 0.3 * albedoLinear[0] + 0.5 * albedoLinear[1] + 0.2 * albedoLinear[2];\nvec3 f0 = (0.85 * lightness + 0.15) * fresnelReflectionTerrain;\nvec3 f90 =  vec3(clamp(dot(f0, vec3(50.0 * 0.33)), 0.0, 1.0));\nvec3 mainLightIrradianceComponent = (1. - shadow) * NdotL * mainLightIntensity;\nvec3 ambientLightIrradianceComponent = calculateAmbientIrradiance(n, ssao) + al;\nvec3 ambientSky = ambientLightIrradianceComponent + mainLightIrradianceComponent;\nvec3 indirectDiffuse = ((1.0 - NdotNG) * mainLightIrradianceComponent + (1.0 + NdotNG ) * ambientSky) * 0.5;\nvec3 outDiffColor = albedoLinear * (1.0 - f0) * indirectDiffuse / PI;\nvec3 mainLightRadianceComponent = normalDistribution(NdotH, roughnessTerrain) * mainLightIntensity;\nvec2 dfg = prefilteredDFGAnalytical(roughnessTerrain, NdotV);\nvec3 specularColor = f0 * dfg.x + f90 * dfg.y;\nvec3 specularComponent = specularityTerrain * specularColor * mainLightRadianceComponent;\nvec3 outColorLinear = outDiffColor + specularComponent;\nvec3 outColor = pow(outColorLinear, vec3(INV_GAMMA_SRGB));\nreturn outColor;\n}`);break;default:n(p.pbrMode);case l.COUNT:}}export{p as EvaluateSceneLighting,h as addAmbientBoostFactor,u as addLightingGlobalFactor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{Float3PassUniform as i}from\"../../shaderModules/Float3PassUniform.js\";import{FloatPassUniform as n}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as t}from\"../../shaderModules/interfaces.js\";function o(n){n.uniforms.add(new i(\"mainLightDirection\",((i,n)=>n.lighting.mainLight.direction)))}function a(n){n.uniforms.add(new i(\"mainLightIntensity\",((i,n)=>n.lighting.mainLight.intensity)))}function e(i,t){t.useLegacyTerrainShading?i.uniforms.add(new n(\"lightingFixedFactor\",((i,n)=>n.lighting.noonFactor*(1-n.lighting.globalFactor)))):i.constants.add(\"lightingFixedFactor\",\"float\",0)}function r(i,n){const r=i.fragment;o(r),a(r),e(r,n),r.code.add(t`vec3 evaluateMainLighting(vec3 normal_global, float shadowing) {\nfloat dotVal = clamp(dot(normal_global, mainLightDirection), 0.0, 1.0);\ndotVal = mix(dotVal, 1.0, lightingFixedFactor);\nreturn mainLightIntensity * ((1.0 - shadowing) * dotVal);\n}`)}export{r as MainLighting,o as addMainLightDirection,a as addMainLightIntensity};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ReadLinearDepth as e}from\"../output/ReadLinearDepth.glsl.js\";import{Float2PassUniform as r}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as t}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as a}from\"../../shaderModules/Texture2DPassUniform.js\";function n(n,o){o.hasMultipassTerrain&&(n.fragment.include(e),n.fragment.uniforms.add(new a(\"terrainDepthTexture\",((e,r)=>r.multipassTerrain.linearDepthTexture))),n.fragment.uniforms.add(new r(\"nearFar\",((e,r)=>r.camera.nearFar))),n.fragment.uniforms.add(new r(\"inverseViewport\",((e,r)=>r.inverseViewport))),n.fragment.code.add(t`\n    void terrainDepthTest(vec4 fragCoord, float fragmentDepth){\n      float terrainDepth = linearDepthFromTexture(terrainDepthTexture, fragCoord.xy * inverseViewport, nearFar);\n      if(fragmentDepth ${o.cullAboveGround?\">\":\"<=\"} terrainDepth){\n        discard;\n      }\n    }\n  `))}class o{constructor(){this.enabled=!1,this.cullAboveGround=!1}}export{o as MultipassTerrainUniforms,n as multipassTerrainTest};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{neverReached as a}from\"../../../../../../core/compilerUtils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function e(e,o){const n=e.fragment;switch(n.code.add(r`struct ShadingNormalParameters {\nvec3 normalView;\nvec3 viewDirection;\n} shadingParams;`),o.doubleSidedMode){case i.None:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn normalize(params.normalView);\n}`);break;case i.View:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn dot(params.normalView, params.viewDirection) > 0.0 ? normalize(-params.normalView) : normalize(params.normalView);\n}`);break;case i.WindingOrder:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn gl_FrontFacing ? normalize(params.normalView) : normalize(-params.normalView);\n}`);break;default:a(o.doubleSidedMode);case i.COUNT:}}var i;!function(a){a[a.None=0]=\"None\",a[a.View=1]=\"View\",a[a.WindingOrder=2]=\"WindingOrder\",a[a.COUNT=3]=\"COUNT\"}(i||(i={}));export{e as Normals,i as NormalsDoubleSidedMode};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function t(t){const a=t.fragment.code;a.add(e`vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG)\n{\nreturn ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;\n}`),a.add(e`float integratedRadiance(float cosTheta2, float roughness)\n{\nreturn (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);\n}`),a.add(e`vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness)\n{\nfloat cosTheta2 = 1.0 - RdotNG * RdotNG;\nfloat intRadTheta = integratedRadiance(cosTheta2, roughness);\nfloat ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;\nfloat sky = 2.0 - ground;\nreturn (ground * ambientGround + sky * ambientSky) * 0.5;\n}`)}export{t as AnalyticalSkyModel};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{AnalyticalSkyModel as e}from\"./AnalyticalSkyModel.glsl.js\";import{PBRMode as o}from\"./PhysicallyBasedRenderingParameters.glsl.js\";import{PiUtils as t}from\"./PiUtils.glsl.js\";import{glsl as a}from\"../../shaderModules/interfaces.js\";function n(n,r){const l=n.fragment.code;n.include(t),r.pbrMode!==o.Normal&&r.pbrMode!==o.Schematic&&r.pbrMode!==o.Terrain&&r.pbrMode!==o.TerrainWithWater||(l.add(a`float normalDistribution(float NdotH, float roughness)\n{\nfloat a = NdotH * roughness;\nfloat b = roughness / (1.0 - NdotH * NdotH + a * a);\nreturn b * b * INV_PI;\n}`),l.add(a`const vec4 c0 = vec4(-1.0, -0.0275, -0.572,  0.022);\nconst vec4 c1 = vec4( 1.0,  0.0425,  1.040, -0.040);\nconst vec2 c2 = vec2(-1.04, 1.04);\nvec2 prefilteredDFGAnalytical(float roughness, float NdotV) {\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NdotV)) * r.x + r.y;\nreturn c2 * a004 + r.zw;\n}`)),r.pbrMode!==o.Normal&&r.pbrMode!==o.Schematic||(n.include(e),l.add(a`struct PBRShadingInfo\n{\nfloat NdotL;\nfloat NdotV;\nfloat NdotH;\nfloat VdotH;\nfloat LdotH;\nfloat NdotNG;\nfloat RdotNG;\nfloat NdotAmbDir;\nfloat NdotH_Horizon;\nvec3 skyRadianceToSurface;\nvec3 groundRadianceToSurface;\nvec3 skyIrradianceToSurface;\nvec3 groundIrradianceToSurface;\nfloat averageAmbientRadiance;\nfloat ssao;\nvec3 albedoLinear;\nvec3 f0;\nvec3 f90;\nvec3 diffuseColor;\nfloat metalness;\nfloat roughness;\n};`),l.add(a`vec3 evaluateEnvironmentIllumination(PBRShadingInfo inputs) {\nvec3 indirectDiffuse = evaluateDiffuseIlluminationHemisphere(inputs.groundIrradianceToSurface, inputs.skyIrradianceToSurface, inputs.NdotNG);\nvec3 indirectSpecular = evaluateSpecularIlluminationHemisphere(inputs.groundRadianceToSurface, inputs.skyRadianceToSurface, inputs.RdotNG, inputs.roughness);\nvec3 diffuseComponent = inputs.diffuseColor * indirectDiffuse * INV_PI;\nvec2 dfg = prefilteredDFGAnalytical(inputs.roughness, inputs.NdotV);\nvec3 specularColor = inputs.f0 * dfg.x + inputs.f90 * dfg.y;\nvec3 specularComponent = specularColor * indirectSpecular;\nreturn (diffuseComponent + specularComponent);\n}`),l.add(a`float gamutMapChanel(float x, vec2 p){\nreturn (x < p.x) ? mix(0.0, p.y, x/p.x) : mix(p.y, 1.0, (x - p.x) / (1.0 - p.x) );\n}`),l.add(a`vec3 blackLevelSoftCompression(vec3 inColor, PBRShadingInfo inputs){\nvec3 outColor;\nvec2 p = vec2(0.02 * (inputs.averageAmbientRadiance), 0.0075 * (inputs.averageAmbientRadiance));\noutColor.x = gamutMapChanel(inColor.x, p) ;\noutColor.y = gamutMapChanel(inColor.y, p) ;\noutColor.z = gamutMapChanel(inColor.z, p) ;\nreturn outColor;\n}`))}function r(e,o){const n=e.fragment.code;e.include(t),n.add(a`\n  struct PBRShadingWater\n  {\n      float NdotL;   // cos angle between normal and light direction\n      float NdotV;   // cos angle between normal and view direction\n      float NdotH;   // cos angle between normal and half vector\n      float VdotH;   // cos angle between view direction and half vector\n      float LdotH;   // cos angle between light direction and half vector\n      float VdotN;   // cos angle between view direction and normal vector\n  };\n\n  float dtrExponent = ${o.useCustomDTRExponentForWater?\"2.2\":\"2.0\"};\n  `),n.add(a`vec3 fresnelReflection(float angle, vec3 f0, float f90) {\nreturn f0 + (f90 - f0) * pow(1.0 - angle, 5.0);\n}`),n.add(a`float normalDistributionWater(float NdotH, float roughness)\n{\nfloat r2 = roughness * roughness;\nfloat NdotH2 = NdotH * NdotH;\nfloat denom = pow((NdotH2 * (r2 - 1.0) + 1.0), dtrExponent) * PI;\nreturn r2 / denom;\n}`),n.add(a`float geometricOcclusionKelemen(float LoH)\n{\nreturn 0.25 / (LoH * LoH);\n}`),n.add(a`vec3 brdfSpecularWater(in PBRShadingWater props, float roughness, vec3 F0, float F0Max)\n{\nvec3  F = fresnelReflection(props.VdotH, F0, F0Max);\nfloat dSun = normalDistributionWater(props.NdotH, roughness);\nfloat V = geometricOcclusionKelemen(props.LdotH);\nfloat diffusionSunHaze = mix(roughness + 0.045, roughness + 0.385, 1.0 - props.VdotH);\nfloat strengthSunHaze  = 1.2;\nfloat dSunHaze = normalDistributionWater(props.NdotH, diffusionSunHaze)*strengthSunHaze;\nreturn ((dSun + dSunHaze) * V) * F;\n}\nvec3 tonemapACES(const vec3 x) {\nreturn (x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14);\n}`)}export{n as PhysicallyBasedRendering,r as PhysicallyBasedRenderingWater};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../../chunks/vec3f32.js\";import{VertexTextureCoordinates as s}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{textureSize as r}from\"../util/WebGL2Utils.js\";import{Float3DrawUniform as o}from\"../../shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as t}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as a}from\"../../shaderModules/interfaces.js\";import{createTexture2DDrawSizeUniforms as i}from\"../../shaderModules/Texture2DDrawUniform.js\";import{createTexture2DPassSizeUniforms as c}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as n}from\"../../shaderModules/TextureSizeUniformType.js\";import{BindType as u}from\"../../shaderTechnique/BindType.js\";import{GLTextureMaterialBindParameters as l}from\"../../../lib/GLTextureMaterial.js\";const m=e(0,.6,.2);var d;!function(e){e[e.Disabled=0]=\"Disabled\",e[e.Normal=1]=\"Normal\",e[e.Schematic=2]=\"Schematic\",e[e.Water=3]=\"Water\",e[e.WaterOnIntegratedMesh=4]=\"WaterOnIntegratedMesh\",e[e.Terrain=5]=\"Terrain\",e[e.TerrainWithWater=6]=\"TerrainWithWater\",e[e.COUNT=7]=\"COUNT\"}(d||(d={}));class p extends l{}function x(e,l){const m=e.fragment,p=l.hasMetallicRoughnessTexture||l.hasEmissionTexture||l.hasOcclusionTexture;if(l.pbrMode===d.Normal&&p&&e.include(s,l),l.pbrMode!==d.Schematic)if(l.pbrMode!==d.Disabled){if(l.pbrMode===d.Normal){m.code.add(a`vec3 mrr;\nvec3 emission;\nfloat occlusion;`);const e=l.supportsTextureAtlas?l.hasWebGL2Context?n.None:n.Size:n.None,s=l.pbrTextureBindType;l.hasMetallicRoughnessTexture&&(m.uniforms.add(s===u.Pass?c(\"texMetallicRoughness\",(e=>e.textureMetallicRoughness),e):i(\"texMetallicRoughness\",(e=>e.textureMetallicRoughness),e)),m.code.add(a`void applyMetallnessAndRoughness(TextureLookupParameter params) {\nvec3 metallicRoughness = textureLookup(texMetallicRoughness, params).rgb;\nmrr[0] *= metallicRoughness.b;\nmrr[1] *= metallicRoughness.g;\n}`)),l.hasEmissionTexture&&(m.uniforms.add(s===u.Pass?c(\"texEmission\",(e=>e.textureEmissive),e):i(\"texEmission\",(e=>e.textureEmissive),e)),m.code.add(a`void applyEmission(TextureLookupParameter params) {\nemission *= textureLookup(texEmission, params).rgb;\n}`)),l.hasOcclusionTexture?(m.uniforms.add(s===u.Pass?c(\"texOcclusion\",(e=>e.textureOcclusion),e):i(\"texOcclusion\",(e=>e.textureOcclusion),e)),m.code.add(a`void applyOcclusion(TextureLookupParameter params) {\nocclusion *= textureLookup(texOcclusion, params).r;\n}\nfloat getBakedOcclusion() {\nreturn occlusion;\n}`)):m.code.add(a`float getBakedOcclusion() { return 1.0; }`),m.uniforms.add(s===u.Pass?[new t(\"emissionFactor\",(e=>e.emissiveFactor)),new t(\"mrrFactors\",(e=>e.mrrFactors))]:[new o(\"emissionFactor\",(e=>e.emissiveFactor)),new o(\"mrrFactors\",(e=>e.mrrFactors))]),m.code.add(a`\n    void applyPBRFactors() {\n      mrr = mrrFactors;\n      emission = emissionFactor;\n      occlusion = 1.0;\n      ${p?a`vtc.uv = vuv0;`:\"\"}\n      ${l.hasMetallicRoughnessTextureTransform?a`vtc.uv = metallicRoughnessUV;`:\"\"}\n      ${l.hasMetallicRoughnessTexture?l.supportsTextureAtlas?a`\n                vtc.size = ${r(l,\"texMetallicRoughness\")};\n                applyMetallnessAndRoughness(vtc);`:a`applyMetallnessAndRoughness(vtc);`:\"\"}\n      ${l.hasEmissiveTextureTransform?a`vtc.uv = emissiveUV;`:\"\"}\n      ${l.hasEmissionTexture?l.supportsTextureAtlas?a`\n                vtc.size = ${r(l,\"texEmission\")};\n                applyEmission(vtc);`:a`applyEmission(vtc);`:\"\"}\n      ${l.hasOcclusionTextureTransform?a`vtc.uv = occlusionUV;`:\"\"}\n      ${l.hasOcclusionTexture?l.supportsTextureAtlas?a`\n                vtc.size = ${r(l,\"texOcclusion\")};\n                applyOcclusion(vtc);`:a`applyOcclusion(vtc);`:\"\"}\n    }\n  `)}}else m.code.add(a`float getBakedOcclusion() { return 1.0; }`);else m.code.add(a`vec3 mrr = vec3(0.0, 0.6, 0.2);\nvec3 emission = vec3(0.0);\nfloat occlusion = 1.0;\nvoid applyPBRFactors() {}\nfloat getBakedOcclusion() { return 1.0; }`)}export{p as PBRBindParameters,d as PBRMode,m as PBRSchematicMRRValues,x as PhysicallyBasedRenderingParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";function t(t){t.vertex.code.add(o`const float PI = 3.141592653589793;`),t.fragment.code.add(o`const float PI = 3.141592653589793;\nconst float LIGHT_NORMALIZATION = 1.0 / PI;\nconst float INV_PI = 0.3183098861837907;\nconst float HALF_PI = 1.570796326794897;`)}export{t as PiUtils};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{c as e}from\"../../../../../../chunks/vec3f64.js\";import{RgbaFloatEncoding as a}from\"../util/RgbaFloatEncoding.glsl.js\";import{textureSize as s}from\"../util/WebGL2Utils.js\";import{Float4PassUniform as o}from\"../../shaderModules/Float4PassUniform.js\";import{IntegerPassUniform as t}from\"../../shaderModules/IntegerPassUniform.js\";import{NoParameters as i,glsl as r}from\"../../shaderModules/interfaces.js\";import{Matrix4sDrawUniform as d}from\"../../shaderModules/Matrix4sDrawUniform.js\";import{Matrix4sPassUniform as l}from\"../../shaderModules/Matrix4sPassUniform.js\";import{createTexture2DPassSizeUniforms as p}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as c}from\"../../shaderModules/TextureSizeUniformType.js\";class n extends i{constructor(){super(...arguments),this.origin=e()}}function h(e,a){a.receiveShadows&&(e.fragment.uniforms.add(new l(\"shadowMapMatrix\",((e,a)=>a.shadowMap.getShadowMapMatrices(e.origin)),4)),f(e,a))}function v(e,a){a.receiveShadows&&(e.fragment.uniforms.add(new d(\"shadowMapMatrix\",((e,a)=>a.shadowMap.getShadowMapMatrices(e.origin)),4)),f(e,a))}function f(e,i){const d=e.fragment;d.include(a),d.uniforms.add([...p(\"shadowMapTex\",((e,a)=>a.shadowMap.depthTexture),i.hasWebGL2Context?c.None:c.Size),new t(\"numCascades\",((e,a)=>a.shadowMap.numCascades)),new o(\"cascadeDistances\",((e,a)=>a.shadowMap.cascadeDistances))]),d.code.add(r`\n    int chooseCascade(float depth, out mat4 mat) {\n      vec4 distance = cascadeDistances;\n\n      // choose correct cascade\n      int i = depth < distance[1] ? 0 : depth < distance[2] ? 1 : depth < distance[3] ? 2 : 3;\n\n      mat = i == 0 ? shadowMapMatrix[0] : i == 1 ? shadowMapMatrix[1] : i == 2 ? shadowMapMatrix[2] : shadowMapMatrix[3];\n\n      return i;\n    }\n\n    vec3 lightSpacePosition(vec3 _vpos, mat4 mat) {\n      vec4 lv = mat * vec4(_vpos, 1.0);\n      lv.xy /= lv.w;\n      return 0.5 * lv.xyz + vec3(0.5);\n    }\n\n    vec2 cascadeCoordinates(int i, vec3 lvpos) {\n      return vec2(float(i - 2 * (i / 2)) * 0.5, float(i / 2) * 0.5) + 0.5 * lvpos.xy;\n    }\n\n    float readShadowMapDepth(vec2 uv, sampler2D _depthTex) {\n      return rgba2float(texture2D(_depthTex, uv));\n    }\n\n    float posIsInShadow(vec2 uv, vec3 lvpos, sampler2D _depthTex) {\n      return readShadowMapDepth(uv, _depthTex) < lvpos.z ? 1.0 : 0.0;\n    }\n\n    float filterShadow(vec2 uv, vec3 lvpos, float textureSize, sampler2D _depthTex) {\n      float halfPixelSize = 0.5 / textureSize;\n\n      // filter, offset by half pixels\n      vec2 st = fract((vec2(halfPixelSize) + uv) * textureSize);\n\n      float s00 = posIsInShadow(uv + vec2(-halfPixelSize, -halfPixelSize), lvpos, _depthTex);\n      float s10 = posIsInShadow(uv + vec2(halfPixelSize, -halfPixelSize), lvpos, _depthTex);\n      float s11 = posIsInShadow(uv + vec2(halfPixelSize, halfPixelSize), lvpos, _depthTex);\n      float s01 = posIsInShadow(uv + vec2(-halfPixelSize, halfPixelSize), lvpos, _depthTex);\n\n      return mix(mix(s00, s10, st.x), mix(s01, s11, st.x), st.y);\n    }\n\n    float readShadowMap(const in vec3 _vpos, float _linearDepth) {\n      mat4 mat;\n      int i = chooseCascade(_linearDepth, mat);\n\n      if (i >= numCascades) { return 0.0; }\n\n      vec3 lvpos = lightSpacePosition(_vpos, mat);\n\n      // vertex completely outside? -> no shadow\n      if (lvpos.z >= 1.0) { return 0.0; }\n      if (lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) { return 0.0; }\n\n      // calc coord in cascade texture\n      vec2 uv = cascadeCoordinates(i, lvpos);\n\n      vec2 textureSize = ${s(i,\"shadowMapTex\")};\n\n      return filterShadow(uv, lvpos, textureSize.x, shadowMapTex);\n    }\n  `)}export{n as ReadShadowMapBindParameters,v as ReadShadowMapDraw,h as ReadShadowMapPass};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{isSome as r}from\"../../../../../../core/maybe.js\";import{c as e}from\"../../../../../../chunks/mat3f32.js\";import{glsl as o}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as a}from\"../../shaderModules/Matrix3PassUniform.js\";function s(s){s.vertex.uniforms.add(new a(\"colorTextureTransformMatrix\",(o=>r(o.colorTextureTransformMatrix)?o.colorTextureTransformMatrix:e()))),s.varyings.add(\"colorUV\",\"vec2\"),s.vertex.code.add(o`void forwardColorUV(){\ncolorUV = (colorTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function i(s){s.vertex.uniforms.add(new a(\"normalTextureTransformMatrix\",(o=>r(o.normalTextureTransformMatrix)?o.normalTextureTransformMatrix:e()))),s.varyings.add(\"normalUV\",\"vec2\"),s.vertex.code.add(o`void forwardNormalUV(){\nnormalUV = (normalTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function t(s){s.vertex.uniforms.add(new a(\"emissiveTextureTransformMatrix\",(o=>r(o.emissiveTextureTransformMatrix)?o.emissiveTextureTransformMatrix:e()))),s.varyings.add(\"emissiveUV\",\"vec2\"),s.vertex.code.add(o`void forwardEmissiveUV(){\nemissiveUV = (emissiveTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function n(s){s.vertex.uniforms.add(new a(\"occlusionTextureTransformMatrix\",(o=>r(o.occlusionTextureTransformMatrix)?o.occlusionTextureTransformMatrix:e()))),s.varyings.add(\"occlusionUV\",\"vec2\"),s.vertex.code.add(o`void forwardOcclusionUV(){\nocclusionUV = (occlusionTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function x(s){s.vertex.uniforms.add(new a(\"metallicRoughnessTextureTransformMatrix\",(o=>r(o.metallicRoughnessTextureTransformMatrix)?o.metallicRoughnessTextureTransformMatrix:e()))),s.varyings.add(\"metallicRoughnessUV\",\"vec2\"),s.vertex.code.add(o`void forwardMetallicRoughnessUV(){\nmetallicRoughnessUV = (metallicRoughnessTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}export{s as colorTextureUV,t as emissiveTextureUV,x as metallicRoughnessTextureUV,i as normalTextureUV,n as occlusionTextureUV};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{Float3PassUniform as e}from\"../../shaderModules/Float3PassUniform.js\";import{Float4sPassUniform as o}from\"../../shaderModules/Float4sPassUniform.js\";import{FloatsPassUniform as r}from\"../../shaderModules/FloatsPassUniform.js\";import{glsl as v}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as t}from\"../../shaderModules/Matrix3PassUniform.js\";import{VertexAttribute as a}from\"../../../lib/VertexAttribute.js\";import{vvColorNumber as i}from\"../../../materials/VisualVariablePassParameters.js\";function s(s,n){n.hasVvInstancing&&(n.vvSize||n.vvColor)&&s.attributes.add(a.INSTANCEFEATUREATTRIBUTE,\"vec4\");const l=s.vertex;n.vvSize?(l.uniforms.add(new e(\"vvSizeMinSize\",(e=>e.vvSizeMinSize))),l.uniforms.add(new e(\"vvSizeMaxSize\",(e=>e.vvSizeMaxSize))),l.uniforms.add(new e(\"vvSizeOffset\",(e=>e.vvSizeOffset))),l.uniforms.add(new e(\"vvSizeFactor\",(e=>e.vvSizeFactor))),l.uniforms.add(new t(\"vvSymbolRotationMatrix\",(e=>e.vvSymbolRotationMatrix))),l.uniforms.add(new e(\"vvSymbolAnchor\",(e=>e.vvSymbolAnchor))),l.code.add(v`vec3 vvScale(vec4 _featureAttribute) {\nreturn clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize);\n}\nvec4 vvTransformPosition(vec3 position, vec4 _featureAttribute) {\nreturn vec4(vvSymbolRotationMatrix * ( vvScale(_featureAttribute) * (position + vvSymbolAnchor)), 1.0);\n}`),l.code.add(v`\n      const float eps = 1.192092896e-07;\n      vec4 vvTransformNormal(vec3 _normal, vec4 _featureAttribute) {\n        vec3 vvScale = clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize + eps, vvSizeMaxSize);\n        return vec4(vvSymbolRotationMatrix * _normal / vvScale, 1.0);\n      }\n\n      ${n.hasVvInstancing?v`\n      vec4 vvLocalNormal(vec3 _normal) {\n        return vvTransformNormal(_normal, instanceFeatureAttribute);\n      }\n\n      vec4 localPosition() {\n        return vvTransformPosition(position, instanceFeatureAttribute);\n      }`:\"\"}\n    `)):l.code.add(v`vec4 localPosition() { return vec4(position, 1.0); }\nvec4 vvLocalNormal(vec3 _normal) { return vec4(_normal, 1.0); }`),n.vvColor?(l.constants.add(\"vvColorNumber\",\"int\",i),n.hasVvInstancing&&l.uniforms.add([new r(\"vvColorValues\",(e=>e.vvColorValues),i),new o(\"vvColorColors\",(e=>e.vvColorColors),i)]),l.code.add(v`\n      vec4 vvGetColor(vec4 featureAttribute, float values[vvColorNumber], vec4 colors[vvColorNumber]) {\n        float value = featureAttribute.y;\n        if (value <= values[0]) {\n          return colors[0];\n        }\n\n        for (int i = 1; i < vvColorNumber; ++i) {\n          if (values[i] >= value) {\n            float f = (value - values[i-1]) / (values[i] - values[i-1]);\n            return mix(colors[i-1], colors[i], f);\n          }\n        }\n        return colors[vvColorNumber - 1];\n      }\n\n      ${n.hasVvInstancing?v`\n      vec4 vvColor() {\n        return vvGetColor(instanceFeatureAttribute, vvColorValues, vvColorColors);\n      }`:\"\"}\n    `)):l.code.add(v`vec4 vvColor() { return vec4(1.0); }`)}export{s as VisualVariables};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{symbolAlphaCutoff as o}from\"./AlphaCutoff.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function d(d){d.fragment.code.add(r`\n    #define discardOrAdjustAlpha(color) { if (color.a < ${r.float(o)}) { discard; } }\n  `)}export{d as DiscardOrAdjustAlphaBlend};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{DiscardOrAdjustAlphaBlend as a}from\"./DiscardOrAdjustAlphaBlend.glsl.js\";import{FloatDrawUniform as e}from\"../../shaderModules/FloatDrawUniform.js\";import{FloatPassUniform as r}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as o}from\"../../shaderModules/interfaces.js\";import{AlphaDiscardMode as d}from\"../../../lib/basicInterfaces.js\";function s(a,e){l(a,e,new r(\"textureAlphaCutoff\",(a=>a.textureAlphaCutoff)))}function t(a,r){l(a,r,new e(\"textureAlphaCutoff\",(a=>a.textureAlphaCutoff)))}function l(e,r,s){const t=e.fragment;switch(r.alphaDiscardMode!==d.Mask&&r.alphaDiscardMode!==d.MaskBlend||t.uniforms.add(s),r.alphaDiscardMode){case d.Blend:return e.include(a);case d.Opaque:t.code.add(o`void discardOrAdjustAlpha(inout vec4 color) {\ncolor.a = 1.0;\n}`);break;case d.Mask:t.code.add(o`#define discardOrAdjustAlpha(color) { if (color.a < textureAlphaCutoff) { discard; } else { color.a = 1.0; } }`);break;case d.MaskBlend:e.fragment.code.add(o`#define discardOrAdjustAlpha(color) { if (color.a < textureAlphaCutoff) { discard; } }`)}}export{t as DiscardOrAdjustAlphaDraw,s as DiscardOrAdjustAlphaPass};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{s as r}from\"../../../../../../chunks/vec2.js\";import{a as o}from\"../../../../../../chunks/vec2f64.js\";import{s as e}from\"../../../../../../chunks/vec4.js\";import{c as a}from\"../../../../../../chunks/vec4f64.js\";import{Float2PassUniform as t}from\"../../shaderModules/Float2PassUniform.js\";import{Float4PassUniform as s}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as c}from\"../../shaderModules/interfaces.js\";function n(r){r.fragment.uniforms.add(new s(\"projInfo\",((r,o)=>f(o)))),r.fragment.uniforms.add(new t(\"zScale\",((r,o)=>i(o)))),r.fragment.code.add(c`vec3 reconstructPosition(vec2 fragCoord, float depth) {\nreturn vec3((fragCoord * projInfo.xy + projInfo.zw) * (zScale.x * depth + zScale.y), depth);\n}`)}function f(r){const o=r.camera.projectionMatrix;return 0===o[11]?e(m,2/(r.camera.fullWidth*o[0]),2/(r.camera.fullHeight*o[5]),(1+o[12])/o[0],(1+o[13])/o[5]):e(m,-2/(r.camera.fullWidth*o[0]),-2/(r.camera.fullHeight*o[5]),(1-o[8])/o[0],(1-o[9])/o[5])}const m=a();function i(o){return 0===o.camera.projectionMatrix[11]?r(d,0,1):r(d,1,0)}const d=o();export{n as CameraSpace,i as getZScale};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function c({code:c},i){i.doublePrecisionRequiresObfuscation?c.add(e`vec3 dpPlusFrc(vec3 a, vec3 b) {\nreturn mix(a, a + b, vec3(notEqual(b, vec3(0))));\n}\nvec3 dpMinusFrc(vec3 a, vec3 b) {\nreturn mix(vec3(0), a - b, vec3(notEqual(a, b)));\n}\nvec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\nvec3 t1 = dpPlusFrc(hiA, hiB);\nvec3 e = dpMinusFrc(t1, hiA);\nvec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\nreturn t1 + t2;\n}`):c.add(e`vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\nvec3 t1 = hiA + hiB;\nvec3 e = t1 - hiA;\nvec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\nreturn t1 + t2;\n}`)}export{c as DoublePrecision};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as c}from\"../../shaderModules/interfaces.js\";function e(e){e.code.add(c`vec4 premultiplyAlpha(vec4 v) {\nreturn vec4(v.rgb * v.a, v.a);\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nfloat rgb2v(vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}`)}export{e as ColorConversion};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{ColorMixModeEnum as e}from\"../../../../layers/support/symbolColorUtils.js\";import{ColorConversion as t}from\"./ColorConversion.glsl.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function i(i){i.include(t),i.code.add(r`\n    vec3 mixExternalColor(vec3 internalColor, vec3 textureColor, vec3 externalColor, int mode) {\n      // workaround for artifacts in OSX using Intel Iris Pro\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/10475\n      vec3 internalMixed = internalColor * textureColor;\n      vec3 allMixed = internalMixed * externalColor;\n\n      if (mode == ${r.int(e.Multiply)}) {\n        return allMixed;\n      }\n      if (mode == ${r.int(e.Ignore)}) {\n        return internalMixed;\n      }\n      if (mode == ${r.int(e.Replace)}) {\n        return externalColor;\n      }\n\n      // tint (or something invalid)\n      float vIn = rgb2v(internalMixed);\n      vec3 hsvTint = rgb2hsv(externalColor);\n      vec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\n      return hsv2rgb(hsvOut);\n    }\n\n    float mixExternalOpacity(float internalOpacity, float textureOpacity, float externalOpacity, int mode) {\n      // workaround for artifacts in OSX using Intel Iris Pro\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/10475\n      float internalMixed = internalOpacity * textureOpacity;\n      float allMixed = internalMixed * externalOpacity;\n\n      if (mode == ${r.int(e.Ignore)}) {\n        return internalMixed;\n      }\n      if (mode == ${r.int(e.Replace)}) {\n        return externalOpacity;\n      }\n\n      // multiply or tint (or something invalid)\n      return allMixed;\n    }\n  `)}export{i as MixExternalColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.26/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";function a(a){a.code.add(o`const float MAX_RGBA_FLOAT =\n255.0 / 256.0 +\n255.0 / 256.0 / 256.0 +\n255.0 / 256.0 / 256.0 / 256.0 +\n255.0 / 256.0 / 256.0 / 256.0 / 256.0;\nconst vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\nvec4 float2rgba(const float value) {\nfloat valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\nvec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\nconst float toU8AsFloat = 1.0 / 255.0;\nreturn fixedPointU8 * toU8AsFloat;\n}\nconst vec4 RGBA_2_FLOAT_FACTORS = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, RGBA_2_FLOAT_FACTORS);\n}`)}export{a as RgbaFloatEncoding};\n"],"names":[],"sourceRoot":""}
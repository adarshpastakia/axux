"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[9091],{"./packages/data/stories/VirtualGrid.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_axux_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/core/dist/index.js"),_faker_js_faker__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@faker-js/faker/dist/esm/index.mjs"),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/index.js"),_src__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./packages/data/src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={component:_src__WEBPACK_IMPORTED_MODULE_4__.xV,title:"@data/Virtual/Grid",tags:["autodocs"],parameters:{layout:"fullscreen",controls:{exclude:"data"}}},lorem=_faker_js_faker__WEBPACK_IMPORTED_MODULE_2__.We.lorem.paragraph(),Example={render:args=>{const[isLoading,setLoading]=(0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(!1),[recordCount,setCount]=(0,react__WEBPACK_IMPORTED_MODULE_3__.useState)(0);(0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)((()=>{setCount(10)}),[]);const loadMore=(0,react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((()=>{setLoading(!0),setTimeout((()=>{setCount(10+recordCount),setLoading(!1)}),200)}),[recordCount,10]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.Oq,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_4__.xV,{...args,items:new Array(recordCount).fill(!0),onLoadMore:loadMore,isLoading,children:props=>props.data&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_4__.xV.Item,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.VE,{isCollapsable:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.Q6,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.M,{children:["List item ",props.index+1]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.aW,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.R0,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.R0.Row,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.R0.Col,{flex:"auto",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("img",{height:96,width:128,loading:"lazy",className:"border-4 border-bw-500 object-contain",src:`https://picsum.photos/id/${props.index}/192/108`})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.R0.Col,{flex:"fill",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_axux_core__WEBPACK_IMPORTED_MODULE_1__.Qi,{clip:6,children:lorem})})]})})})]})})})})},args:{}};Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const [isLoading, setLoading] = useState(false);\n    const [recordCount, setCount] = useState(0);\n    useEffect(() => {\n      setCount(10);\n    }, []);\n    const loadMore = useCallback(() => {\n      setLoading(true);\n      setTimeout(() => {\n        setCount(count + recordCount);\n        setLoading(false);\n      }, 200);\n    }, [recordCount, count]);\n    return <AxViewport>\n        <AxGridView {...args} items={new Array(recordCount).fill(true)} onLoadMore={loadMore} isLoading={isLoading}>\n          {props => props.data && <AxGridView.Item {...props}>\n                <AxPanel isCollapsable>\n                  <AxHeader>\n                    <AxTitle>List item {props.index + 1}</AxTitle>\n                  </AxHeader>\n                  <AxContent>\n                    <AxFlexBox>\n                      <AxFlexBox.Row>\n                        <AxFlexBox.Col flex="auto">\n                          <img height={96} width={128} loading="lazy" className="border-4 border-bw-500 object-contain" src={`https://picsum.photos/id/${props.index}/192/108`} />\n                        </AxFlexBox.Col>\n                        <AxFlexBox.Col flex="fill">\n                          <AxText clip={6}>{lorem}</AxText>\n                        </AxFlexBox.Col>\n                      </AxFlexBox.Row>\n                    </AxFlexBox>\n                  </AxContent>\n                </AxPanel>\n              </AxGridView.Item>}\n        </AxGridView>\n      </AxViewport>;\n  },\n  args: {}\n}',...Example.parameters?.docs?.source}}};const __namedExportsOrder=["Example"]}}]);
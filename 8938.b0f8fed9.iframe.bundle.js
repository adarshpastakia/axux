/*! For license information please see 8938.b0f8fed9.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[8938],{"./packages/data/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S2:()=>AxCheckList,Hz:()=>Datagrid_AxDatagrid,_l:()=>AxHistogram,OI:()=>AxJsonView,YP:()=>AxPagination,XA:()=>AxTreePanel,pl:()=>AxVirtualGallery,Pv:()=>AxVirtualItem,_d:()=>AxVirtualList,h0:()=>usePagination});var dist=__webpack_require__("./packages/core/dist/index.js");const ar_namespaceObject=JSON.parse('{"label":{"noRecords":"لا تسجيلات"},"tree":{"noItems":"لا توجد عناصر","error":"خطأ في تحميل العناصر","loading":"تحميل العناصر…"},"datagrid":{"empty":"لا توجد سجلات متاحة"},"json":{"empty":"لا توجد خصائص بيانات","true":"نعم","false":"رقم"},"checkList":{"empty":"لا توجد عناصر قائمة"},"histogram":{"empty":"لا توجد رسوم بيانية"},"action":{"find":"تجد…","copy":"قيمة النسخ","filter":"منقي…","showShortcuts":"اختصارات لوحة المفاتيح…","collapseAll":"انهيار جميع","expandAll":"توسيع الكل","checkAll":"تحقق من الكل","uncheckAll":"الغاءالكل","addFilter":"أضف عامل تصفية","addFilterNot":"إضافة لا تصفية"}}'),en_namespaceObject=JSON.parse('{"label":{"noRecords":"No Records"},"tree":{"noItems":"No items","error":"Error loading items","loading":"Loading items..."},"datagrid":{"empty":"No records available"},"json":{"empty":"No data properties","true":"Yes","false":"No"},"checkList":{"empty":"No list items"},"histogram":{"empty":"No histograms"},"action":{"find":"Find...","copy":"Copy Value","filter":"Filter...","showShortcuts":"Keyboard shortcuts...","collapseAll":"Collapse All","expandAll":"Expand All","checkAll":"Check All","uncheckAll":"Uncheck All","addFilter":"Add Filter","addFilterNot":"Add not Filter"}}');(0,dist.a3)("data",{en:en_namespaceObject,ar:ar_namespaceObject});var react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),useBadge=__webpack_require__("./packages/core/dist/hooks/useBadge.js"),appIcons=__webpack_require__("./packages/core/dist/types/appIcons.js"),utilities_dist=__webpack_require__("./packages/utilities/dist/index.js"),es=__webpack_require__("./node_modules/react-i18next/dist/es/index.js");const useSelectableList=({items,selected,nonselected,onChange,onClick})=>{const[selection,setSelection]=(0,react.useState)({}),[,startTransition]=(0,react.useTransition)();(0,react.useEffect)((()=>{setSelection(items.reduce(((ret,{id})=>({...ret,[id]:selected?.includes?.(id)?1:nonselected?.includes?.(id)?-1:0})),{}))}),[items,selected,nonselected]);const toggleSelection=(0,react.useCallback)(((id,isNegative=!1)=>{const check=isNegative?-1:1,newSelection={...selection,[id]:0};0===selection[id]&&(newSelection[id]=1),0!==selection[id]&&(newSelection[id]=0),check&&(newSelection[id]=check,1===selection[id]&&1===check&&(newSelection[id]=0),-1===selection[id]&&-1===check&&(newSelection[id]=0));const change=[[],[]];Object.entries(newSelection).forEach((([id,select])=>1===select?change[0].push(id):-1===select?change[1].push(id):void 0)),startTransition((()=>{onClick?.(id,isNegative),onChange?.(change[0],change[1])}))}),[selection]);return{selection,toggleSelection}},CheckItem=({id,allowNegative,selected,icon,label,isDisabled,onClick,badge})=>{const badgeEl=(0,useBadge.Q)(badge);return(0,jsx_runtime.jsxs)("div",{className:"ax-checkList__item","data-disabled":isDisabled,onClick:()=>onClick(id,!1),onContextMenu:e=>(allowNegative&&onClick(id,!0),e.preventDefault()),children:[!allowNegative&&(0,jsx_runtime.jsx)(dist.Ng,{"data-type":"checkbox",className:"ax-checkList__checkbox","data-selected":1===selected,icon:selected?appIcons.U.iconCheckboxOn:appIcons.U.iconCheckboxOff}),allowNegative&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(dist.Ng,{"data-type":"multiple",className:"ax-checkList__checkbox",icon:1===selected?appIcons.U.iconCheckPlus:-1===selected?appIcons.U.iconCheckMinus:appIcons.U.iconCheckboxOff,"data-selected":selected}),(0,jsx_runtime.jsxs)("div",{className:"ax-checkList__checkbox",children:[(0,jsx_runtime.jsx)(dist.Ng,{"data-type":"positive",onClick:e=>(onClick(id,!1),e.stopPropagation()),icon:1===selected?appIcons.U.iconCheckPlus:appIcons.U.iconExpandPlus,"data-selected":1===selected}),(0,jsx_runtime.jsx)(dist.Ng,{"data-type":"negative",onClick:e=>(onClick(id,!0),e.stopPropagation()),icon:-1===selected?appIcons.U.iconCheckMinus:appIcons.U.iconCollapseMinus,"data-selected":-1===selected})]})]}),(0,react.isValidElement)(icon)&&icon,(0,utilities_dist.isString)(icon)&&(0,jsx_runtime.jsx)(dist.Ng,{icon}),(0,jsx_runtime.jsx)("label",{children:label}),badgeEl]})},AxCheckList=({items=[],maxCount=0,allowNegative,emptyMessage,sortItems=!0,...props})=>{const{t}=(0,es.$G)("data"),{selection,toggleSelection}=useSelectableList({items,...props}),[showMore,setShowMore]=(0,react.useState)(!1);(0,react.useEffect)((()=>{setShowMore(!1)}),[items]);const listItems=(0,react.useMemo)((()=>[...items].sort(((a,b)=>{if(sortItems&&selection[a.id]!==selection[b.id]){if(1===selection[a.id])return-1;if(1===selection[b.id])return 1;if(-1===selection[a.id])return-1;if(-1===selection[b.id])return 1}return 0})).slice(0,!showMore&&maxCount>0?maxCount:void 0)),[items,selection,maxCount,showMore,sortItems]);return(0,jsx_runtime.jsxs)("div",{className:"ax-checkList",children:[listItems.map(((item,index)=>(0,react.createElement)(CheckItem,{...item,key:index,onClick:toggleSelection,allowNegative,selected:selection[item.id]}))),maxCount>0&&items.length>maxCount&&(0,jsx_runtime.jsx)("div",{className:"ax-moreLink",children:(0,jsx_runtime.jsxs)("a",{onClick:()=>setShowMore(!showMore),children:["...",t("core:action."+(showMore?"less":"more"))]})}),0===listItems.length&&(0,jsx_runtime.jsx)(dist.aW.Empty,{className:"text-sm",message:emptyMessage??t("checkList.empty")})]})};try{AxCheckList.displayName="AxCheckList",AxCheckList.__docgenInfo={description:"",displayName:"AxCheckList",props:{items:{defaultValue:{value:"[]"},description:"list items",name:"items",required:!1,type:{name:"CheckListItem[]"}},allowNegative:{defaultValue:null,description:"allow negative selections",name:"allowNegative",required:!1,type:{name:"boolean"}},maxCount:{defaultValue:{value:"0"},description:"max list items",name:"maxCount",required:!1,type:{name:"number"}},emptyMessage:{defaultValue:null,description:"message for empty list",name:"emptyMessage",required:!1,type:{name:"string"}},sortItems:{defaultValue:{value:"true"},description:"",name:"sortItems",required:!1,type:{name:"boolean"}},selected:{defaultValue:null,description:"selected item ids",name:"selected",required:!1,type:{name:"string[]"}},nonselected:{defaultValue:null,description:"selected negative item ids",name:"nonselected",required:!1,type:{name:"string[]"}},onChange:{defaultValue:null,description:"change callback",name:"onChange",required:!1,type:{name:"((ids: string[], nonIds?: string[]) => void)"}},onClick:{defaultValue:null,description:"item click callback",name:"onClick",required:!1,type:{name:"((id: string, isNegative: boolean) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/checklist/CheckList.tsx#AxCheckList"]={docgenInfo:AxCheckList.__docgenInfo,name:"AxCheckList",path:"packages/data/src/checklist/CheckList.tsx#AxCheckList"})}catch(__react_docgen_typescript_loader_error){}var animations=__webpack_require__("./packages/core/dist/animations/index.js"),handlers=__webpack_require__("./packages/utilities/dist/handlers.js"),date_dist=__webpack_require__("./packages/date/dist/index.js");const DatagridContext=(0,react.createContext)({}),DatagridProvider=({children,columns=[],data=[],className,isSelectable,onRowSelect,sort,onSort,onRowExpand,datagridRef,lastScroll,onScroll,canExpand,...props})=>{const ghostRef=(0,react.useRef)(null),[widths,setWidths]=(0,react.useState)(new Map),refBody=(0,react.useRef)(null);(0,react.useEffect)((()=>{refBody.current?.scrollTo({top:0,behavior:"auto"})}),[data]),(0,react.useImperativeHandle)(datagridRef,(()=>({hilight:row=>{refBody.current?.querySelectorAll(".ax-datagrid__row.hilight").forEach((el=>el?.classList.remove("hilight")));const el=refBody.current?.querySelector(`[data-row="${row}"]`);el?.scrollIntoView({behavior:"smooth",block:"center"}),el?.classList.add("hilight")},unhilight:()=>{refBody.current?.querySelectorAll(".ax-datagrid__row.hilight").forEach((el=>el?.classList.remove("hilight")))},scrollTo:row=>{const el=refBody.current?.querySelector(`[data-row="${row}"]`);el?.scrollIntoView({behavior:"smooth"})}})),[]),(0,react.useEffect)((()=>{setWidths(new Map(columns.map((({name,width,minWidth=0,maxWidth=999})=>[name.toString(),width??Math.min(Math.max(180,minWidth),maxWidth)]))))}),[columns]);const startResize=(0,react.useCallback)((e=>{const colEl=e.currentTarget.closest(".ax-datagrid__header--cell");colEl&&null!=ghostRef.current&&((colEl,ghostEl,callback)=>{const placeholder=ghostEl.firstElementChild,isRtl="rtl"===getComputedStyle(colEl).direction,onResize=evt=>{const box=colEl.getBoundingClientRect(),x=isRtl?box.left-evt.clientX:evt.clientX-box.right;placeholder.style.width=`${colEl.offsetWidth+x}px`},onResizeEnd=()=>{callback(placeholder.offsetWidth),ghostEl.style.display="none",document.removeEventListener("mousemove",onResize),document.removeEventListener("mouseup",onResizeEnd)},box=colEl.getBoundingClientRect();if(null!=colEl.parentElement){const parentBox=colEl.parentElement?.getBoundingClientRect();isRtl?(placeholder.style.left="unset",placeholder.style.right=parentBox.right-box.right+"px"):(placeholder.style.right="unset",placeholder.style.left=parentBox.left-box.left+"px")}placeholder.style.width=`${colEl.offsetWidth}px`,placeholder.style.minWidth=colEl.style.minWidth||"48px",placeholder.style.maxWidth=colEl.style.maxWidth||"75vw",ghostEl.style.display="block",document.addEventListener("mousemove",onResize),document.addEventListener("mouseup",onResizeEnd)})(colEl,ghostRef.current,(width=>{setWidths(new Map(widths.set(colEl.dataset.name??"",width)))}))}),[widths]);return(0,react.useEffect)((()=>{refBody?.current?.scrollTo({top:lastScroll,behavior:"instant"})}),[]),(0,jsx_runtime.jsx)(DatagridContext.Provider,{value:{columns,data,widths,startResize,onRowExpand,isSelectable,onRowSelect,canExpand,sort,onSort},children:(0,jsx_runtime.jsxs)("div",{className:`ax-datagrid ${className??""}`,children:[(0,jsx_runtime.jsx)("div",{className:`ax-datagrid__wrapper ${className??""}`,onScroll:e=>onScroll?.(e.currentTarget.scrollTop),ref:refBody,children}),(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__resize--ghost",ref:ghostRef,children:(0,jsx_runtime.jsx)("div",{})})]})})},useDatagridContext=()=>(0,react.useContext)(DatagridContext);try{DatagridProvider.displayName="DatagridProvider",DatagridProvider.__docgenInfo={description:"",displayName:"DatagridProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/datagrid/Context.tsx#DatagridProvider"]={docgenInfo:DatagridProvider.__docgenInfo,name:"DatagridProvider",path:"packages/data/src/datagrid/Context.tsx#DatagridProvider"})}catch(__react_docgen_typescript_loader_error){}const BodyCell=(0,react.memo)((({row,name,minWidth,maxWidth,type,align,format,valueMap,render,record})=>{const{widths}=useDatagridContext(),width=(0,react.useMemo)((()=>widths.get(name.toString())??180),[widths,name]),content=(0,react.useMemo)((()=>{const value=(0,utilities_dist.getByPath)(record,name.toString());if(null!=render)return render(value,record,row);if("boolean"===type){return(valueMap??{true:"Yes",false:"no"})[""+((0,utilities_dist.isTrue)(value)?"true":"false")]}return null!=valueMap&&"string"===type&&value in valueMap?valueMap[value]:"date"===type?(0,jsx_runtime.jsx)(date_dist.$7,{date:value,format}):"number"===type?utilities_dist.Format.number(value,format):value??""}),[name,record,render,format,row,type,valueMap]);return(0,jsx_runtime.jsx)("div",{"data-name":name,"data-align":align,className:"ax-datagrid__body--cell",style:{minWidth,maxWidth,width},children:content})}));BodyCell.displayName="AxDatagrid.BodyCell";try{BodyCell.displayName="AxDatagrid.BodyCell",BodyCell.__docgenInfo={description:"",displayName:"AxDatagrid.BodyCell",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/datagrid/BodyCell.tsx#AxDatagrid.BodyCell"]={docgenInfo:AxDatagrid.BodyCell.__docgenInfo,name:"AxDatagrid.BodyCell",path:"packages/data/src/datagrid/BodyCell.tsx#AxDatagrid.BodyCell"})}catch(__react_docgen_typescript_loader_error){}const BodyRow=(0,react.memo)((({row,record})=>{const{columns,isSelectable,onRowSelect,onRowExpand,canExpand}=useDatagridContext(),[isExpanded,setExpanded]=(0,react.useState)(!1),[expandedNode,setExpandedNode]=(0,react.useState)(),handleExpand=(0,react.useCallback)((()=>{if(!expandedNode){const node=onRowExpand?.(record);return setExpandedNode(node),setExpanded(!!node)}setExpanded(!isExpanded)}),[isExpanded,expandedNode,record,onRowExpand]),[start,end,cols]=(0,react.useMemo)((()=>[columns.filter((col=>!0===col.isLocked||"start"===col.isLocked)),columns.filter((col=>"end"===col.isLocked)),columns.filter((col=>!col.isLocked))]),[columns]);return(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__row","data-row":row,children:[(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__row--flex","data-selectable":isSelectable,onClick:isSelectable?(0,handlers.qk)((()=>onRowSelect?.(record))):void 0,children:[(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__fixStart",children:[!(null==onRowExpand)&&(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__body--cell "+(!1!==canExpand?.(record)?"cursor-pointer":"opacity-30 pointer-events-none"),onClick:(0,handlers.qk)(handleExpand,{stopPropagation:!0}),children:(0,jsx_runtime.jsx)(dist.Ng,{icon:isExpanded?appIcons.U.iconCollapseMinus:appIcons.U.iconExpandPlus})}),start.map(((props,column)=>(0,jsx_runtime.jsx)(BodyCell,{...props,record,row},column)))]}),cols.map(((props,column)=>(0,jsx_runtime.jsx)(BodyCell,{...props,record,row},column))),(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__fixEnd",children:end.map(((props,column)=>(0,jsx_runtime.jsx)(BodyCell,{...props,record,row},column)))})]}),isExpanded&&expandedNode]})}));BodyRow.displayName="AxDatagrid.BodyRow";try{BodyRow.displayName="AxDatagrid.BodyRow",BodyRow.__docgenInfo={description:"",displayName:"AxDatagrid.BodyRow",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/datagrid/BodyRow.tsx#AxDatagrid.BodyRow"]={docgenInfo:AxDatagrid.BodyRow.__docgenInfo,name:"AxDatagrid.BodyRow",path:"packages/data/src/datagrid/BodyRow.tsx#AxDatagrid.BodyRow"})}catch(__react_docgen_typescript_loader_error){}const EmptyRow=()=>{const{columns,widths,onRowExpand}=useDatagridContext(),[start,end,cols]=(0,react.useMemo)((()=>[columns.filter((col=>!0===col.isLocked||"start"===col.isLocked)),columns.filter((col=>"end"===col.isLocked)),columns.filter((col=>!col.isLocked))]),[columns]);return(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__row flex-1 pointer-events-none",children:(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__row--flex min-h-full",children:[(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__fixStart",children:[!(null==onRowExpand)&&(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__body--cell",children:(0,jsx_runtime.jsx)(dist.Ng,{icon:""})}),start.map((({minWidth,maxWidth,name},column)=>(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__body--cell",style:{minWidth,maxWidth,width:widths.get(name.toString())??180}},column)))]}),cols.map((({name,minWidth,maxWidth},column)=>(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__body--cell",style:{minWidth,maxWidth,width:widths.get(name.toString())??180}},column))),(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__fixEnd",children:end.map((({minWidth,maxWidth,name},column)=>(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__body--cell",style:{minWidth,maxWidth,width:widths.get(name.toString())??180}},column)))})]})})},Body=(0,react.memo)((()=>{const{data}=useDatagridContext();return(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__body",children:[data.map(((record,row)=>(0,jsx_runtime.jsx)(BodyRow,{record,row},row))),(0,jsx_runtime.jsx)(EmptyRow,{})]})}));Body.displayName="AxDatagrid.Body";try{Body.displayName="AxDatagrid.Body",Body.__docgenInfo={description:"",displayName:"AxDatagrid.Body",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/datagrid/Body.tsx#AxDatagrid.Body"]={docgenInfo:AxDatagrid.Body.__docgenInfo,name:"AxDatagrid.Body",path:"packages/data/src/datagrid/Body.tsx#AxDatagrid.Body"})}catch(__react_docgen_typescript_loader_error){}const HeaderCell=(0,react.memo)((({icon,name,isPrimary,isResizeable,isSortable,tooltip,rtlFlip,label,minWidth,maxWidth})=>{const{startResize,widths,sort,onSort}=useDatagridContext(),width=(0,react.useMemo)((()=>widths.get(name.toString())??180),[widths,name]),tooltipContent=(0,react.useMemo)((()=>tooltip?`${isPrimary?"🔑":""}${!0!==tooltip?tooltip:label}`:""),[isPrimary,label,tooltip]),handleSort=(0,react.useCallback)((()=>{onSort?.(name.toString(),sort?.name===name&&"asc"===sort.order?"desc":"asc")}),[onSort,name,sort]);return(0,jsx_runtime.jsxs)("div",{"data-name":name,className:"ax-datagrid__header--cell",style:{minWidth,maxWidth,width},children:[(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__header--label","data-sortable":isSortable,"data-centered":!label&&!!icon,onClick:(0,handlers.qk)(handleSort),"data-tooltip":tooltipContent,"data-tooltip-placement":"bottom-start",children:[icon&&(0,jsx_runtime.jsx)(dist.Ng,{icon,rtlFlip}),isPrimary&&(0,jsx_runtime.jsx)(dist.Ng,{rtlFlip:!0,icon:"M4 6.5C4 4 6 2 8.5 2S13 4 13 6.5C13 8.46 11.75 10.13 10 10.74V15H13V18H10V22H7V10.74C5.25 10.13 4 8.46 4 6.5M7 6.5C7 7.33 7.67 8 8.5 8S10 7.33 10 6.5 9.33 5 8.5 5 7 5.67 7 6.5"}),(0,jsx_runtime.jsx)("label",{children:label}),isSortable&&(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__header--sort","data-sort":sort?.name===name&&sort?.order,children:[(0,jsx_runtime.jsx)("span",{children:"▼"}),(0,jsx_runtime.jsx)("span",{children:"▲"})]})]}),isResizeable&&(0,jsx_runtime.jsx)("div",{onMouseDown:startResize,className:"ax-datagrid__header--resize"})]})}));HeaderCell.displayName="AxDatagrid.HeaderCell";try{HeaderCell.displayName="AxDatagrid.HeaderCell",HeaderCell.__docgenInfo={description:"",displayName:"AxDatagrid.HeaderCell",props:{name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string | number | symbol"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},tooltip:{defaultValue:null,description:"",name:"tooltip",required:!1,type:{name:"string | true"}},valueMap:{defaultValue:null,description:"",name:"valueMap",required:!1,type:{name:"any"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"string"'},{value:'"number"'},{value:'"boolean"'},{value:'"date"'}]}},align:{defaultValue:null,description:"",name:"align",required:!1,type:{name:"enum",value:[{value:'"start"'},{value:'"center"'},{value:'"end"'}]}},format:{defaultValue:null,description:"",name:"format",required:!1,type:{name:"string"}},isPrimary:{defaultValue:null,description:"",name:"isPrimary",required:!1,type:{name:"boolean"}},isSortable:{defaultValue:null,description:"",name:"isSortable",required:!1,type:{name:"boolean"}},isResizeable:{defaultValue:null,description:"",name:"isResizeable",required:!1,type:{name:"boolean"}},isLocked:{defaultValue:null,description:"",name:"isLocked",required:!1,type:{name:'true | "start" | "end"'}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"number"}},maxWidth:{defaultValue:null,description:"",name:"maxWidth",required:!1,type:{name:"number"}},minWidth:{defaultValue:null,description:"",name:"minWidth",required:!1,type:{name:"number"}},render:{defaultValue:null,description:"",name:"render",required:!1,type:{name:"((value: AnyObject, record: AnyObject, row: number) => ReactNode)"}},icon:{defaultValue:null,description:"icon\n\n[webfont className | svg path | url | 2 character string]",name:"icon",required:!1,type:{name:"string"}},rtlFlip:{defaultValue:null,description:"flip icon when rtl",name:"rtlFlip",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/datagrid/HeaderCell.tsx#AxDatagrid.HeaderCell"]={docgenInfo:AxDatagrid.HeaderCell.__docgenInfo,name:"AxDatagrid.HeaderCell",path:"packages/data/src/datagrid/HeaderCell.tsx#AxDatagrid.HeaderCell"})}catch(__react_docgen_typescript_loader_error){}const Header=(0,react.memo)((()=>{const{columns,onRowExpand}=useDatagridContext(),[start,end,cols]=(0,react.useMemo)((()=>[columns.filter((col=>!0===col.isLocked||"start"===col.isLocked)),columns.filter((col=>"end"===col.isLocked)),columns.filter((col=>!col.isLocked))]),[columns]);return(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__header",children:[(0,jsx_runtime.jsxs)("div",{className:"ax-datagrid__fixStart",children:[!(null==onRowExpand)&&(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__header--cell px-2",children:(0,jsx_runtime.jsx)(dist.Ng,{icon:""})}),start.map(((props,index)=>(0,jsx_runtime.jsx)(HeaderCell,{...props},index)))]}),cols.map(((props,index)=>(0,jsx_runtime.jsx)(HeaderCell,{...props},index))),(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__fixEnd",children:end.map(((props,index)=>(0,jsx_runtime.jsx)(HeaderCell,{...props},index)))})]})}));Header.displayName="AxDatagrid.Header";try{Header.displayName="AxDatagrid.Header",Header.__docgenInfo={description:"",displayName:"AxDatagrid.Header",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/datagrid/Header.tsx#AxDatagrid.Header"]={docgenInfo:AxDatagrid.Header.__docgenInfo,name:"AxDatagrid.Header",path:"packages/data/src/datagrid/Header.tsx#AxDatagrid.Header"})}catch(__react_docgen_typescript_loader_error){}const AxDatagridComponent=({data=[],emptyDisplay,children,isLoading,...props})=>{const{t}=(0,es.$G)("data");return(0,jsx_runtime.jsxs)(DatagridProvider,{...props,data,onRowExpand:children,children:[(0,jsx_runtime.jsx)(Header,{}),data.length>0&&(0,jsx_runtime.jsx)(Body,{}),isLoading&&(0,jsx_runtime.jsx)("div",{className:"ax-datagrid__loader",children:(0,jsx_runtime.jsx)(animations.z$,{})}),!isLoading&&0===data.length&&(0,jsx_runtime.jsx)(react.Fragment,{children:emptyDisplay&&!(0,utilities_dist.isString)(emptyDisplay)?emptyDisplay:(0,jsx_runtime.jsx)(dist.aW.Empty,{size:"sm",message:emptyDisplay??t("datagrid.empty")})})]})};AxDatagridComponent.displayName="AxDatagrid";const Datagrid_AxDatagrid=(0,react.memo)(AxDatagridComponent);try{AxDatagridComponent.displayName="AxDatagrid",AxDatagridComponent.__docgenInfo={description:"",displayName:"AxDatagrid",props:{data:{defaultValue:{value:"[]"},description:"",name:"data",required:!1,type:{name:"T[]"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"DatagridColumn<T>[]"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}},datagridRef:{defaultValue:null,description:"",name:"datagridRef",required:!1,type:{name:"Ref<DatagridRef>"}},emptyDisplay:{defaultValue:null,description:"",name:"emptyDisplay",required:!1,type:{name:"string | ReactElement<any, string | JSXElementConstructor<any>>"}},sort:{defaultValue:null,description:"",name:"sort",required:!1,type:{name:'{ name: string; order: "desc" | "asc"; }'}},onSort:{defaultValue:null,description:"",name:"onSort",required:!1,type:{name:'((column: string, dir: "desc" | "asc") => void)'}},isSelectable:{defaultValue:null,description:"",name:"isSelectable",required:!1,type:{name:"boolean"}},onRowSelect:{defaultValue:null,description:"",name:"onRowSelect",required:!1,type:{name:"((record: T) => void)"}},lastScroll:{defaultValue:null,description:"",name:"lastScroll",required:!1,type:{name:"number"}},onScroll:{defaultValue:null,description:"",name:"onScroll",required:!1,type:{name:"((top: number) => void)"}},canExpand:{defaultValue:null,description:"",name:"canExpand",required:!1,type:{name:"((record: T) => boolean)"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/datagrid/Datagrid.tsx#AxDatagrid"]={docgenInfo:Datagrid_AxDatagrid.__docgenInfo,name:"AxDatagrid",path:"packages/data/src/datagrid/Datagrid.tsx#AxDatagrid"})}catch(__react_docgen_typescript_loader_error){}const HistogramMeter=({id,label,count,total=0,format,color,allowNegative,positiveColor,negativeColor,allowDisable,selected=0,onClick})=>{const meter=(0,react.useMemo)((()=>count/Math.max(1,total)),[count,total]),badge=(0,react.useMemo)((()=>"percent"===format?utilities_dist.Format.percent(count/Math.max(1,total)):utilities_dist.Format.number(count)),[format,count,total]);return(0,jsx_runtime.jsxs)("div",{"data-test-id":id,className:"ax-histogram__item","data-disabled":allowDisable&&0===count,children:[allowNegative&&(0,jsx_runtime.jsxs)("div",{className:"ax-histogram__checkbox",children:[(0,jsx_runtime.jsx)(dist.Ng,{"data-type":"positive",onClick:e=>(onClick?.(id,!1),e.stopPropagation()),icon:appIcons.U.iconMagnifyPlus,"data-selected":1===selected}),(0,jsx_runtime.jsx)(dist.Ng,{"data-type":"negative",onClick:e=>(onClick?.(id,!0),e.stopPropagation()),icon:appIcons.U.iconMagnifyMinus,"data-selected":-1===selected})]}),(0,jsx_runtime.jsxs)("div",{"data-color":1===selected?positiveColor:-1===selected?negativeColor:color,style:{"--meter":meter},className:"ax-histogram__meter","data-clickable":!(null==onClick),onClick:()=>onClick?.(id,!1),onContextMenu:e=>(allowNegative&&onClick?.(id,!0),e.preventDefault()),children:[(0,jsx_runtime.jsxs)("label",{children:[label," "]}),(0,jsx_runtime.jsx)("span",{children:badge})]})]})},AxHistogram=({items=[],format,total=0,allowNegative,positiveColor="success",negativeColor="danger",color="primary",enableSorting,emptyMessage,isLoading,...props})=>{const{t}=(0,es.$G)("data"),{selection,toggleSelection}=useSelectableList({items,...props}),listItems=(0,react.useMemo)((()=>enableSorting?[...items].sort(((a,b)=>a.count===b.count?a.label.toLocaleLowerCase().localeCompare(b.label.toLocaleLowerCase()):a.count>b.count?-1:1)):items),[items,enableSorting,selection]),totalValue=(0,react.useMemo)((()=>total>0?total:"percent"===format?items.reduce(((t,i)=>t+i.count),0):Math.max(...items.map((i=>i.count)))),[total,format,items]);return(0,jsx_runtime.jsxs)("div",{className:"ax-histogram",children:[listItems.map(((item,i)=>(0,jsx_runtime.jsx)(HistogramMeter,{...item,total:totalValue,format,color,positiveColor,negativeColor,onClick:null!=props.onChange?toggleSelection:props.onClick,allowNegative,selected:selection[item.id]},i))),isLoading&&(0,jsx_runtime.jsx)(dist.hh,{children:(0,jsx_runtime.jsx)(dist.Xr.Bars,{})}),!isLoading&&0===items.length&&(0,jsx_runtime.jsx)(dist.aW.Empty,{className:"text-sm",message:emptyMessage??t("histogram.empty")})]})};try{AxHistogram.displayName="AxHistogram",AxHistogram.__docgenInfo={description:"",displayName:"AxHistogram",props:{items:{defaultValue:{value:"[]"},description:"list items",name:"items",required:!1,type:{name:"HistogramItem[]"}},allowNegative:{defaultValue:null,description:"allow negative selections",name:"allowNegative",required:!1,type:{name:"boolean"}},total:{defaultValue:{value:"0"},description:"total value",name:"total",required:!1,type:{name:"number"}},color:{defaultValue:{value:"primary"},description:"default bar color",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"accent"'},{value:'"danger"'},{value:'"warning"'},{value:'"success"'}]}},positiveColor:{defaultValue:{value:"success"},description:"positive selection color",name:"positiveColor",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"accent"'},{value:'"danger"'},{value:'"warning"'},{value:'"success"'}]}},negativeColor:{defaultValue:{value:"danger"},description:"negative selection color",name:"negativeColor",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"accent"'},{value:'"danger"'},{value:'"warning"'},{value:'"success"'}]}},format:{defaultValue:null,description:"number format",name:"format",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"percent"'}]}},emptyMessage:{defaultValue:null,description:"message for empty list",name:"emptyMessage",required:!1,type:{name:"string"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}},allowDisable:{defaultValue:null,description:"disable item when count is 0",name:"allowDisable",required:!1,type:{name:"boolean"}},enableSorting:{defaultValue:null,description:"",name:"enableSorting",required:!1,type:{name:"boolean"}},selected:{defaultValue:{value:"0"},description:"selected item ids",name:"selected",required:!1,type:{name:"string[]"}},nonselected:{defaultValue:null,description:"selected negative item ids",name:"nonselected",required:!1,type:{name:"string[]"}},onChange:{defaultValue:null,description:"change callback",name:"onChange",required:!1,type:{name:"((ids: string[], nonIds?: string[]) => void)"}},onClick:{defaultValue:null,description:"item click callback",name:"onClick",required:!1,type:{name:"((id: string, isNegative: boolean) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/histogram/Histogram.tsx#AxHistogram"]={docgenInfo:AxHistogram.__docgenInfo,name:"AxHistogram",path:"packages/data/src/histogram/Histogram.tsx#AxHistogram"})}catch(__react_docgen_typescript_loader_error){}const makeRange=(start,end)=>{const length=end-start;return Array.from({length},((_,idx)=>idx+start))},usePagination=({totalRecords,currentPage=0,perPage=25,onChange})=>{const[page,setPage]=(0,react.useState)(0),[,startTransition]=(0,react.useTransition)(),totalPages=(0,react.useMemo)((()=>Math.max(1,Math.ceil(totalRecords/perPage))),[totalRecords,perPage]),ranges=(0,react.useMemo)((()=>{if(totalPages<=9)return[makeRange(0,totalPages)];const leftSiblingIndex=Math.max(page-2,0),rightSiblingIndex=Math.min(page+2,totalPages-1),shouldShowLeftDots=leftSiblingIndex>=2,shouldShowRightDots=rightSiblingIndex<totalPages-2;return!shouldShowLeftDots&&shouldShowRightDots?[makeRange(0,6),makeRange(totalPages-2,totalPages)]:shouldShowLeftDots&&!shouldShowRightDots?[makeRange(0,2),makeRange(totalPages-6,totalPages)]:shouldShowLeftDots&&shouldShowRightDots?[makeRange(0,2),makeRange(leftSiblingIndex+1,rightSiblingIndex),makeRange(totalPages-2,totalPages)]:[]}),[page,totalPages]);(0,react.useEffect)((()=>{setPage(Math.min(currentPage,totalPages-1)),onChange?.(Math.min(currentPage,totalPages-1))}),[currentPage,totalPages]);const headLabel=(0,react.useMemo)((()=>(0,jsx_runtime.jsxs)("span",{className:"text-muted",children:[page*perPage+1," - ",Math.min(page*perPage+perPage,totalRecords)]})),[page,perPage,totalRecords]),onPageChange=(0,react.useCallback)((page=>{setPage(page),startTransition((()=>onChange?.(page)))}),[]);return{page,totalPages,headLabel,ranges,onPageChange}};try{usePagination.displayName="usePagination",usePagination.__docgenInfo={description:"",displayName:"usePagination",props:{totalRecords:{defaultValue:null,description:"",name:"totalRecords",required:!0,type:{name:"number"}},currentPage:{defaultValue:{value:"0"},description:"",name:"currentPage",required:!1,type:{name:"number"}},perPage:{defaultValue:{value:"25"},description:"",name:"perPage",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((page: number) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/hooks/usePagination.tsx#usePagination"]={docgenInfo:usePagination.__docgenInfo,name:"usePagination",path:"packages/data/src/hooks/usePagination.tsx#usePagination"})}catch(__react_docgen_typescript_loader_error){}const JsonValue=({prop="",value,fullProp,copy,filters,labeler,formatter,propertyScheme,onFilter,isInline,labelWidth,showPropertyTree})=>{const{t}=(0,es.$G)("data"),propWithoutOrdinal=(0,react.useMemo)((()=>fullProp.replace(/\.\d*\./,".")),[fullProp]),canCopy=(0,react.useMemo)((()=>(0,utilities_dist.isTrue)(copy)||copy?.includes?.(prop)||copy?.includes?.(propWithoutOrdinal)),[copy,prop,propWithoutOrdinal]),canFilter=(0,react.useMemo)((()=>(0,utilities_dist.isTrue)(filters)||filters?.includes?.(prop)||filters?.includes?.(propWithoutOrdinal)),[filters,prop,propWithoutOrdinal]),label=(0,react.useMemo)((()=>labeler?.(propWithoutOrdinal)??showPropertyTree?prop:fullProp),[labeler,fullProp,prop,propWithoutOrdinal,showPropertyTree]),display=(0,react.useMemo)((()=>{if((0,utilities_dist.isEmpty)(value))return(0,jsx_runtime.jsx)("label",{className:"ax-json__empty",children:"null"});const actualValue=value._label_??value??"";if(formatter){const ret=formatter?.(fullProp,value);return(0,utilities_dist.isNil)(ret),ret}let ret=actualValue;return(0,utilities_dist.isArray)(actualValue)&&(ret=`[${actualValue.join(", ")}]`),propertyScheme?.date?.includes(fullProp)?(0,jsx_runtime.jsx)(date_dist.$7,{date:value}):(propertyScheme?.time?.includes(fullProp)&&(ret=utilities_dist.Format.date(actualValue,"pp")),propertyScheme?.number?.phone(fullProp)&&(ret=utilities_dist.Format.phone(actualValue)),propertyScheme?.bytes?.includes(fullProp)&&(ret=utilities_dist.Format.bytes(actualValue)),propertyScheme?.percent?.includes(fullProp)&&(ret=utilities_dist.Format.percent(actualValue)),propertyScheme?.number?.includes(fullProp)&&(ret=utilities_dist.Format.number(actualValue)),propertyScheme?.boolean?.includes(fullProp)&&(ret=t(actualValue?"json.true":"json.false")),ret?.length>128&&(ret=(0,jsx_runtime.jsx)(dist.Qi,{clip:3,children:ret})),(0,jsx_runtime.jsxs)(react.Fragment,{children:[ret,(0,utilities_dist.isObject)(value)&&value._score_>0&&(0,jsx_runtime.jsx)(dist.hJ,{size:"xs",value:value._score_})]}))}),[value,formatter,propertyScheme,prop,fullProp]),filterValue=(0,react.useMemo)((()=>(0,utilities_dist.isObject)(value)?value._label_:value),[value]);return(0,jsx_runtime.jsxs)(dist.eZ,{className:"ax-json__value",isCollapsed:!1,isDisabled:isInline,"data-inline":isInline,children:[(0,jsx_runtime.jsxs)("label",{className:"ax-json__property--label",style:{width:labelWidth},children:[(0,jsx_runtime.jsx)("span",{children:label}),canCopy&&(0,jsx_runtime.jsx)(dist.Qi.Copy,{text:filterValue,tooltip:t("action.copy")}),canFilter&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(dist.oG,{variant:"link",color:"success",icon:appIcons.U.iconMagnifyPlus,tooltip:t("action.addFilter"),onClick:()=>onFilter(fullProp,filterValue)}),(0,jsx_runtime.jsx)(dist.oG,{variant:"link",color:"danger",icon:appIcons.U.iconMagnifyMinus,tooltip:t("action.addFilterNot"),onClick:()=>onFilter(fullProp,filterValue,!0)})]})]}),(0,jsx_runtime.jsx)("div",{children:display})]})},JsonEmptyObject=({type="object"})=>(0,jsx_runtime.jsx)("label",{className:"ax-json__empty",children:"object"===type?"{empty object}":"[empty list]"}),JsonProperty=({prop="",value,keys=[],showPropertyTree,...props})=>{const type=(0,react.useMemo)((()=>(0,utilities_dist.isObject)(value)&&"_label_"in value&&"_score_"in value?"value":(0,utilities_dist.isArray)(value)?(0,utilities_dist.isObject)(value[0])?"object":"value":(0,utilities_dist.isObject)(value)?"object":"value"),[value]),empty=(0,react.useMemo)((()=>(0,utilities_dist.isEmpty)(value)),[value]);return(0,jsx_runtime.jsxs)("div",{className:"ax-json__property",children:["value"===type&&(0,jsx_runtime.jsx)(JsonValue,{...props,prop,value,fullProp:[...keys,prop].join("."),showPropertyTree}),(showPropertyTree||empty)&&"object"===type&&(0,jsx_runtime.jsxs)(dist.eZ,{isCollapsed:!1,children:[(0,jsx_runtime.jsx)("label",{className:"ax-json__property--label",children:props.labeler?.([...keys,prop].join("."))??prop}),(0,jsx_runtime.jsx)(JsonObject,{...props,json:value,keys:[...keys,prop],showPropertyTree})]}),!showPropertyTree&&!empty&&"object"===type&&(0,jsx_runtime.jsx)(JsonObject,{...props,json:value,keys:[...keys,prop],showPropertyTree})]})},JsonObject=({json={},keys=[],...props})=>{const properties=(0,react.useMemo)((()=>Object.entries(json).sort((([a],[b])=>(0,utilities_dist.compareValues)()(a,b)))),[json]);return(0,jsx_runtime.jsxs)(react.Fragment,{children:[properties.map((([key,value])=>(0,react.createElement)(JsonProperty,{...props,key,prop:(0,utilities_dist.isObject)(json)?key:`[${key}]`,value,keys}))),0===properties.length&&(0,jsx_runtime.jsx)(JsonEmptyObject,{type:(0,utilities_dist.isObject)(json)?"object":"array"})]})},AxJsonView=({className,json,copy,propertyScheme,filters,isInline,labelWidth,formatter,labeler,onFilter,emptyMessage,showPropertyTree=!0,...rest})=>{const{t}=(0,es.$G)("data");return(0,jsx_runtime.jsx)("div",{...rest,className:`ax-json ${className??""}`,children:(0,utilities_dist.isEmpty)(json)?(0,jsx_runtime.jsx)(dist.aW.Empty,{className:"text-sm",message:emptyMessage??t("json.empty")}):(0,jsx_runtime.jsx)(JsonObject,{json,copy,propertyScheme,filters,formatter,labeler,onFilter,isInline,labelWidth,showPropertyTree})})};try{AxJsonView.displayName="AxJsonView",AxJsonView.__docgenInfo={description:"",displayName:"AxJsonView",props:{json:{defaultValue:{value:"{}"},description:"json value",name:"json",required:!1,type:{name:"AnyObject"}},isInline:{defaultValue:null,description:"display inline",name:"isInline",required:!1,type:{name:"boolean"}},labelWidth:{defaultValue:null,description:"label fixed width when using inline",name:"labelWidth",required:!1,type:{name:"string | number"}},showPropertyTree:{defaultValue:{value:"true"},description:"display object properties as tree",name:"showPropertyTree",required:!1,type:{name:"boolean"}},propertyScheme:{defaultValue:null,description:"properties to format as dates\n(default format applied to property name containing `date` | `time`)",name:"propertyScheme",required:!1,type:{name:"{ boolean?: string[]; date?: string[]; time?: string[] | undefined; number?: string[] | undefined; bytes?: string[] | undefined; percent?: string[] | undefined; phone?: string[] | undefined; } | undefined"}},copy:{defaultValue:null,description:"enable value copy",name:"copy",required:!1,type:{name:"true | string[]"}},filters:{defaultValue:null,description:"enable filter callbacks",name:"filters",required:!1,type:{name:"true | string[]"}},emptyMessage:{defaultValue:null,description:"message for empty json",name:"emptyMessage",required:!1,type:{name:"string"}},onFilter:{defaultValue:null,description:"on filter callback",name:"onFilter",required:!1,type:{name:"((key: string, value: AnyObject, negate: boolean) => void)"}},labeler:{defaultValue:null,description:"render function for custom label display",name:"labeler",required:!1,type:{name:"((key: string) => string)"}},formatter:{defaultValue:null,description:"render function for custom value display",name:"formatter",required:!1,type:{name:"((key?: string, value?: any) => string | Element) | undefined"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/json/JsonView.tsx#AxJsonView"]={docgenInfo:AxJsonView.__docgenInfo,name:"AxJsonView",path:"packages/data/src/json/JsonView.tsx#AxJsonView"})}catch(__react_docgen_typescript_loader_error){}const AxPagination=({page,ranges,totalPages,isMinimal,onPageChange})=>{const[start,mid,last]=ranges,pageBody=(0,react.useMemo)((()=>(0,jsx_runtime.jsxs)(react.Fragment,{children:[start?.map((pg=>(0,jsx_runtime.jsx)("button",{"data-active":page===pg,onClick:()=>onPageChange(pg),children:pg+1},pg))),mid&&(0,jsx_runtime.jsx)("span",{children:"..."}),mid?.map((pg=>(0,jsx_runtime.jsx)("button",{"data-active":page===pg,onClick:()=>onPageChange(pg),children:pg+1},pg))),last&&(0,jsx_runtime.jsx)("span",{children:"..."}),last?.map((pg=>(0,jsx_runtime.jsx)("button",{"data-active":page===pg,onClick:()=>onPageChange(pg),children:pg+1},pg)))]})),[start,mid,last,page]);return(0,jsx_runtime.jsxs)("div",{className:"ax-pagination",children:[(0,jsx_runtime.jsx)("button",{onClick:()=>onPageChange(0),"data-disabled":0===page,children:(0,jsx_runtime.jsx)(dist.Ng,{icon:appIcons.U.iconChevronLeft,rtlFlip:!0})}),(0,jsx_runtime.jsx)("button",{onClick:()=>onPageChange(page-1),"data-disabled":0===page,children:(0,jsx_runtime.jsx)(dist.Ng,{icon:appIcons.U.iconCaretLeft,rtlFlip:!0})}),!isMinimal&&pageBody,isMinimal&&(0,jsx_runtime.jsxs)("label",{children:[page+1,"/",totalPages]}),(0,jsx_runtime.jsx)("button",{onClick:()=>onPageChange(page+1),"data-disabled":page+1>=totalPages,children:(0,jsx_runtime.jsx)(dist.Ng,{icon:appIcons.U.iconCaretRight,rtlFlip:!0})}),(0,jsx_runtime.jsx)("button",{onClick:()=>onPageChange(totalPages-1),"data-disabled":page+1>=totalPages,children:(0,jsx_runtime.jsx)(dist.Ng,{icon:appIcons.U.iconChevronRight,rtlFlip:!0})})]})};try{AxPagination.displayName="AxPagination",AxPagination.__docgenInfo={description:"",displayName:"AxPagination",props:{page:{defaultValue:null,description:"",name:"page",required:!0,type:{name:"number"}},totalPages:{defaultValue:null,description:"",name:"totalPages",required:!0,type:{name:"number"}},ranges:{defaultValue:null,description:"",name:"ranges",required:!0,type:{name:"number[][]"}},isMinimal:{defaultValue:null,description:"",name:"isMinimal",required:!1,type:{name:"boolean"}},onPageChange:{defaultValue:null,description:"",name:"onPageChange",required:!0,type:{name:"(page: number) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/pagination/Pagination.tsx#AxPagination"]={docgenInfo:AxPagination.__docgenInfo,name:"AxPagination",path:"packages/data/src/pagination/Pagination.tsx#AxPagination"})}catch(__react_docgen_typescript_loader_error){}var form_dist=__webpack_require__("./packages/form/dist/index.js");const AxVirtualItem=(0,react.memo)((({index,children,isLast,updateSize,isSticky,...rest})=>{const itemRef=(0,react.useRef)(null);return(0,react.useLayoutEffect)((()=>{const child=itemRef.current?.firstElementChild;if(child){const ob=new ResizeObserver((()=>{null!=child&&updateSize(index,child.offsetWidth,child.offsetHeight)}));return ob.observe(child),()=>{ob.unobserve(child),ob.disconnect()}}}),[]),(0,jsx_runtime.jsx)("div",{...rest,ref:itemRef,"data-index":index,"data-sticky":isSticky,"data-last-child":isLast,className:"ax-virtual__item",children})}),utilities_dist.isEqual);AxVirtualItem.displayName="AxVirtualItem";try{AxVirtualItem.displayName="AxVirtualItem",AxVirtualItem.__docgenInfo={description:"***************** Timeline item ******************",displayName:"AxVirtualItem",props:{index:{defaultValue:null,description:"",name:"index",required:!0,type:{name:"number"}},isLast:{defaultValue:null,description:"",name:"isLast",required:!0,type:{name:"boolean"}},isSticky:{defaultValue:null,description:"",name:"isSticky",required:!1,type:{name:"boolean"}},updateSize:{defaultValue:null,description:"",name:"updateSize",required:!0,type:{name:"(index: number, width: number, height: number) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/virtual/Item.tsx#AxVirtualItem"]={docgenInfo:AxVirtualItem.__docgenInfo,name:"AxVirtualItem",path:"packages/data/src/virtual/Item.tsx#AxVirtualItem"})}catch(__react_docgen_typescript_loader_error){}var memoize_one_esm=__webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js");const createItemList=(0,memoize_one_esm.Z)((items=>items)),VirtualList=({items,children,fullWidth,padding="md",orientation="vertical",height=48,width=48,hideScroller,isLoading,onLoadMore,onScroll,isSticky,listRef})=>{const count=(0,react.useDeferredValue)(items.length),itemList=createItemList(items.map(((item,idx)=>({index:idx,data:item,isSticky:!0===isSticky?.(idx),isLast:idx+1===items.length})))),{scrollerRef,scrollSize,pageIndex,startIndex,endIndex,springSize,scrollActive,handleScroll,updateCache,scrollToItem,scrollActions}=(({orientation="vertical",height=64,width=64,count=0})=>{const scrollerRef=(0,react.useRef)(null),sizeCache=(0,react.useRef)([]),ignoreScrollChange=(0,react.useRef)(!1),[pageCount,setPageCount]=(0,react.useState)(0),[pageIndex,setPageIndex]=(0,react.useState)(0),[scrollSize,setScrollSize]=(0,react.useState)(0),[scrollOffset,setScrollOffset]=(0,react.useState)(0);(0,react.useEffect)((()=>{sizeCache.current=new Array(count).fill([width,height]).map(((h,i)=>[Math.max(h[0],sizeCache.current[i]?.[0]??width),Math.max(h[1],sizeCache.current[i]?.[1]??height)]))}),[count,height,width,orientation]),(0,react.useEffect)((()=>{let idx=0;for(let tot=0;idx<count&&(tot+=sizeCache.current[idx]["vertical"===orientation?1:0],!(tot>=scrollOffset));idx++);setPageIndex(idx)}),[count,orientation,scrollOffset]);const[startIndex,endIndex,springSize]=(0,react.useMemo)((()=>{const index=Math.max(0,pageIndex-pageCount);return[index,pageIndex+pageCount+pageCount,new Array(index).fill(0).reduce(((t,_,i)=>t+sizeCache.current[i]["vertical"===orientation?1:0]),0)]}),[pageCount,pageIndex,orientation]);(0,react.useEffect)((()=>{if(scrollerRef.current){const el=scrollerRef.current,size="vertical"===orientation?height:width,handler=()=>{const scrollerSize="vertical"===orientation?scrollerRef.current?.offsetHeight:scrollerRef.current?.offsetWidth;setPageCount(Math.max(10,Math.round(Math.max(1e3,scrollerSize??0)/size)))},ob=new ResizeObserver(handler);return handler(),ob.observe(el),()=>{ob.unobserve(el),ob.disconnect()}}}),[scrollerRef.current,orientation,height,width]);const updateCache=(0,react.useCallback)(((index,width,height)=>{const oldSize=sizeCache.current[index];oldSize&&(width!==oldSize[0]&&(sizeCache.current[index][0]=width),height!==oldSize[1]&&(sizeCache.current[index][1]=height),setScrollSize(sizeCache.current.reduce(((t,h,i)=>t+(h["vertical"===orientation?1:0]??0)),0)+64))}),[orientation]),scrollActive=(0,react.useMemo)((()=>{const{scrollTop=0,scrollLeft=0,scrollWidth=0,scrollHeight=0,offsetWidth=0,offsetHeight=0}=scrollerRef.current??{};if("vertical"===orientation){if(scrollHeight===offsetHeight)return 0;if(0===scrollTop)return 1;if(scrollTop>=scrollHeight-offsetHeight-64)return 2}if("horizontal"===orientation){if(scrollWidth===offsetWidth)return 0;if(0===Math.abs(scrollLeft))return 1;if(Math.abs(scrollLeft)>=scrollWidth-offsetWidth-64)return 2}return 3}),[count,orientation,scrollOffset,scrollSize]),handleScroll=(0,react.useCallback)((evt=>{const{scrollTop,scrollLeft,scrollHeight,scrollWidth,offsetWidth,offsetHeight}=evt.currentTarget;return ignoreScrollChange.current||setScrollOffset("vertical"===orientation?scrollTop:Math.abs(scrollLeft)),"vertical"===orientation&&+scrollTop+ +offsetHeight>=+scrollHeight||"horizontal"===orientation&&Math.abs(+scrollLeft)+ +offsetWidth>=+scrollWidth}),[orientation]),scrollToItem=(0,react.useCallback)((index=>{ignoreScrollChange.current=!0,setPageIndex(index),setTimeout((()=>{scrollerRef.current?.querySelector(`[data-index="${index}"]`)?.scrollIntoView({behavior:"instant",block:"start"}),setTimeout((()=>ignoreScrollChange.current=!1),10)}),100)}),[]),scrollActions=(0,react.useMemo)((()=>({first(){scrollerRef.current?.scrollTo({top:0,left:0,behavior:"instant"})},pgup(){scrollerRef.current?.scrollTo({top:(scrollerRef.current?.scrollTop??0)-scrollerRef.current?.offsetHeight??0,left:(scrollerRef.current?.scrollLeft??0)-scrollerRef.current?.offsetWidth??0,behavior:"smooth"})},pgdn(){scrollerRef.current?.scrollTo({top:(scrollerRef.current?.scrollTop??0)+scrollerRef.current?.offsetHeight??0,left:(scrollerRef.current?.scrollLeft??0)+scrollerRef.current?.offsetWidth??0,behavior:"smooth"})},last(){scrollerRef.current?.scrollTo({top:(scrollerRef.current?.scrollHeight??0)-(scrollerRef.current?.offsetHeight??0)-64,left:(scrollerRef.current?.scrollWidth??0)-(scrollerRef.current?.offsetWidth??0)-64,behavior:"instant"})}})),[orientation]);return{scrollerRef,pageIndex,startIndex,endIndex,springSize,scrollSize,scrollOffset,scrollActive,handleScroll,updateCache,scrollToItem,scrollActions}})({orientation,height,width,count}),scrollCallback=(0,react.useRef)((0,utilities_dist.debounce)((idx=>onScroll?.(idx))));(0,react.useEffect)((()=>{scrollCallback.current(pageIndex)}),[pageIndex]);const[stickiesStart,pagedList]=(0,react.useMemo)((()=>[itemList.slice(0,pageIndex).filter((item=>item.isSticky)),itemList.slice(startIndex,endIndex)]),[itemList,startIndex,endIndex]);return(0,react.useImperativeHandle)(listRef,(()=>({hilight(index){scrollerRef.current?.querySelector(".hilight")?.classList.remove("hilight"),scrollerRef.current?.querySelector(`[data-index="${index}"]`)?.classList.add("hilight"),setTimeout((()=>{scrollerRef.current?.querySelector(`[data-index="${index}"]`)?.scrollIntoView({behavior:"instant",block:"nearest"})}),100)},unhilight(){scrollerRef.current?.querySelector(".hilight")?.classList.remove("hilight")},scrollToItem(index){scrollToItem(index)}})),[]),(0,jsx_runtime.jsx)("div",{className:"ax-virtual-list",ref:scrollerRef,onScroll:evt=>handleScroll(evt)&&onLoadMore?.(),"data-padding":padding,"data-orientation":orientation,children:(0,jsx_runtime.jsxs)("div",{className:"ax-virtual__container",children:[(0,jsx_runtime.jsxs)("div",{className:"ax-virtual__scroller "+(fullWidth?"flex-1":""),style:"vertical"===orientation?{minHeight:scrollSize,minWidth:width}:{minWidth:scrollSize,minHeight:height},children:[(0,jsx_runtime.jsx)("div",{style:"vertical"===orientation?{height:springSize}:{width:springSize,display:"inline-block"}}),(0,jsx_runtime.jsx)("div",{className:"ax-virtual__sticky",children:stickiesStart.map((({index,data,isSticky,isLast})=>children({data,index,key:index,isLast,isSticky,updateSize:updateCache})))}),pagedList.map((({index,data,isSticky,isLast})=>children({data,index,isLast,isSticky,key:index,updateSize:updateCache}))),onLoadMore&&(0,jsx_runtime.jsx)("div",{className:"ax-virtual__placeholder",children:isLoading&&(0,jsx_runtime.jsx)(dist.Xr.Card,{showIcon:!0})})]}),!hideScroller&&(0,jsx_runtime.jsx)("div",{className:"ax-virtual__tools",children:(0,jsx_runtime.jsxs)(dist.oG.Group,{isVertical:"vertical"===orientation,variant:"flat",children:[(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",className:"flush","aria-label":"scroll to top",icon:appIcons.U.iconChevronUp,isDisabled:0==(2&scrollActive),onClick:()=>scrollActions.first()}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",className:"flush","aria-label":"scroll up",icon:appIcons.U.iconCaretUp,isDisabled:0==(2&scrollActive),onClick:()=>scrollActions.pgup()}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",className:"flush","aria-label":"scroll down",icon:appIcons.U.iconCaretDown,isDisabled:scrollActive%2==0,onClick:()=>scrollActions.pgdn()}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",className:"flush","aria-label":"scroll to bottom",icon:appIcons.U.iconChevronDown,isDisabled:scrollActive%2==0,onClick:()=>scrollActions.last()})]})})]})})};VirtualList.displayName="AxVirtualList";const AxVirtualList=(0,react.memo)(VirtualList);try{AxVirtualList.displayName="AxVirtualList",AxVirtualList.__docgenInfo={description:"",displayName:"AxVirtualList",props:{listRef:{defaultValue:null,description:"",name:"listRef",required:!1,type:{name:"Ref<VirtualListRef>"}},height:{defaultValue:{value:"48"},description:"",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:{value:"48"},description:"",name:"width",required:!1,type:{name:"number"}},fullWidth:{defaultValue:null,description:"",name:"fullWidth",required:!1,type:{name:"boolean"}},padding:{defaultValue:{value:"md"},description:"",name:"padding",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"sm"'},{value:'"md"'}]}},orientation:{defaultValue:{value:"vertical"},description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},items:{defaultValue:null,description:"data list",name:"items",required:!0,type:{name:"T[]"}},isLoading:{defaultValue:null,description:"loading state",name:"isLoading",required:!1,type:{name:"boolean"}},hideScroller:{defaultValue:null,description:"hide scroll buttons",name:"hideScroller",required:!1,type:{name:"boolean"}},onLoadMore:{defaultValue:null,description:"load more callback",name:"onLoadMore",required:!1,type:{name:"EmptyCallback"}},isSticky:{defaultValue:null,description:"",name:"isSticky",required:!1,type:{name:"((index: number) => boolean)"}},onScroll:{defaultValue:null,description:"",name:"onScroll",required:!1,type:{name:"((top: number) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/virtual/List.tsx#AxVirtualList"]={docgenInfo:AxVirtualList.__docgenInfo,name:"AxVirtualList",path:"packages/data/src/virtual/List.tsx#AxVirtualList"})}catch(__react_docgen_typescript_loader_error){}const TreeNode=(0,react.memo)((({style,isCheckable,isSelectable,checkLevel=0,onToggleCheck,onToggleExpand,nodesSelectable,onSelect,node,...props})=>{const{t}=(0,es.$G)("data"),BadgeEl=(0,useBadge.Q)(node.badge),borders=(0,react.useMemo)((()=>props.lines.map(((l,i)=>(0,jsx_runtime.jsx)("span",{className:"ax-tree__spacer","data-border":l},i)))),[props.lines]),placeholder=(0,react.useMemo)((()=>props.isEmpty?props.isError?(0,jsx_runtime.jsx)("div",{className:"ax-tree__label","data-error":"true",children:t("tree.error")}):props.isLoading?(0,jsx_runtime.jsxs)("div",{className:"ax-tree__label","data-empty":"true",children:[(0,jsx_runtime.jsx)(dist.Xr.Spinner,{className:"text-base"})," ",t("tree.loading")]}):(0,jsx_runtime.jsx)("div",{className:"ax-tree__label","data-empty":"true",children:t("tree.noItems")}):null),[props.isEmpty,props.isLoading]);return(0,jsx_runtime.jsxs)("div",{style,className:"ax-tree__node",children:[borders,!props.isLeaf&&(0,jsx_runtime.jsx)("div",{className:"ax-tree__spacer",onClick:onToggleExpand,children:(0,jsx_runtime.jsx)(dist.Ng,{icon:props.isOpen?node.iconOpen??appIcons.U.iconFolderOpen:node.iconClosed??appIcons.U.iconFolderClosed})}),placeholder,null==placeholder&&(0,jsx_runtime.jsxs)("div",{...node.props??{},className:`ax-tree__label ${node.labelClassName??""}`,onClick:()=>isCheckable?onToggleCheck(node.id):props.isLeaf||nodesSelectable?isSelectable&&onSelect(node.id):onToggleExpand(node.id),onDoubleClick:onToggleExpand,"data-selected":!isCheckable&&props.isSelected,"data-disabled":node.isDisabled,"data-child-selected":props.childSelected,children:[isCheckable&&props.level>=checkLevel&&(0,jsx_runtime.jsx)(dist.Ng,{icon:2===props.isChecked?appIcons.U.iconCheckboxInt:1===props.isChecked?appIcons.U.iconCheckboxOn:appIcons.U.iconCheckboxOff}),node.icon&&(0,jsx_runtime.jsx)(dist.Ng,{icon:node.icon??""}),(0,jsx_runtime.jsx)("div",{children:node.label}),BadgeEl]})]})}));TreeNode.displayName="AxTree.Node";try{TreeNode.displayName="AxTree.Node",TreeNode.__docgenInfo={description:"",displayName:"AxTree.Node",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/tree/Node.tsx#AxTree.Node"]={docgenInfo:AxTree.Node.__docgenInfo,name:"AxTree.Node",path:"packages/data/src/tree/Node.tsx#AxTree.Node"})}catch(__react_docgen_typescript_loader_error){}const TreeTools=(0,react.memo)((({title,onExpand,onCollapse,onCheckAll,onUncheckAll,isCheckable})=>{const{t}=(0,es.$G)("data");return(0,jsx_runtime.jsxs)("div",{className:"ax-tree__tools",children:[(0,jsx_runtime.jsx)("div",{className:"flex-1 self-center px-2 truncate",children:title}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",onClick:onExpand,icon:appIcons.U.iconExpandAll,tooltip:t("action.expandAll")}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",onClick:onCollapse,icon:appIcons.U.iconCollapseAll,tooltip:t("action.collapseAll")}),isCheckable&&(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(dist.qm,{vertical:!0,size:"xs"}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",onClick:onUncheckAll,icon:appIcons.U.iconCheckboxOff,tooltip:t("action.uncheckAll")}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",onClick:onCheckAll,icon:appIcons.U.iconCheckAll,tooltip:t("action.checkAll")})]})]})}));TreeTools.displayName="AxTree.Tools";try{TreeTools.displayName="AxTree.Tools",TreeTools.__docgenInfo={description:"",displayName:"AxTree.Tools",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/tree/Tools.tsx#AxTree.Tools"]={docgenInfo:AxTree.Tools.__docgenInfo,name:"AxTree.Tools",path:"packages/data/src/tree/Tools.tsx#AxTree.Tools"})}catch(__react_docgen_typescript_loader_error){}const sorter=(a,b)=>!!a.isLeaf!=!!b.isLeaf?a.isLeaf?1:-1:(0,utilities_dist.compareValues)()(a.label,b.label),refactorNode=({node:{children,...node},index=0,isLast=!1,parent="",parentQuery="",level=0,lines=[],sortable=!0,...rest})=>{const internalId=`${parent}.${index}`,query=`${parentQuery}~${node.label}`,innerChildren=sortable?children?.sort(sorter):children,newLines=[...lines,isLast?0:1];return{internalId,parent,node,level,query,...rest,lines:newLines,isLeaf:!!node.isLeaf,isSelected:!1,childSelected:!1,isOpen:!!node.isOpen,isChecked:0,children:innerChildren?.map(((child,idx)=>refactorNode({node:child,index:idx,lines:newLines,isLast:idx+1===innerChildren.length,parent:internalId,parentQuery:query,level:level+1,sortable})))}},createTreeMap=nodes=>{const map=new Map,makeMap=nodes=>{nodes.forEach((node=>{map.set(node.internalId,node),null!=node.children&&makeMap(node.children)}))};return makeMap(nodes),map},createIdMap=nodes=>{const map=new Map,makeMap=nodes=>{nodes.forEach((node=>{node.node.id&&map.set(node.node.id,node.internalId),null!=node.children&&makeMap(node.children)}))};return makeMap(nodes),map},createNodeList=(nodes,sortable)=>{const list=[];return nodes.forEach((node=>{!1!==node.isFiltered&&list.push(node),node.isOpen&&(null!=node.children&&node.children.length>0?list.push(...createNodeList(node.children,sortable)):void 0!==node.isFiltered||node.isLeaf||list.push(refactorNode({node:{isLeaf:!0},index:0,isLast:!0,isEmpty:!0,isLoading:node.isLoading,isError:node.isError,lines:node.lines,parent:node.internalId,level:node.level+1,sortable})))})),list},toggleProperty=(nodes,prop,value,checkChildren=!1)=>{nodes.forEach((node=>{prop in node&&(!checkChildren||checkChildren&&node.children?.length>0)&&(node[prop]=value),null!=node.children&&toggleProperty(node.children,prop,value,checkChildren)}))},getNodeById=(state,id)=>state.treeMap.get(state.idMap.get(id??"")??""),toggleExpand=(state,id,canLoad=!1,isSortable=!0,force)=>{const parent=getNodeById(state,id);if(parent){const index=state.items.indexOf(parent);parent.isOpen=force??!parent.isOpen,parent.isOpen?(0,utilities_dist.isNil)(parent.children)?(parent.isLoading=canLoad,state.items.splice(index+1,0,refactorNode({node:{isLeaf:!0},index:0,isLast:!0,isEmpty:!0,isLoading:canLoad,isError:parent.isError,lines:parent.lines,parent:parent.internalId,level:parent.level+1}))):state.items.splice(index+1,0,...createNodeList(parent.children,isSortable)):state.items=state.items.filter((item=>!(item.internalId!==parent.internalId&&item.internalId.startsWith(parent.internalId))))}return{...state}},AxTreePanel=(0,react.memo)((({className,data,title,actions,selected,nodesSelectable,isSortable=!0,isSearchable,isCheckable,isSelectable,checkLevel=0,onChange,onLoad,onSelect,treeRef:ref,...rest})=>{const listRef=(0,react.useRef)(null),panelRef=(0,react.useRef)(null),[,startTransition]=(0,react.useTransition)(),initState=(0,react.useCallback)(((data=[])=>{const treeData=(nodes=data,((sortable=isSortable)?nodes.sort(sorter):nodes).map(((node,index)=>refactorNode({node,index,isLast:index+1===nodes.length,sortable}))));var nodes,sortable;return{treeData,treeMap:createTreeMap(treeData),idMap:createIdMap(treeData),items:createNodeList(treeData,isSortable),autoScroll:!1}}),[]),fireCheckChange=(0,react.useCallback)((items=>{const checkList=items.map((node=>1===node.isChecked&&node.isLeaf?node.node.id:void 0)).filter(Boolean);onChange?.(checkList)}),[onChange]),reducer=(0,react.useCallback)(((state,action)=>{if(state.autoScroll=!1,"init"===action.type&&action.newState)return{...action.newState};if("toggleExpand"===action.type)return toggleExpand(state,action.id,!(null==onLoad),isSortable);if("open"===action.type)return toggleExpand(state,action.id,!(null==onLoad),isSortable,!0);if("toggleCheck"===action.type){const newState=((state,id)=>{const node=getNodeById(state,id);if(node){node.isChecked=0===node.isChecked?1:0,null!=node.children&&toggleProperty(node.children,"isChecked",node.isChecked);let parent=state.treeMap.get(node.parent??"");const parentCheck=parent?.children?.some((n=>n.isChecked!==node.isChecked))?2:node.isChecked;for(;null!=parent;)parent.isChecked=parentCheck,parent=state.treeMap.get(parent.parent??"")}return{...state}})(state,action.id);return startTransition((()=>fireCheckChange?.(Array.from(newState.treeMap.values())))),newState}if("loadItems"===action.type){const parent=getNodeById(state,action.id);if(parent){parent.isLoading=!1,parent.isError=!1;const index=state.items.indexOf(parent);((parent,children,sortable)=>{const list=sortable?children.sort(sorter):children;parent.children=list.map(((child,idx)=>refactorNode({node:child,index:idx,lines:parent.lines,isLast:idx+1===children.length,parent:parent.internalId,level:parent.level+1})))})(parent,action.items??[],isSortable),state.idMap=createIdMap(state.treeData),state.treeMap=createTreeMap(state.treeData),state.items.splice(index+1,1,...((parent,sortable)=>null!=parent.children&&parent.children?.length>0?createNodeList(parent.children,sortable):[refactorNode({node:{isLeaf:!0},index:0,isLast:!0,isEmpty:!0,isLoading:parent.isLoading,isError:parent.isError,lines:parent.lines,parent:parent.internalId,level:parent.level+1,sortable})])(parent,isSortable))}}if("loadError"===action.type){const parent=getNodeById(state,action.id);if(parent){const index=state.items.indexOf(parent),item=state.items[index+1];item&&(item.isLoading=!1,item.isError=!0),parent.isLoading=!1,parent.isError=!0}}return"expandAll"===action.type&&(toggleProperty(state.treeData,"isOpen",!0,!0),state.items=createNodeList(state.treeData,isSortable)),"collapseAll"===action.type&&(toggleProperty(state.treeData,"isOpen",!1),state.items=createNodeList(state.treeData,isSortable)),"checkAll"===action.type&&(toggleProperty(state.treeData,"isChecked",1),setTimeout((()=>startTransition((()=>fireCheckChange?.(Array.from(state.treeMap.values()))))),100)),"uncheckAll"===action.type&&(toggleProperty(state.treeData,"isChecked",0),setTimeout((()=>startTransition((()=>fireCheckChange?.(Array.from(state.treeMap.values()))))),100)),"select"===action.type&&(state.autoScroll=!0,((state,id,isSortable=!0,scroll=!1)=>{const node=getNodeById(state,id);if(node){Array.from(state.treeMap.values()).forEach((n=>{n.isSelected=!1,n.childSelected=!1})),node.isSelected=!0;let parent=state.treeMap.get(node.parent??"");for(;null!=parent;)parent.isOpen=!0,parent.childSelected=!0,parent=state.treeMap.get(parent.parent??"");return state.items=createNodeList(state.treeData,isSortable),state.autoScroll=scroll,!node.isLeaf}})(state,action.id,isSortable,action.propChange),!action.propChange&&setTimeout((()=>startTransition((()=>{action.id&&onSelect?.(action.id)}))),100)),"search"===action.type&&(Array.from(state.treeMap.values()).forEach((item=>{if(item.isFiltered=action.search?(0,utilities_dist.matchString)(item.query,action.search):void 0,item.parent&&item.isFiltered){let parent=state.treeMap.get(item.parent);for(;null!=parent;)!action.search&&(parent.isOpen=!1),parent.isFiltered=item.isFiltered,parent=state.treeMap.get(parent.parent??"")}})),state.autoScroll=!0,state.items=createNodeList(state.treeData,isSortable)),{...state}}),[onLoad,onSelect,fireCheckChange,isSortable]),[state,dispatch]=(0,react.useReducer)(reducer,{treeData:[],treeMap:new Map,idMap:new Map,items:[],autoScroll:!1},(()=>initState()));(0,react.useEffect)((()=>{dispatch({type:"init",newState:initState(data)})}),[data]);const itemHeight=(0,react.useCallback)((el=>{const h=null!=el?1.5*parseInt(getComputedStyle(el).fontSize??"16"):0;return isNaN(h)?0:h}),[state.items]);(0,react.useEffect)((()=>{selected&&dispatch({type:"select",id:selected,propChange:!0})}),[data,selected]);const loadNodes=(0,react.useCallback)((id=>{startTransition((()=>{if(id){const ret=onLoad?.(id)??[];Promise.resolve(ret).then((resp=>{dispatch({type:"loadItems",id,items:resp??[]})})).catch((()=>dispatch({type:"loadError",id})))}}))}),[onLoad]),handleExpand=(0,react.useCallback)((index=>{const parent=state.items[index];dispatch({type:"toggleExpand",id:parent.node.id}),!parent.isOpen&&(0,utilities_dist.isNil)(parent.children)&&loadNodes(parent.node.id)}),[state,loadNodes]);return(0,react.useImperativeHandle)(ref,(()=>({select:id=>dispatch({type:"select",id,propChange:!0}),open:id=>{dispatch({type:"open",id,propChange:!0});const parent=state.treeMap.get(state.idMap.get(id)??"");parent&&(0,utilities_dist.isNil)(parent?.children)&&loadNodes(parent.node.id)}})),[state,loadNodes]),(0,react.useLayoutEffect)((()=>{state.autoScroll&&startTransition((()=>{const item=Array.from(state.treeMap.values()).find((n=>n.isSelected));if(null!=item){const focusIndex=state.items.indexOf(item);focusIndex>-1&&listRef.current?.scrollToItem(focusIndex)}}))}),[state]),(0,jsx_runtime.jsxs)("div",{...rest,ref:panelRef,className:`ax-tree__panel ${className??""}`,children:[(0,jsx_runtime.jsx)(TreeTools,{title,isCheckable,onExpand:()=>dispatch({type:"expandAll"}),onCollapse:()=>dispatch({type:"collapseAll"}),onCheckAll:()=>dispatch({type:"checkAll"}),onUncheckAll:()=>dispatch({type:"uncheckAll"})}),isSearchable&&(0,jsx_runtime.jsx)(form_dist.z.Search,{isPlain:!0,onChange:search=>dispatch({type:"search",search}),className:"ax-tree__search"}),(0,jsx_runtime.jsx)(AxVirtualList,{fullWidth:!0,hideScroller:!0,listRef,items:state.items,height:itemHeight(panelRef.current),children:({data,...props})=>(0,jsx_runtime.jsx)(AxVirtualItem,{...props,children:(0,jsx_runtime.jsx)(TreeNode,{...data,checkLevel,isCheckable,isSelectable,nodesSelectable,onSelect:id=>dispatch({type:"select",id}),onToggleCheck:id=>dispatch({type:"toggleCheck",id}),onToggleExpand:()=>handleExpand(props.index)})})})]})}));AxTreePanel.displayName="AxTree.Panel";try{AxTreePanel.displayName="AxTree.Panel",AxTreePanel.__docgenInfo={description:"",displayName:"AxTree.Panel",props:{title:{defaultValue:null,description:"",name:"title",required:!1,type:{name:"ReactNode"}},data:{defaultValue:null,description:"tree data",name:"data",required:!0,type:{name:"TreeNodeType[]"}},selected:{defaultValue:null,description:"selected node id",name:"selected",required:!1,type:{name:"string"}},nodesSelectable:{defaultValue:null,description:"enable select for nodes",name:"nodesSelectable",required:!1,type:{name:"boolean"}},isSearchable:{defaultValue:null,description:"show search bar",name:"isSearchable",required:!1,type:{name:"boolean"}},isSortable:{defaultValue:null,description:"enable sorting of nodes",name:"isSortable",required:!1,type:{name:"boolean"}},isSelectable:{defaultValue:null,description:"enable selectable items",name:"isSelectable",required:!1,type:{name:"boolean"}},isCheckable:{defaultValue:null,description:"enable checkboxes for nodes",name:"isCheckable",required:!1,type:{name:"boolean"}},checkLevel:{defaultValue:null,description:"enable checkbox for level n and up",name:"checkLevel",required:!1,type:{name:"number"}},actions:{defaultValue:null,description:"addition toolbar actions",name:"actions",required:!1,type:{name:"false | Element[]"}},treeRef:{defaultValue:null,description:"",name:"treeRef",required:!1,type:{name:"Ref<TreeRef>"}},onLoad:{defaultValue:null,description:"callback for lazy loading tree items",name:"onLoad",required:!1,type:{name:"((id: string) => TreeNodeType[] | Promise<TreeNodeType[]>) | undefined"}},onSelect:{defaultValue:null,description:"callback on selection of tree node",name:"onSelect",required:!1,type:{name:"((id: string) => void)"}},onChange:{defaultValue:null,description:"callback on change of checked list",name:"onChange",required:!1,type:{name:"((checked: string[]) => void)"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/tree/TreePanel.tsx#AxTree.Panel"]={docgenInfo:AxTree.Panel.__docgenInfo,name:"AxTree.Panel",path:"packages/data/src/tree/TreePanel.tsx#AxTree.Panel"})}catch(__react_docgen_typescript_loader_error){}const Gallery_createItemList=(0,memoize_one_esm.Z)((items=>items)),VirtualGallery=({items,children,padding="md",height=48,width=64,columns,hideScroller,isLoading,onLoadMore,onScroll,listRef})=>{const count=(0,react.useDeferredValue)(items.length),itemList=Gallery_createItemList(items.map(((item,idx)=>({index:idx,data:item,isLast:idx+1===items.length})))),{columnCount,scrollerRef,scrollSize,pageIndex,startIndex,endIndex,springSize,scrollActive,handleScroll,updateCache,scrollToItem,scrollActions}=(({columns=0,height=64,width=64,count=0})=>{const scrollerRef=(0,react.useRef)(null),sizeCache=(0,react.useRef)([]),rowsizeCache=(0,react.useRef)([]),ignoreScrollChange=(0,react.useRef)(!1),[pageCount,setPageCount]=(0,react.useState)(0),[pageIndex,setPageIndex]=(0,react.useState)(0),[scrollSize,setScrollSize]=(0,react.useState)(0),[columnCount,setColumnCount]=(0,react.useState)(1),[scrollOffset,setScrollOffset]=(0,react.useState)(0);(0,react.useEffect)((()=>{sizeCache.current=new Array(count).fill([width,height]).map(((h,i)=>[Math.max(h[0],sizeCache.current[i]?.[0]??width),Math.max(h[1],sizeCache.current[i]?.[1]??height)])),rowsizeCache.current=new Array(Math.ceil(count/columnCount)).fill(height).map(((h,i)=>Math.max(h,...sizeCache.current.slice(i*columnCount,i*columnCount+columnCount).map((s=>s?.[1])).filter(Boolean))))}),[count,columnCount,height,width]),(0,react.useEffect)((()=>{let idx=0;for(let tot=0;idx<rowsizeCache.current.length&&(tot+=rowsizeCache.current[idx]+8,!(tot>=scrollOffset));idx++);setPageIndex(idx)}),[count,columnCount,scrollOffset]);const[startIndex,endIndex,springSize]=(0,react.useMemo)((()=>{const index=Math.max(0,pageIndex-pageCount);return[index*columnCount,(pageIndex+pageCount+pageCount)*columnCount,new Array(index).fill(0).reduce(((t,_,i)=>t+rowsizeCache.current[i]+8),0)]}),[pageCount,columnCount,pageIndex]);(0,react.useEffect)((()=>{if(scrollerRef.current){const el=scrollerRef.current,handler=()=>{setPageCount(Math.max(10,Math.round(Math.max(1e3,el?.offsetHeight??0)/height))),setColumnCount(columns||Math.max(1,Math.floor(((el?.offsetWidth??800)-32)/(width+16))))},ob=new ResizeObserver(handler);return handler(),ob.observe(el),()=>{ob.unobserve(el),ob.disconnect()}}}),[scrollerRef.current,columns,count,height,width]);const updateCache=(0,react.useCallback)(((index,width,height)=>{const oldSize=sizeCache.current[index];oldSize&&(width!==oldSize[0]&&(sizeCache.current[index][0]=width),height!==oldSize[1]&&(sizeCache.current[index][1]=height),rowsizeCache.current=new Array(Math.ceil(count/columnCount)).fill(height).map(((h,i)=>Math.max(h,...sizeCache.current.slice(i*columnCount,i*columnCount+columnCount).map((s=>s?.[1])).filter(Boolean)))),setScrollSize(rowsizeCache.current.reduce(((t,h)=>t+h+8),0)+64))}),[count,columnCount]),scrollActive=(0,react.useMemo)((()=>{const{scrollTop=0,scrollHeight=0,offsetHeight=0}=scrollerRef.current??{};return scrollSize===offsetHeight?0:0===scrollTop?1:scrollTop>=scrollHeight-offsetHeight-64?2:3}),[count,scrollOffset,scrollSize]),handleScroll=(0,react.useCallback)((evt=>{const{scrollTop,scrollHeight,offsetHeight}=evt.currentTarget;return ignoreScrollChange.current||setScrollOffset(scrollTop),+scrollTop+ +offsetHeight>=+scrollHeight}),[]),scrollToItem=(0,react.useCallback)((index=>{ignoreScrollChange.current=!0,setPageIndex(index),setTimeout((()=>{scrollerRef.current?.querySelector(`[data-index="${index*columnCount}"]`)?.scrollIntoView({behavior:"instant",block:"start"}),setTimeout((()=>ignoreScrollChange.current=!1),10)}),100)}),[columnCount]),scrollActions=(0,react.useMemo)((()=>({first(){scrollerRef.current?.scrollTo({top:0,behavior:"instant"})},pgup(){scrollerRef.current?.scrollTo({top:(scrollerRef.current?.scrollTop??0)-scrollerRef.current?.offsetHeight??0,behavior:"smooth"})},pgdn(){scrollerRef.current?.scrollTo({top:(scrollerRef.current?.scrollTop??0)+scrollerRef.current?.offsetHeight??0,behavior:"smooth"})},last(){scrollerRef.current?.scrollTo({top:(scrollerRef.current?.scrollHeight??0)-(scrollerRef.current?.offsetHeight??0)-64,behavior:"instant"})}})),[]);return{columnCount,scrollerRef,pageIndex,startIndex,endIndex,springSize,scrollSize,scrollOffset,scrollActive,handleScroll,updateCache,scrollToItem,scrollActions}})({columns,height,width,count}),scrollCallback=(0,react.useRef)((0,utilities_dist.debounce)((idx=>onScroll?.(idx))));(0,react.useEffect)((()=>{scrollCallback.current(pageIndex)}),[pageIndex]);const pagedList=(0,react.useMemo)((()=>itemList.slice(startIndex,endIndex)),[itemList,startIndex,endIndex]);return(0,react.useImperativeHandle)(listRef,(()=>({hilight(index){scrollerRef.current?.querySelector(".hilight")?.classList.remove("hilight"),scrollerRef.current?.querySelector(`[data-index="${index}"]`)?.classList.add("hilight"),setTimeout((()=>{scrollerRef.current?.querySelector(`[data-index="${index}"]`)?.scrollIntoView({behavior:"instant",block:"nearest"})}),100)},unhilight(){scrollerRef.current?.querySelector(".hilight")?.classList.remove("hilight")},scrollToItem(index){scrollToItem(index)}})),[scrollToItem]),(0,jsx_runtime.jsx)("div",{className:"ax-virtual-list",ref:scrollerRef,onScroll:evt=>handleScroll(evt)&&onLoadMore?.(),"data-padding":padding,"data-orientation":"vertical",children:(0,jsx_runtime.jsxs)("div",{className:"ax-virtual__container",children:[(0,jsx_runtime.jsxs)("div",{className:"ax-virtual__scroller",style:{minHeight:scrollSize},children:[(0,jsx_runtime.jsx)("div",{style:{height:springSize}}),(0,jsx_runtime.jsx)("div",{className:"ax-virtual__gallery",style:{gridTemplateColumns:`repeat(${columnCount}, ${width}px)`,maxWidth:columns?void 0:(width+8)*columnCount},children:pagedList.map((({index,data,isLast})=>children({data,index,isLast,key:index,updateSize:updateCache})))}),onLoadMore&&(0,jsx_runtime.jsx)("div",{className:"ax-virtual__placeholder",children:isLoading&&(0,jsx_runtime.jsx)(dist.Xr.Card,{showIcon:!0})})]}),!hideScroller&&(0,jsx_runtime.jsx)("div",{className:"ax-virtual__tools",children:(0,jsx_runtime.jsxs)(dist.oG.Group,{isVertical:!0,variant:"flat",children:[(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",className:"flush","aria-label":"scroll to top",icon:appIcons.U.iconChevronUp,isDisabled:0==(2&scrollActive),onClick:()=>scrollActions.first()}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",className:"flush","aria-label":"scroll up",icon:appIcons.U.iconCaretUp,isDisabled:0==(2&scrollActive),onClick:()=>scrollActions.pgup()}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",className:"flush","aria-label":"scroll down",icon:appIcons.U.iconCaretDown,isDisabled:scrollActive%2==0,onClick:()=>scrollActions.pgdn()}),(0,jsx_runtime.jsx)(dist.oG,{size:"sm",variant:"link",className:"flush","aria-label":"scroll to bottom",icon:appIcons.U.iconChevronDown,isDisabled:scrollActive%2==0,onClick:()=>scrollActions.last()})]})})]})})};VirtualGallery.displayName="AxVirtualGallery";const AxVirtualGallery=(0,react.memo)(VirtualGallery);try{AxVirtualGallery.displayName="AxVirtualGallery",AxVirtualGallery.__docgenInfo={description:"",displayName:"AxVirtualGallery",props:{listRef:{defaultValue:null,description:"",name:"listRef",required:!1,type:{name:"Ref<VirtualGalleryRef>"}},height:{defaultValue:{value:"48"},description:"",name:"height",required:!1,type:{name:"number"}},width:{defaultValue:{value:"64"},description:"",name:"width",required:!1,type:{name:"number"}},columns:{defaultValue:null,description:"",name:"columns",required:!1,type:{name:"number"}},padding:{defaultValue:{value:"md"},description:"",name:"padding",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"sm"'},{value:'"md"'}]}},items:{defaultValue:null,description:"data list",name:"items",required:!0,type:{name:"T[]"}},isLoading:{defaultValue:null,description:"loading state",name:"isLoading",required:!1,type:{name:"boolean"}},hideScroller:{defaultValue:null,description:"hide scroll buttons",name:"hideScroller",required:!1,type:{name:"boolean"}},onLoadMore:{defaultValue:null,description:"load more callback",name:"onLoadMore",required:!1,type:{name:"EmptyCallback"}},onScroll:{defaultValue:null,description:"",name:"onScroll",required:!1,type:{name:"((top: number) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/data/src/virtual/Gallery.tsx#AxVirtualGallery"]={docgenInfo:AxVirtualGallery.__docgenInfo,name:"AxVirtualGallery",path:"packages/data/src/virtual/Gallery.tsx#AxVirtualGallery"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/memoize-one/dist/memoize-one.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>memoizeOne});var safeIsNaN=Number.isNaN||function ponyfill(value){return"number"==typeof value&&value!=value};function areInputsEqual(newInputs,lastInputs){if(newInputs.length!==lastInputs.length)return!1;for(var i=0;i<newInputs.length;i++)if(first=newInputs[i],second=lastInputs[i],!(first===second||safeIsNaN(first)&&safeIsNaN(second)))return!1;var first,second;return!0}function memoizeOne(resultFn,isEqual){void 0===isEqual&&(isEqual=areInputsEqual);var cache=null;function memoized(){for(var newArgs=[],_i=0;_i<arguments.length;_i++)newArgs[_i]=arguments[_i];if(cache&&cache.lastThis===this&&isEqual(newArgs,cache.lastArgs))return cache.lastResult;var lastResult=resultFn.apply(this,newArgs);return cache={lastResult,lastArgs:newArgs,lastThis:this},lastResult}return memoized.clear=function clear(){cache=null},memoized}}}]);
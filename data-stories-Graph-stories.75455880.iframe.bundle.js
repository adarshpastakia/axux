"use strict";(self.webpackChunkaxux=self.webpackChunkaxux||[]).push([[52600],{"./packages/data/stories/Graph.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Graph_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),src=__webpack_require__("./packages/data/src/index.ts"),dist=__webpack_require__("./packages/core/dist/index.js"),esm=__webpack_require__("./node_modules/@faker-js/faker/dist/esm/index.mjs"),mdi=__webpack_require__("./node_modules/@mdi/js/mdi.js"),react=__webpack_require__("./node_modules/react/index.js");const graph_namespaceObject=JSON.parse('{"nodes":[{"id":"node_1","data":{"nodeType":"node-a","label":"Node 1 with a very long label to display on the graph camvas","isImportant":true,"colorMap":["#22c55e","#8b5cf6","#ec4899","#ec4899","#eab308"],"path":"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z"}},{"id":"node_2","data":{"nodeType":"node-b","label":"Node 2","color":"#7e22ce","path":"M12,3C16.97,3 21,6.58 21,11C21,15.42 15,21 12,21C9,21 3,15.42 3,11C3,6.58 7.03,3 12,3M10.31,10.93C9.29,9.29 7.47,8.58 6.25,9.34C5.03,10.1 4.87,12.05 5.89,13.69C6.92,15.33 8.74,16.04 9.96,15.28C11.18,14.5 11.33,12.57 10.31,10.93M13.69,10.93C12.67,12.57 12.82,14.5 14.04,15.28C15.26,16.04 17.08,15.33 18.11,13.69C19.13,12.05 18.97,10.1 17.75,9.34C16.53,8.58 14.71,9.29 13.69,10.93M12,17.75C10,17.75 9.5,17 9.5,17C9.5,17.03 10,19 12,19C14,19 14.5,17 14.5,17C14.5,17 14,17.75 12,17.75Z"}},{"id":"node_3","data":{"nodeType":"node-a","label":"Node 3","parentId":"combo-2","badges":[{"position":"topRight","text":"99"}]}},{"id":"node_4","data":{"nodeType":"node-c","parentId":"combo-2","label":"Node 4"}},{"id":"node_5","data":{"nodeType":"node-c","parentId":"combo-1","label":"Node 5"}},{"id":"node_6","data":{"nodeType":"node-c","parentId":"combo-1","label":"Node 6"}},{"id":"node_7","data":{"nodeType":"node-c","parentId":"combo-1","label":"Node 7"}}],"edges":[{"id":"1-2.1","source":"node_1","target":"node_2","data":{"edgeType":"edge-a"}},{"id":"1-2.2","source":"node_1","target":"node_2","data":{"edgeType":"edge-b"}},{"id":"1-2.3","source":"node_1","target":"node_2","data":{"edgeType":"edge-c"}},{"id":"1-3","source":"node_1","target":"node_3","data":{"edgeType":"edge-a"}},{"id":"1-4","source":"node_3","target":"node_4","data":{"edgeType":"edge-b"}},{"id":"1-5","source":"node_3","target":"node_5","data":{"edgeType":"edge-a"}},{"id":"2-6","source":"node_3","target":"node_6","data":{"edgeType":"edge-c"}},{"id":"2-7","source":"node_3","target":"node_7","data":{"edgeType":"edge-c"}}],"combos":[{"id":"combo-1","data":{"nodeType":"node-a","label":"Combo group","isImportant":true,"iconPath":"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z"}},{"id":"combo-2","data":{"label":"Manual group","isImportant":true,"isManualGroup":true,"iconPath":"M19,20H4C2.89,20 2,19.1 2,18V6C2,4.89 2.89,4 4,4H10L12,6H19A2,2 0 0,1 21,8H21L4,8V18L6.14,10H23.21L20.93,18.5C20.7,19.37 19.92,20 19,20Z"}}]}'),Graph_stories={component:src.eQ,title:"@data/Graph",tags:[],parameters:{layout:"fullscreen",controls:{exclude:"data"}}},makeNode=()=>{const node={nodeType:esm.Jb.helpers.arrayElement(["node-a","node-b","node-c","node-d"]),cluster:esm.Jb.helpers.arrayElement(["node-a","node-b","node-c","node-d"]),label:esm.Jb.company.name(),colorMap:new Array(esm.Jb.number.int({min:1,max:9})).fill(0).map((()=>esm.Jb.color.rgb()))};return"1"===esm.Jb.number.binary()?node.avatar=esm.Jb.image.url():node.path=esm.Jb.helpers.arrayElement([mdi.Gbn,mdi.ggm,mdi.pcz,mdi.Neq,mdi.KiL,mdi.Rd0,mdi.vmQ]),node},Example={render:args=>{const[data,setData]=(0,react.useState)();return(0,jsx_runtime.jsx)("div",{className:"h-full min-h-[600px] grid overflow-hidden",children:(0,jsx_runtime.jsx)("div",{className:"w-full h-full ax-section grid-area-[unset]",children:(0,jsx_runtime.jsxs)(dist.BX,{children:[(0,jsx_runtime.jsxs)(dist.Z8,{className:"gap-2 px-2 py-1",children:[(0,jsx_runtime.jsx)(dist.MR,{onClick:()=>setData(graph_namespaceObject),children:"Simple Graph"}),(0,jsx_runtime.jsx)(dist.MR,{onClick:()=>setData({nodes:[{id:"node-0",data:{label:"Central Node",nodeType:"node-center"}},...new Array(18).fill(0).map(((_,idx)=>({id:`node-${idx+1}`,data:makeNode()})))],edges:new Array(18).fill(0).map(((_,idx)=>({id:`edge-${idx+1}`,source:"node-0",target:`node-${idx+1}`,data:{label:esm.Jb.company.buzzVerb(),dashed:"1"===esm.Jb.number.binary(),edgeType:esm.Jb.helpers.arrayElement(["edge-a","edge-b","edge-c","edge-d"])}})))}),children:"Circular Graph"}),(0,jsx_runtime.jsx)(dist.MR,{onClick:()=>setTimeout((()=>setData(((count=100)=>({nodes:new Array(count).fill(0).map(((_,idx)=>({id:`node-${idx+1}`,data:makeNode()}))),edges:new Array(2*count).fill(0).map(((_,idx)=>({id:`edge-${idx+1}`,source:`node-${esm.Jb.number.int({min:1,max:count})}`,target:`node-${esm.Jb.number.int({min:1,max:count})}`,data:{dashed:"1"===esm.Jb.number.binary(),edgeType:esm.Jb.helpers.arrayElement(["edge-a","edge-b","edge-c","edge-d"])}})))}))())),100),children:"Large Graph"})]}),(0,jsx_runtime.jsx)(src.eQ,{...args,data,onNodeExpand:nodes=>Promise.resolve((list=>{const data={nodes:[],edges:[]};return list.forEach((({id})=>{const newNodes=new Array(10).fill(0).map(((_,idx)=>({id:`${id}--node-${esm.Jb.commerce.product()}`,data:makeNode()})));data.edges.push(...newNodes.map((node=>({id:`${id}--edge-${node.id}`,source:id,target:node.id,data:{dashed:"1"===esm.Jb.number.binary(),edgeType:esm.Jb.helpers.arrayElement(["edge-a","edge-b","edge-c","edge-d"])}})))),data.nodes.push(...newNodes)})),data})(nodes)),children:(0,jsx_runtime.jsxs)(src.eQ.Toolbar,{children:[(0,jsx_runtime.jsx)(src.eQ.ActionZoom,{}),(0,jsx_runtime.jsxs)(src.eQ.ActionGroup,{children:[(0,jsx_runtime.jsx)(src.eQ.ActionBrush,{}),(0,jsx_runtime.jsx)(src.eQ.ActionHilight,{}),(0,jsx_runtime.jsx)(src.eQ.ActionExpand,{}),(0,jsx_runtime.jsx)(src.eQ.ActionDelete,{}),(0,jsx_runtime.jsx)(src.eQ.ActionClear,{})]}),(0,jsx_runtime.jsx)(src.eQ.ActionLayout,{})]})})]})})})},args:{defaultLayout:"auto",styleMap:{"node-a":{color:"#d946ef",iconPath:mdi.Gbn},"node-b":{color:"#6366f1",iconPath:mdi.Gbn},"node-c":{color:"#4d7c0f",iconPath:mdi.Gbn},"edge-a":{color:"#059669",iconPath:mdi.LGo},"edge-b":{color:"#2563eb",iconPath:mdi.vmQ},"edge-c":{color:"#65a30d",iconPath:mdi.ZJV},defaultNode:{color:"#94a3b8",iconPath:mdi.PLg},defaultEdge:{color:"#6b7280",iconPath:mdi.PTV}},onContextMenu:({type})=>[[{id:"detail",label:"View detail",handler:()=>{}}]],renderTooltip:({item,itemType,style})=>(0,jsx_runtime.jsxs)("div",{className:"bg-component rounded border-2 p-2 max-w-md min-w-64",style:{borderColor:style?.color},children:[(0,jsx_runtime.jsxs)("div",{className:"flex gap-2 items-center",children:[(item.data?.avatar||style?.iconPath)&&(0,jsx_runtime.jsx)("div",{className:"rounded-full text-6xl p-2 leading-none overflow-hidden text-white",style:{backgroundColor:style?.color},children:(0,jsx_runtime.jsx)(dist.T3,{icon:item.data?.avatar??style?.iconPath})}),(0,jsx_runtime.jsxs)("div",{className:"flex-1",children:[(0,jsx_runtime.jsx)("div",{className:"font-medium",children:item.data?.label}),(0,jsx_runtime.jsx)("div",{className:"text-sm text-muted",children:itemType})]})]}),(0,jsx_runtime.jsx)(dist.nZ,{size:"xs"}),item.source&&(0,jsx_runtime.jsxs)("div",{className:"flex gap-2 items-center mb-1",children:[(item.source.data?.avatar||item.source.style?.iconPath)&&(0,jsx_runtime.jsx)("div",{className:"rounded-full text-lg p-1 leading-none overflow-hidden text-white",style:{backgroundColor:item.source.style?.color},children:(0,jsx_runtime.jsx)(dist.T3,{icon:item.source.data?.avatar??item.source.style?.iconPath})}),(0,jsx_runtime.jsx)("div",{className:"flex-1",children:(0,jsx_runtime.jsx)("div",{className:"font-medium",children:item.source.data?.label})})]}),item.target&&(0,jsx_runtime.jsxs)("div",{className:"flex gap-2 items-center",children:[(item.target.data?.avatar||item.target.style?.iconPath)&&(0,jsx_runtime.jsx)("div",{className:"rounded-full text-lg p-1 leading-none overflow-hidden text-white",style:{backgroundColor:item.target.style?.color},children:(0,jsx_runtime.jsx)(dist.T3,{icon:item.target.data?.avatar??item.target.style?.iconPath})}),(0,jsx_runtime.jsx)("div",{className:"flex-1",children:(0,jsx_runtime.jsx)("div",{className:"font-medium",children:item.target.data?.label})})]})]})}};Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const [data, setData] = useState<GraphData>();\n    return <div className="h-full min-h-[600px] grid overflow-hidden">\n        <div className="w-full h-full ax-section grid-area-[unset]">\n          <AxSection>\n            <AxHeader className="gap-2 px-2 py-1">\n              <AxButton onClick={() => setData(graphJson)}>\n                Simple Graph\n              </AxButton>\n              <AxButton onClick={() => setData(circularData())}>\n                Circular Graph\n              </AxButton>\n              <AxButton onClick={() => setTimeout(() => setData(largeGraph()), 100)}>\n                Large Graph\n              </AxButton>\n            </AxHeader>\n            <AxGraph {...args} data={data} onNodeExpand={nodes => Promise.resolve(loadMore(nodes))}>\n              <AxGraph.Toolbar>\n                <AxGraph.ActionZoom />\n                <AxGraph.ActionGroup>\n                  <AxGraph.ActionBrush />\n                  <AxGraph.ActionHilight />\n                  <AxGraph.ActionExpand />\n                  <AxGraph.ActionDelete />\n                  <AxGraph.ActionClear />\n                </AxGraph.ActionGroup>\n                <AxGraph.ActionLayout />\n              </AxGraph.Toolbar>\n            </AxGraph>\n          </AxSection>\n        </div>\n      </div>;\n  },\n  args: {\n    defaultLayout: "auto",\n    styleMap: {\n      "node-a": {\n        color: "#d946ef",\n        iconPath: mdiAccount\n      },\n      "node-b": {\n        color: "#6366f1",\n        iconPath: mdiAccount\n      },\n      "node-c": {\n        color: "#4d7c0f",\n        iconPath: mdiAccount\n      },\n      "edge-a": {\n        color: "#059669",\n        iconPath: mdiBus\n      },\n      "edge-b": {\n        color: "#2563eb",\n        iconPath: mdiCar\n      },\n      "edge-c": {\n        color: "#65a30d",\n        iconPath: mdiPlaneTrain\n      },\n      defaultNode: {\n        color: "#94a3b8",\n        iconPath: mdiHelpBox\n      },\n      defaultEdge: {\n        color: "#6b7280",\n        iconPath: mdiRoutes\n      }\n    },\n    onContextMenu({\n      type\n    }) {\n      return [[{\n        id: "detail",\n        label: "View detail",\n        handler: () => undefined\n      }]];\n    },\n    renderTooltip({\n      item,\n      itemType,\n      style\n    }) {\n      return <div className="bg-component rounded border-2 p-2 max-w-md min-w-64" style={{\n        borderColor: style?.color\n      }}>\n          <div className="flex gap-2 items-center">\n            {(item.data?.avatar || style?.iconPath) && <div className="rounded-full text-6xl p-2 leading-none overflow-hidden text-white" style={{\n            backgroundColor: style?.color\n          }}>\n                <AxIcon icon={item.data?.avatar ?? style?.iconPath} />\n              </div>}\n            <div className="flex-1">\n              <div className="font-medium">{item.data?.label}</div>\n              <div className="text-sm text-muted">{itemType}</div>\n            </div>\n          </div>\n          <AxDivider size="xs" />\n          {item.source && <div className="flex gap-2 items-center mb-1">\n              {(item.source.data?.avatar || item.source.style?.iconPath) && <div className="rounded-full text-lg p-1 leading-none overflow-hidden text-white" style={{\n            backgroundColor: item.source.style?.color\n          }}>\n                  <AxIcon icon={item.source.data?.avatar ?? item.source.style?.iconPath} />\n                </div>}\n              <div className="flex-1">\n                <div className="font-medium">{item.source.data?.label}</div>\n              </div>\n            </div>}\n          {item.target && <div className="flex gap-2 items-center">\n              {(item.target.data?.avatar || item.target.style?.iconPath) && <div className="rounded-full text-lg p-1 leading-none overflow-hidden text-white" style={{\n            backgroundColor: item.target.style?.color\n          }}>\n                  <AxIcon icon={item.target.data?.avatar ?? item.target.style?.iconPath} />\n                </div>}\n              <div className="flex-1">\n                <div className="font-medium">{item.target.data?.label}</div>\n              </div>\n            </div>}\n        </div>;\n    }\n  }\n}',...Example.parameters?.docs?.source}}};const __namedExportsOrder=["Example"]}}]);
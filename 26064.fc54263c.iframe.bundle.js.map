{"version":3,"file":"26064.fc54263c.iframe.bundle.js","mappings":";;AAMA;;AAEA;;;ACDA;;AAEA;;ACHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;;;;ACxDA;;AAEA;;ACJA;;;;AAIA;;;;;AAKA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;ACrBA;;AAEA;;AAEA;;ACLA;;AAEA;;ACFA;;;;;AAKA;;;AAGA;ACTA;;;ACEA;;AAEA;;AAEA;;;;;;;;;ACEA;;;;AAIA;;;;;;AAMA;;AAEA;;AAEA;;;;;;;AChBA;;ACLA;;AAEA;;;ACDA;AACA;;AAEA;;;;;;;;;;AAUA;;;;;;;;ACRA;;AAEA;;;;;;;ACHA;;;;;;;;;ACEA;;;ACNA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;AAKA;;;AC3CA;ACFA;;;AAGA;AACA;;;AAGA;;;ACLA;;;AAGA;;;;;;;AAOA;;;;;ACRA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;AAQA;;AAEA;;;;;;;AAOA;;;;;;;;;;;AAWA;AACA;;AAEA;;;;;;AAMA;;;AAGA;;;;;;;;;;;;AAYA;;ACrFA;;;;AAIA;;AAEA;;;;;AAKA;;;;;;AAMA;;AAEA;;AAEA;;AAEA;;;;AAIA;;;AC1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqCA;;;;;ACnCA;;;;;;;AAOA;;;;;;;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;;;AAGA;AACA;;AC1CA;;;;;;;;;;;;;;;;;;ACgBA;;;;;;;;;;;ACPA;;;;;AAKA;;;;;;;;;;;;;;;;;;;;ACIA;;;;;;;;;;;;;;;;;;;;ACAA;;AClBA;;;;;;AAMA;;AAEA;;;;;AAKA;;AAEA;;AAEA","sources":["webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/ObjectAndLayerIdColor.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexPosition.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/TextureAtlasLookup.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VertexTextureCoordinates.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/AnalyticalSkyModel.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PiUtils.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/DoublePrecision.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloat16Encoding.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js","webpack://axux/./node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as e}from\"./ShaderOutput.js\";import{VertexPosition as r}from\"./attributes/VertexPosition.glsl.js\";import{Float2PassUniform as a}from\"../shaderModules/Float2PassUniform.js\";import{glsl as o}from\"../shaderModules/interfaces.js\";function t(e){e.varyings.add(\"linearDepth\",\"float\")}function i(e){e.vertex.uniforms.add(new a(\"nearFar\",((e,r)=>r.camera.nearFar)))}function n(e){e.vertex.code.add(o`float calculateLinearDepth(vec2 nearFar,float z) {\nreturn (-z - nearFar[0]) / (nearFar[1] - nearFar[0]);\n}`)}function d(a,d){const{vertex:s}=a;switch(d.output){case e.Color:if(d.receiveShadows)return t(a),void s.code.add(o`void forwardLinearDepth() { linearDepth = gl_Position.w; }`);break;case e.Depth:case e.Shadow:case e.ShadowHighlight:case e.ShadowExcludeHighlight:return a.include(r,d),t(a),i(a),n(a),void s.code.add(o`void forwardLinearDepth() {\nlinearDepth = calculateLinearDepth(nearFar, vPosition_view.z);\n}`)}s.code.add(o`void forwardLinearDepth() {}`)}export{d as ForwardLinearDepth,n as addCalculateLinearDepth,t as addLinearDepth,i as addNearFar};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as i}from\"../shaderModules/interfaces.js\";import{VertexAttribute as e}from\"../../lib/VertexAttribute.js\";function o(o,t=!0){o.attributes.add(e.POSITION,\"vec2\"),t&&o.varyings.add(\"uv\",\"vec2\"),o.vertex.code.add(i`\n    void main(void) {\n      gl_Position = vec4(position, 0.0, 1.0);\n      ${t?i`uv = position * 0.5 + vec2(0.5);`:\"\"}\n    }\n  `)}export{o as ScreenSpacePass};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{w as e}from\"../../../../../chunks/mat4.js\";import{a as s}from\"../../../../../chunks/mat4f64.js\";import{e as i,g as a,f as l,s as c}from\"../../../../../chunks/vec3.js\";import{Z as o,c as r}from\"../../../../../chunks/vec3f64.js\";import{Float3DrawUniform as t}from\"../shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as n}from\"../shaderModules/Float3PassUniform.js\";import{NoParameters as f,glsl as d}from\"../shaderModules/interfaces.js\";class u extends f{constructor(e){super(),this.slicePlaneLocalOrigin=e}}function _(e,s){h(e,s,new n(\"slicePlaneOrigin\",((e,i)=>g(s,e,i))),new n(\"slicePlaneBasis1\",((e,i)=>I(s,e,i,i.slicePlane?.basis1))),new n(\"slicePlaneBasis2\",((e,i)=>I(s,e,i,i.slicePlane?.basis2))))}function P(e,s){h(e,s,new t(\"slicePlaneOrigin\",((e,i)=>g(s,e,i))),new t(\"slicePlaneBasis1\",((e,i)=>I(s,e,i,i.slicePlane?.basis1))),new t(\"slicePlaneBasis2\",((e,i)=>I(s,e,i,i.slicePlane?.basis2))))}function h(e,s,...i){if(!s.hasSlicePlane){const i=d`#define rejectBySlice(_pos_) false\n#define discardBySlice(_pos_) {}\n#define highlightSlice(_color_, _pos_) (_color_)`;return s.hasSliceInVertexProgram&&e.vertex.code.add(i),void e.fragment.code.add(i)}s.hasSliceInVertexProgram&&e.vertex.uniforms.add(...i),e.fragment.uniforms.add(...i);const a=d`struct SliceFactors {\nfloat front;\nfloat side0;\nfloat side1;\nfloat side2;\nfloat side3;\n};\nSliceFactors calculateSliceFactors(vec3 pos) {\nvec3 rel = pos - slicePlaneOrigin;\nvec3 slicePlaneNormal = -cross(slicePlaneBasis1, slicePlaneBasis2);\nfloat slicePlaneW = -dot(slicePlaneNormal, slicePlaneOrigin);\nfloat basis1Len2 = dot(slicePlaneBasis1, slicePlaneBasis1);\nfloat basis2Len2 = dot(slicePlaneBasis2, slicePlaneBasis2);\nfloat basis1Dot = dot(slicePlaneBasis1, rel);\nfloat basis2Dot = dot(slicePlaneBasis2, rel);\nreturn SliceFactors(\ndot(slicePlaneNormal, pos) + slicePlaneW,\n-basis1Dot - basis1Len2,\nbasis1Dot - basis1Len2,\n-basis2Dot - basis2Len2,\nbasis2Dot - basis2Len2\n);\n}\nbool sliceByFactors(SliceFactors factors) {\nreturn factors.front < 0.0\n&& factors.side0 < 0.0\n&& factors.side1 < 0.0\n&& factors.side2 < 0.0\n&& factors.side3 < 0.0;\n}\nbool sliceEnabled() {\nreturn dot(slicePlaneBasis1, slicePlaneBasis1) != 0.0;\n}\nbool sliceByPlane(vec3 pos) {\nreturn sliceEnabled() && sliceByFactors(calculateSliceFactors(pos));\n}\n#define rejectBySlice(_pos_) sliceByPlane(_pos_)\n#define discardBySlice(_pos_) { if (sliceByPlane(_pos_)) discard; }`,l=d`vec4 applySliceHighlight(vec4 color, vec3 pos) {\nSliceFactors factors = calculateSliceFactors(pos);\nconst float HIGHLIGHT_WIDTH = 1.0;\nconst vec4 HIGHLIGHT_COLOR = vec4(0.0, 0.0, 0.0, 0.3);\nfactors.front /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.front);\nfactors.side0 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side0);\nfactors.side1 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side1);\nfactors.side2 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side2);\nfactors.side3 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side3);\nif (sliceByFactors(factors)) {\nreturn color;\n}\nfloat highlightFactor = (1.0 - step(0.5, factors.front))\n* (1.0 - step(0.5, factors.side0))\n* (1.0 - step(0.5, factors.side1))\n* (1.0 - step(0.5, factors.side2))\n* (1.0 - step(0.5, factors.side3));\nreturn mix(color, vec4(HIGHLIGHT_COLOR.rgb, color.a), highlightFactor * HIGHLIGHT_COLOR.a);\n}`,c=s.hasSliceHighlight?d`\n        ${l}\n        #define highlightSlice(_color_, _pos_) (sliceEnabled() ? applySliceHighlight(_color_, _pos_) : (_color_))\n      `:d`#define highlightSlice(_color_, _pos_) (_color_)`;s.hasSliceInVertexProgram&&e.vertex.code.add(a),e.fragment.code.add(a),e.fragment.code.add(c)}function p(e,s,i){return e.instancedDoublePrecision?c(b,i.camera.viewInverseTransposeMatrix[3],i.camera.viewInverseTransposeMatrix[7],i.camera.viewInverseTransposeMatrix[11]):s.slicePlaneLocalOrigin}function m(e,s){return null!=e?l(v,s.origin,e):s.origin}function H(s,i,a){return s.hasSliceTranslatedView?null!=i?e(S,a.camera.viewMatrix,i):a.camera.viewMatrix:null}function g(e,s,a){if(null==a.slicePlane)return o;const l=p(e,s,a),c=m(l,a.slicePlane),r=H(e,l,a);return null!=r?i(v,c,r):c}function I(e,s,c,r){if(null==r||null==c.slicePlane)return o;const t=p(e,s,c),n=m(t,c.slicePlane),f=H(e,t,c);return null!=f?(a(B,r,n),i(v,n,f),i(B,B,f),l(B,B,v)):r}const b=r(),v=r(),B=r(),S=s();export{P as SliceDraw,_ as SlicePass,u as SlicePlaneParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{addCalculateLinearDepth as e}from\"./ForwardLinearDepth.glsl.js\";import{glsl as r}from\"../shaderModules/interfaces.js\";function o(o){e(o),o.vertex.code.add(r`vec4 transformPositionWithDepth(mat4 proj, mat4 view, vec3 pos, vec2 nearFar, out float depth) {\nvec4 eye = view * vec4(pos, 1.0);\ndepth = calculateLinearDepth(nearFar,eye.z);\nreturn proj * eye;\n}`),o.vertex.code.add(r`vec4 transformPosition(mat4 proj, mat4 view, vec3 pos) {\nreturn proj * (view * vec4(pos, 1.0));\n}`)}export{o as Transform};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../../../chunks/tslib.es6.js\";import{n as o}from\"../../../../../../chunks/mat3.js\";import{a as r}from\"../../../../../../chunks/mat3f64.js\";import{I as n}from\"../../../../../../chunks/mat4f64.js\";import{s as a}from\"../../../../../../chunks/vec3.js\";import{c as i}from\"../../../../../../chunks/vec3f64.js\";import{ShaderOutput as t}from\"../ShaderOutput.js\";import{DoublePrecision as s}from\"../util/DoublePrecision.glsl.js\";import{addViewNormal as m}from\"../util/View.glsl.js\";import{Float3DrawUniform as l}from\"../../shaderModules/Float3DrawUniform.js\";import{NoParameters as c,glsl as d}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as u}from\"../../shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as p}from\"../../shaderModules/Matrix4PassUniform.js\";import{ShaderTechniqueConfiguration as v,parameter as f}from\"../../shaderTechnique/ShaderTechniqueConfiguration.js\";import{VertexAttribute as M}from\"../../../lib/VertexAttribute.js\";import{encodeDoubleHi as g,encodeDoubleLo as x}from\"../../../../../webgl/doublePrecisionUtils.js\";class h extends v{constructor(){super(...arguments),this.instancedDoublePrecision=!1,this.hasModelTransformation=!1}}e([f()],h.prototype,\"instancedDoublePrecision\",void 0),e([f()],h.prototype,\"hasModelTransformation\",void 0);class O extends c{constructor(){super(...arguments),this.modelTransformation=null}}const w=r();function N(e,r){const i=r.hasModelTransformation,c=r.instancedDoublePrecision;i&&(e.vertex.uniforms.add(new p(\"model\",(e=>e.modelTransformation??n))),e.vertex.uniforms.add(new u(\"normalLocalOriginFromModel\",(e=>(o(w,e.modelTransformation??n),w))))),r.instanced&&c&&(e.attributes.add(M.INSTANCEMODELORIGINHI,\"vec3\"),e.attributes.add(M.INSTANCEMODELORIGINLO,\"vec3\"),e.attributes.add(M.INSTANCEMODEL,\"mat3\"),e.attributes.add(M.INSTANCEMODELNORMAL,\"mat3\"));const v=e.vertex;c&&(v.include(s,r),v.uniforms.add(new l(\"viewOriginHi\",((e,o)=>g(a(T,o.camera.viewInverseTransposeMatrix[3],o.camera.viewInverseTransposeMatrix[7],o.camera.viewInverseTransposeMatrix[11]),T))),new l(\"viewOriginLo\",((e,o)=>x(a(T,o.camera.viewInverseTransposeMatrix[3],o.camera.viewInverseTransposeMatrix[7],o.camera.viewInverseTransposeMatrix[11]),T))))),v.code.add(d`\n    vec3 getVertexInLocalOriginSpace() {\n      return ${i?c?\"(model * vec4(instanceModel * localPosition().xyz, 1.0)).xyz\":\"(model * localPosition()).xyz\":c?\"instanceModel * localPosition().xyz\":\"localPosition().xyz\"};\n    }\n\n    vec3 subtractOrigin(vec3 _pos) {\n      ${c?d`\n          // Negated inputs are intentionally the first two arguments. The other way around the obfuscation in dpAdd() stopped\n          // working for macOS 14+ and iOS 17+.\n          // Issue: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/56280\n          vec3 originDelta = dpAdd(-instanceModelOriginHi, -instanceModelOriginLo, viewOriginHi, viewOriginLo);\n          return _pos - originDelta;`:\"return vpos;\"}\n    }\n    `),v.code.add(d`\n    vec3 dpNormal(vec4 _normal) {\n      return normalize(${i?c?\"normalLocalOriginFromModel * (instanceModelNormal * _normal.xyz)\":\"normalLocalOriginFromModel * _normal.xyz\":c?\"instanceModelNormal * _normal.xyz\":\"_normal.xyz\"});\n    }\n    `),r.output===t.Normal&&(m(v),v.code.add(d`\n    vec3 dpNormalView(vec4 _normal) {\n      return normalize((viewNormal * ${i?c?\"vec4(normalLocalOriginFromModel * (instanceModelNormal * _normal.xyz), 1.0)\":\"vec4(normalLocalOriginFromModel * _normal.xyz, 1.0)\":c?\"vec4(instanceModelNormal * _normal.xyz, 1.0)\":\"_normal\"}).xyz);\n    }\n    `)),r.hasVertexTangents&&v.code.add(d`\n    vec4 dpTransformVertexTangent(vec4 _tangent) {\n      ${i?c?\"return vec4(normalLocalOriginFromModel * (instanceModelNormal * _tangent.xyz), _tangent.w);\":\"return vec4(normalLocalOriginFromModel * _tangent.xyz, _tangent.w);\":c?\"return vec4(instanceModelNormal * _tangent.xyz, _tangent.w);\":\"return _tangent;\"}\n    }`)}const T=i();export{h as InstancedDoubleConfiguration,O as InstancedDoublePassParameters,N as InstancedDoublePrecision};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as o}from\"../../../lib/VertexAttribute.js\";function t(t,s){switch(s.normalType){case a.Compressed:t.attributes.add(o.NORMALCOMPRESSED,\"vec2\"),t.vertex.code.add(r`vec3 normalModel() {\nfloat z = 1.0 - abs(normalCompressed.x) - abs(normalCompressed.y);\nreturn vec3(normalCompressed + sign(normalCompressed) * min(z, 0.0), z);\n}`);break;case a.Attribute:t.attributes.add(o.NORMAL,\"vec3\"),t.vertex.code.add(r`vec3 normalModel() {\nreturn normal;\n}`);break;case a.ScreenDerivative:t.fragment.code.add(r`vec3 screenDerivativeNormal(vec3 positionView) {\nreturn normalize(cross(dFdx(positionView), dFdy(positionView)));\n}`);break;default:e(s.normalType);case a.COUNT:case a.Ground:}}var a;!function(e){e[e.Attribute=0]=\"Attribute\",e[e.Compressed=1]=\"Compressed\",e[e.Ground=2]=\"Ground\",e[e.ScreenDerivative=3]=\"ScreenDerivative\",e[e.COUNT=4]=\"COUNT\"}(a||(a={}));export{t as NormalAttribute,a as NormalType};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as o}from\"../ShaderOutput.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as e}from\"../../../lib/VertexAttribute.js\";function d(d,t){const a=t.output===o.ObjectAndLayerIdColor,n=t.objectAndLayerIdColorInstanced;a&&(d.varyings.add(\"objectAndLayerIdColorVarying\",\"vec4\"),n?d.attributes.add(e.INSTANCEOBJECTANDLAYERIDCOLOR,\"vec4\"):d.attributes.add(e.OBJECTANDLAYERIDCOLOR,\"vec4\")),d.vertex.code.add(r`\n     void forwardObjectAndLayerIdColor() {\n      ${a?n?r`objectAndLayerIdColorVarying = instanceObjectAndLayerIdColor * 0.003921568627451;`:r`objectAndLayerIdColorVarying = objectAndLayerIdColor * 0.003921568627451;`:r``} }`),d.fragment.code.add(r`\n      void outputObjectAndLayerIdColor() {\n        ${a?r`fragColor = objectAndLayerIdColorVarying;`:r``} }`)}export{d as ObjectAndLayerIdColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as t}from\"../../../lib/VertexAttribute.js\";var d;function o(o,v){switch(v.textureCoordinateType){case d.Default:return o.attributes.add(t.UV0,\"vec2\"),o.varyings.add(\"vuv0\",\"vec2\"),void o.vertex.code.add(r`void forwardTextureCoordinates() {\nvuv0 = uv0;\n}`);case d.Compressed:return o.attributes.add(t.UV0,\"vec2\"),o.varyings.add(\"vuv0\",\"vec2\"),void o.vertex.code.add(r`vec2 getUV0() {\nreturn uv0 / 16384.0;\n}\nvoid forwardTextureCoordinates() {\nvuv0 = getUV0();\n}`);case d.Atlas:return o.attributes.add(t.UV0,\"vec2\"),o.varyings.add(\"vuv0\",\"vec2\"),o.attributes.add(t.UVREGION,\"vec4\"),o.varyings.add(\"vuvRegion\",\"vec4\"),void o.vertex.code.add(r`void forwardTextureCoordinates() {\nvuv0 = uv0;\nvuvRegion = uvRegion;\n}`);default:e(v.textureCoordinateType);case d.None:return void o.vertex.code.add(r`void forwardTextureCoordinates() {}`);case d.COUNT:return}}!function(e){e[e.None=0]=\"None\",e[e.Default=1]=\"Default\",e[e.Atlas=2]=\"Atlas\",e[e.Compressed=3]=\"Compressed\",e[e.COUNT=4]=\"COUNT\"}(d||(d={}));export{o as TextureCoordinateAttribute,d as TextureCoordinateAttributeType};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as r}from\"../../../lib/VertexAttribute.js\";function e(e,d){d.hasVertexColors?(e.attributes.add(r.COLOR,\"vec4\"),e.varyings.add(\"vColor\",\"vec4\"),e.vertex.code.add(o`void forwardVertexColor() { vColor = color; }`),e.vertex.code.add(o`void forwardNormalizedVertexColor() { vColor = color * 0.003921568627451; }`)):e.vertex.code.add(o`void forwardVertexColor() {}\nvoid forwardNormalizedVertexColor() {}`)}export{e as VertexColor};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{neverReached as r}from\"../../../../../../core/compilerUtils.js\";import{a as o}from\"../../../../../../chunks/mat3f64.js\";import{c as a}from\"../../../../../../chunks/vec4f64.js\";import{NormalType as e,NormalAttribute as l}from\"./NormalAttribute.glsl.js\";import{VertexPosition as m,VertexPositionPassParameters as s,VertexPositionDrawParameters as t}from\"./VertexPosition.glsl.js\";import{glsl as d}from\"../../shaderModules/interfaces.js\";import{Matrix3DrawUniform as i}from\"../../shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as n}from\"../../shaderModules/Matrix3PassUniform.js\";function c(o,a){switch(a.normalType){case e.Attribute:case e.Compressed:o.include(l,a),o.varyings.add(\"vNormalWorld\",\"vec3\"),o.varyings.add(\"vNormalView\",\"vec3\"),o.vertex.uniforms.add(new i(\"transformNormalGlobalFromModel\",(r=>r.transformNormalGlobalFromModel)),new n(\"transformNormalViewFromGlobal\",(r=>r.transformNormalViewFromGlobal))),o.vertex.code.add(d`void forwardNormal() {\nvNormalWorld = transformNormalGlobalFromModel * normalModel();\nvNormalView = transformNormalViewFromGlobal * vNormalWorld;\n}`);break;case e.Ground:o.include(m,a),o.varyings.add(\"vNormalWorld\",\"vec3\"),o.vertex.code.add(d`\n        void forwardNormal() {\n          vNormalWorld = ${a.spherical?d`normalize(vPositionWorldCameraRelative);`:d`vec3(0.0, 0.0, 1.0);`}\n        }\n        `);break;case e.ScreenDerivative:o.vertex.code.add(d`void forwardNormal() {}`);break;default:r(a.normalType);case e.COUNT:}}class f extends s{constructor(){super(...arguments),this.transformNormalViewFromGlobal=o()}}class v extends t{constructor(){super(...arguments),this.transformNormalGlobalFromModel=o(),this.toMapSpace=a()}}export{c as VertexNormal,v as VertexNormalDrawParameters,f as VertexNormalPassParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{a as r}from\"../../../../../../chunks/mat3f64.js\";import{a as o}from\"../../../../../../chunks/mat4f64.js\";import{c as e}from\"../../../../../../chunks/vec3f64.js\";import{PositionAttribute as a}from\"./PositionAttribute.glsl.js\";import{DoublePrecision as t}from\"../util/DoublePrecision.glsl.js\";import{Float3DrawUniform as i}from\"../../shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as s}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as m,NoParameters as d}from\"../../shaderModules/interfaces.js\";import{Matrix3DrawUniform as n}from\"../../shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as l}from\"../../shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as f}from\"../../shaderModules/Matrix4PassUniform.js\";function v(r,o){r.include(a);const e=r.vertex;e.include(t,o),r.varyings.add(\"vPositionWorldCameraRelative\",\"vec3\"),r.varyings.add(\"vPosition_view\",\"vec3\"),e.uniforms.add(new s(\"transformWorldFromViewTH\",(r=>r.transformWorldFromViewTH)),new s(\"transformWorldFromViewTL\",(r=>r.transformWorldFromViewTL)),new l(\"transformViewFromCameraRelativeRS\",(r=>r.transformViewFromCameraRelativeRS)),new f(\"transformProjFromView\",(r=>r.transformProjFromView)),new n(\"transformWorldFromModelRS\",(r=>r.transformWorldFromModelRS)),new i(\"transformWorldFromModelTH\",(r=>r.transformWorldFromModelTH)),new i(\"transformWorldFromModelTL\",(r=>r.transformWorldFromModelTL))),e.code.add(m`vec3 positionWorldCameraRelative() {\nvec3 rotatedModelPosition = transformWorldFromModelRS * positionModel();\nvec3 transform_CameraRelativeFromModel = dpAdd(\ntransformWorldFromModelTL,\ntransformWorldFromModelTH,\n-transformWorldFromViewTL,\n-transformWorldFromViewTH\n);\nreturn transform_CameraRelativeFromModel + rotatedModelPosition;\n}`),e.code.add(m`\n    void forwardPosition(float fOffset) {\n      vPositionWorldCameraRelative = positionWorldCameraRelative();\n      if (fOffset != 0.0) {\n        vPositionWorldCameraRelative += fOffset * ${o.spherical?m`normalize(transformWorldFromViewTL + vPositionWorldCameraRelative)`:m`vec3(0.0, 0.0, 1.0)`};\n      }\n\n      vPosition_view = transformViewFromCameraRelativeRS * vPositionWorldCameraRelative;\n      gl_Position = transformProjFromView * vec4(vPosition_view, 1.0);\n    }\n  `),r.fragment.uniforms.add(new s(\"transformWorldFromViewTL\",(r=>r.transformWorldFromViewTL))),e.code.add(m`vec3 positionWorld() {\nreturn transformWorldFromViewTL + vPositionWorldCameraRelative;\n}`),r.fragment.code.add(m`vec3 positionWorld() {\nreturn transformWorldFromViewTL + vPositionWorldCameraRelative;\n}`)}class F extends d{constructor(){super(...arguments),this.transformWorldFromViewTH=e(),this.transformWorldFromViewTL=e(),this.transformViewFromCameraRelativeRS=r(),this.transformProjFromView=o()}}class W extends d{constructor(){super(...arguments),this.transformWorldFromModelRS=r(),this.transformWorldFromModelTH=e(),this.transformWorldFromModelTL=e()}}export{v as VertexPosition,W as VertexPositionDrawParameters,F as VertexPositionPassParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as a}from\"../../shaderModules/interfaces.js\";function e(e){e.fragment.code.add(a`vec4 textureAtlasLookup(sampler2D tex, vec2 textureCoordinates, vec4 atlasRegion) {\nvec2 atlasScale = atlasRegion.zw - atlasRegion.xy;\nvec2 uvAtlas = fract(textureCoordinates) * atlasScale + atlasRegion.xy;\nfloat maxdUV = 0.125;\nvec2 dUVdx = clamp(dFdx(textureCoordinates), -maxdUV, maxdUV) * atlasScale;\nvec2 dUVdy = clamp(dFdy(textureCoordinates), -maxdUV, maxdUV) * atlasScale;\nreturn textureGrad(tex, uvAtlas, dUVdx, dUVdy);\n}`)}export{e as TextureAtlasLookup};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{TextureCoordinateAttribute as t,TextureCoordinateAttributeType as r}from\"./TextureCoordinateAttribute.glsl.js\";import{TextureAtlasLookup as o}from\"../util/TextureAtlasLookup.glsl.js\";import{glsl as u}from\"../../shaderModules/interfaces.js\";function s(s,a){switch(s.include(t,a),a.textureCoordinateType){case r.Default:case r.Compressed:return void s.fragment.code.add(u`vec4 textureLookup(sampler2D tex, vec2 uv) {\nreturn texture(tex, uv);\n}`);case r.Atlas:return s.include(o),void s.fragment.code.add(u`vec4 textureLookup(sampler2D tex, vec2 uv) {\nreturn textureAtlasLookup(tex, uv, vuvRegion);\n}`);default:e(a.textureCoordinateType);case r.None:case r.COUNT:return}}export{s as VertexTextureCoordinates};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{s as e}from\"../../../../../../chunks/vec4.js\";import{c as r}from\"../../../../../../chunks/vec4f64.js\";import{ScreenSizePerspective as t,addScreenSizePerspectiveAlignment as l}from\"../util/ScreenSizePerspective.glsl.js\";import{addCameraPosition as o}from\"../util/View.glsl.js\";import{Float4PassUniform as c}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";function a(e,r){const c=e.vertex;r.hasVerticalOffset?(f(c),r.hasScreenSizePerspective&&(e.include(t),l(c),o(e.vertex,r)),c.code.add(s`\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ${r.spherical?s`vec3 worldNormal = normalize(worldPos + localOrigin);`:s`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\n        ${r.hasScreenSizePerspective?s`\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);`:s`\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    `)):c.code.add(s`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`)}const i=r();function f(r){r.uniforms.add(new c(\"verticalOffset\",((r,t)=>{const{minWorldLength:l,maxWorldLength:o,screenLength:c}=r.verticalOffset,s=Math.tan(.5*t.camera.fovY)/(.5*t.camera.fullViewport[3]),a=t.camera.pixelRatio||1;return e(i,c*a,s,l,o)})))}export{a as VerticalOffset,f as addVerticalOffset};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as t}from\"../ShaderOutput.js\";import{Rgba4FloatEncoding as a}from\"../util/RgbaFloat16Encoding.glsl.js\";import{RgbaFloatEncoding as o}from\"../util/RgbaFloatEncoding.glsl.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";function l(l,r){switch(r.output){case t.Shadow:case t.ShadowHighlight:case t.ShadowExcludeHighlight:l.fragment.include(a),l.fragment.code.add(e`float _calculateFragDepth(const in float depth) {\nconst float SLOPE_SCALE = 2.0;\nconst float BIAS = 20.0 * .000015259;\nfloat m = max(abs(dFdx(depth)), abs(dFdy(depth)));\nreturn depth + SLOPE_SCALE * m + BIAS;\n}\nvoid outputDepth(float _linearDepth) {\nfragColor = floatToRgba4(_calculateFragDepth(_linearDepth));\n}`);break;case t.Depth:l.fragment.include(o),l.fragment.code.add(e`void outputDepth(float _linearDepth) {\nfragColor = float2rgba(_linearDepth);\n}`)}}export{l as OutputDepth};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../../chunks/vec4f64.js\";import{glsl as o}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as t}from\"../../shaderModules/Texture2DPassUniform.js\";const d=e(1,1,0,1),r=e(1,0,1,1);function a(e){e.fragment.uniforms.add(new t(\"depthTexture\",((e,o)=>o.mainDepth))),e.fragment.constants.add(\"occludedHighlightFlag\",\"vec4\",d).add(\"unoccludedHighlightFlag\",\"vec4\",r),e.fragment.code.add(o`void outputHighlight() {\nfloat sceneDepth = float(texelFetch(depthTexture, ivec2(gl_FragCoord.xy), 0).x);\nif (gl_FragCoord.z > sceneDepth + 5e-7) {\nfragColor = occludedHighlightFlag;\n} else {\nfragColor = unoccludedHighlightFlag;\n}\n}`)}export{a as OutputHighlight,d as occludedHighlightFlag,r as unoccludedHighlightFlag};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as e}from\"../util/RgbaFloatEncoding.glsl.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function a(a){a.include(e),a.code.add(r`float linearDepthFromFloat(float depth, vec2 nearFar) {\nreturn -(depth * (nearFar[1] - nearFar[0]) + nearFar[0]);\n}\nfloat linearDepthFromRGBA(vec4 depth, vec2 nearFar) {\nreturn linearDepthFromFloat(rgba2float(depth), nearFar);\n}\nfloat linearDepthFromTexture(sampler2D depthTex, vec2 uv, vec2 nearFar) {\nivec2 iuv = ivec2(uv * vec2(textureSize(depthTex, 0)));\nreturn linearDepthFromRGBA(texelFetch(depthTex, iuv, 0), nearFar);\n}`)}export{a as ReadLinearDepth};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{s as i}from\"../../../../../../chunks/vec3.js\";import{c as n}from\"../../../../../../chunks/vec3f64.js\";import{s as t}from\"../../../../../../chunks/vec4.js\";import{c as g}from\"../../../../../../chunks/vec4f64.js\";import{PBRMode as h}from\"./PhysicallyBasedRenderingParameters.glsl.js\";import{Float3PassUniform as e}from\"../../shaderModules/Float3PassUniform.js\";import{Float4PassUniform as l}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as s}from\"../../shaderModules/interfaces.js\";function m(n,g){const m=n.fragment,o=void 0!==g.lightingSphericalHarmonicsOrder?g.lightingSphericalHarmonicsOrder:2;0===o?(m.uniforms.add(new e(\"lightingAmbientSH0\",((n,t)=>i(a,t.lighting.sh.r[0],t.lighting.sh.g[0],t.lighting.sh.b[0])))),m.code.add(s`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {\nvec3 ambientLight = 0.282095 * lightingAmbientSH0;\nreturn ambientLight * (1.0 - ambientOcclusion);\n}`)):1===o?(m.uniforms.add(new l(\"lightingAmbientSH_R\",((i,n)=>t(r,n.lighting.sh.r[0],n.lighting.sh.r[1],n.lighting.sh.r[2],n.lighting.sh.r[3]))),new l(\"lightingAmbientSH_G\",((i,n)=>t(r,n.lighting.sh.g[0],n.lighting.sh.g[1],n.lighting.sh.g[2],n.lighting.sh.g[3]))),new l(\"lightingAmbientSH_B\",((i,n)=>t(r,n.lighting.sh.b[0],n.lighting.sh.b[1],n.lighting.sh.b[2],n.lighting.sh.b[3])))),m.code.add(s`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {\nvec4 sh0 = vec4(\n0.282095,\n0.488603 * normal.x,\n0.488603 * normal.z,\n0.488603 * normal.y\n);\nvec3 ambientLight = vec3(\ndot(lightingAmbientSH_R, sh0),\ndot(lightingAmbientSH_G, sh0),\ndot(lightingAmbientSH_B, sh0)\n);\nreturn ambientLight * (1.0 - ambientOcclusion);\n}`)):2===o&&(m.uniforms.add(new e(\"lightingAmbientSH0\",((n,t)=>i(a,t.lighting.sh.r[0],t.lighting.sh.g[0],t.lighting.sh.b[0]))),new l(\"lightingAmbientSH_R1\",((i,n)=>t(r,n.lighting.sh.r[1],n.lighting.sh.r[2],n.lighting.sh.r[3],n.lighting.sh.r[4]))),new l(\"lightingAmbientSH_G1\",((i,n)=>t(r,n.lighting.sh.g[1],n.lighting.sh.g[2],n.lighting.sh.g[3],n.lighting.sh.g[4]))),new l(\"lightingAmbientSH_B1\",((i,n)=>t(r,n.lighting.sh.b[1],n.lighting.sh.b[2],n.lighting.sh.b[3],n.lighting.sh.b[4]))),new l(\"lightingAmbientSH_R2\",((i,n)=>t(r,n.lighting.sh.r[5],n.lighting.sh.r[6],n.lighting.sh.r[7],n.lighting.sh.r[8]))),new l(\"lightingAmbientSH_G2\",((i,n)=>t(r,n.lighting.sh.g[5],n.lighting.sh.g[6],n.lighting.sh.g[7],n.lighting.sh.g[8]))),new l(\"lightingAmbientSH_B2\",((i,n)=>t(r,n.lighting.sh.b[5],n.lighting.sh.b[6],n.lighting.sh.b[7],n.lighting.sh.b[8])))),m.code.add(s`vec3 calculateAmbientIrradiance(vec3 normal, float ambientOcclusion) {\nvec3 ambientLight = 0.282095 * lightingAmbientSH0;\nvec4 sh1 = vec4(\n0.488603 * normal.x,\n0.488603 * normal.z,\n0.488603 * normal.y,\n1.092548 * normal.x * normal.y\n);\nvec4 sh2 = vec4(\n1.092548 * normal.y * normal.z,\n0.315392 * (3.0 * normal.z * normal.z - 1.0),\n1.092548 * normal.x * normal.z,\n0.546274 * (normal.x * normal.x - normal.y * normal.y)\n);\nambientLight += vec3(\ndot(lightingAmbientSH_R1, sh1),\ndot(lightingAmbientSH_G1, sh1),\ndot(lightingAmbientSH_B1, sh1)\n);\nambientLight += vec3(\ndot(lightingAmbientSH_R2, sh2),\ndot(lightingAmbientSH_G2, sh2),\ndot(lightingAmbientSH_B2, sh2)\n);\nreturn ambientLight * (1.0 - ambientOcclusion);\n}`),g.pbrMode!==h.Normal&&g.pbrMode!==h.Schematic||m.code.add(s`const vec3 skyTransmittance = vec3(0.9, 0.9, 1.0);\nvec3 calculateAmbientRadiance(float ambientOcclusion)\n{\nvec3 ambientLight = 1.2 * (0.282095 * lightingAmbientSH0) - 0.2;\nreturn ambientLight *= (1.0 - ambientOcclusion) * skyTransmittance;\n}`))}const a=n(),r=g();export{m as EvaluateAmbientLighting};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{Float3PassUniform as i}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as n}from\"../../shaderModules/interfaces.js\";function t(n){n.uniforms.add(new i(\"mainLightDirection\",((i,n)=>n.lighting.mainLight.direction)))}function a(n){n.uniforms.add(new i(\"mainLightIntensity\",((i,n)=>n.lighting.mainLight.intensity)))}function o(i){t(i.fragment),a(i.fragment),i.fragment.code.add(n`vec3 evaluateMainLighting(vec3 normal_global, float shadowing) {\nfloat dotVal = clamp(dot(normal_global, mainLightDirection), 0.0, 1.0);\nreturn mainLightIntensity * ((1.0 - shadowing) * dotVal);\n}`)}export{o as MainLighting,t as addMainLightDirection,a as addMainLightIntensity};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{ReadLinearDepth as e}from\"../output/ReadLinearDepth.glsl.js\";import{Float2PassUniform as r}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as t}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as a}from\"../../shaderModules/Texture2DPassUniform.js\";function o(o,n){if(!n.multipassEnabled)return;o.fragment.include(e),o.fragment.uniforms.add(new a(\"terrainDepthTexture\",((e,r)=>r.multipassTerrain.linearDepth?.colorTexture))),o.fragment.uniforms.add(new r(\"nearFar\",((e,r)=>r.camera.nearFar)));const s=n.occlusionPass;o.fragment.code.add(t`\n   ${s?\"bool\":\"void\"} terrainDepthTest(float fragmentDepth) {\n      vec4 data = texelFetch(terrainDepthTexture, ivec2(gl_FragCoord.xy), 0);\n      float linearDepth = linearDepthFromRGBA(data, nearFar);\n      ${s?t`return fragmentDepth < linearDepth && data != vec4(0.0, 0.0, 0.0, 1.0);`:t`\n          if(fragmentDepth ${n.cullAboveGround?\">\":\"<=\"} linearDepth){\n            discard;\n          }`}\n    }`)}class n{constructor(){this.cullAboveGround=!1}}export{n as MultipassTerrainUniforms,o as multipassTerrainTest};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function t(t){const a=t.fragment.code;a.add(e`vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG)\n{\nreturn ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;\n}`),a.add(e`float integratedRadiance(float cosTheta2, float roughness)\n{\nreturn (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);\n}`),a.add(e`vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness)\n{\nfloat cosTheta2 = 1.0 - RdotNG * RdotNG;\nfloat intRadTheta = integratedRadiance(cosTheta2, roughness);\nfloat ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;\nfloat sky = 2.0 - ground;\nreturn (ground * ambientGround + sky * ambientSky) * 0.5;\n}`)}export{t as AnalyticalSkyModel};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{AnalyticalSkyModel as e}from\"./AnalyticalSkyModel.glsl.js\";import{PBRMode as o}from\"./PhysicallyBasedRenderingParameters.glsl.js\";import{PiUtils as t}from\"./PiUtils.glsl.js\";import{glsl as a}from\"../../shaderModules/interfaces.js\";function n(n,r){const l=n.fragment.code;n.include(t),r.pbrMode!==o.Normal&&r.pbrMode!==o.Schematic&&r.pbrMode!==o.Terrain&&r.pbrMode!==o.TerrainWithWater||(l.add(a`float normalDistribution(float NdotH, float roughness)\n{\nfloat a = NdotH * roughness;\nfloat b = roughness / (1.0 - NdotH * NdotH + a * a);\nreturn b * b * INV_PI;\n}`),l.add(a`const vec4 c0 = vec4(-1.0, -0.0275, -0.572,  0.022);\nconst vec4 c1 = vec4( 1.0,  0.0425,  1.040, -0.040);\nconst vec2 c2 = vec2(-1.04, 1.04);\nvec2 prefilteredDFGAnalytical(float roughness, float NdotV) {\nvec4 r = roughness * c0 + c1;\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NdotV)) * r.x + r.y;\nreturn c2 * a004 + r.zw;\n}`)),r.pbrMode!==o.Normal&&r.pbrMode!==o.Schematic||(n.include(e),l.add(a`struct PBRShadingInfo\n{\nfloat NdotL;\nfloat NdotV;\nfloat NdotH;\nfloat VdotH;\nfloat LdotH;\nfloat NdotNG;\nfloat RdotNG;\nfloat NdotAmbDir;\nfloat NdotH_Horizon;\nvec3 skyRadianceToSurface;\nvec3 groundRadianceToSurface;\nvec3 skyIrradianceToSurface;\nvec3 groundIrradianceToSurface;\nfloat averageAmbientRadiance;\nfloat ssao;\nvec3 albedoLinear;\nvec3 f0;\nvec3 f90;\nvec3 diffuseColor;\nfloat metalness;\nfloat roughness;\n};`),l.add(a`vec3 evaluateEnvironmentIllumination(PBRShadingInfo inputs) {\nvec3 indirectDiffuse = evaluateDiffuseIlluminationHemisphere(inputs.groundIrradianceToSurface, inputs.skyIrradianceToSurface, inputs.NdotNG);\nvec3 indirectSpecular = evaluateSpecularIlluminationHemisphere(inputs.groundRadianceToSurface, inputs.skyRadianceToSurface, inputs.RdotNG, inputs.roughness);\nvec3 diffuseComponent = inputs.diffuseColor * indirectDiffuse * INV_PI;\nvec2 dfg = prefilteredDFGAnalytical(inputs.roughness, inputs.NdotV);\nvec3 specularColor = inputs.f0 * dfg.x + inputs.f90 * dfg.y;\nvec3 specularComponent = specularColor * indirectSpecular;\nreturn (diffuseComponent + specularComponent);\n}`),l.add(a`float gamutMapChanel(float x, vec2 p){\nreturn (x < p.x) ? mix(0.0, p.y, x/p.x) : mix(p.y, 1.0, (x - p.x) / (1.0 - p.x) );\n}`),l.add(a`vec3 blackLevelSoftCompression(vec3 inColor, PBRShadingInfo inputs){\nvec3 outColor;\nvec2 p = vec2(0.02 * (inputs.averageAmbientRadiance), 0.0075 * (inputs.averageAmbientRadiance));\noutColor.x = gamutMapChanel(inColor.x, p) ;\noutColor.y = gamutMapChanel(inColor.y, p) ;\noutColor.z = gamutMapChanel(inColor.z, p) ;\nreturn outColor;\n}`))}function r(e,o){const n=e.fragment.code;e.include(t),n.add(a`\n  struct PBRShadingWater\n  {\n      float NdotL;   // cos angle between normal and light direction\n      float NdotV;   // cos angle between normal and view direction\n      float NdotH;   // cos angle between normal and half vector\n      float VdotH;   // cos angle between view direction and half vector\n      float LdotH;   // cos angle between light direction and half vector\n      float VdotN;   // cos angle between view direction and normal vector\n  };\n\n  float dtrExponent = ${o.useCustomDTRExponentForWater?\"2.2\":\"2.0\"};\n  `),n.add(a`vec3 fresnelReflection(float angle, vec3 f0, float f90) {\nreturn f0 + (f90 - f0) * pow(1.0 - angle, 5.0);\n}`),n.add(a`float normalDistributionWater(float NdotH, float roughness)\n{\nfloat r2 = roughness * roughness;\nfloat NdotH2 = NdotH * NdotH;\nfloat denom = pow((NdotH2 * (r2 - 1.0) + 1.0), dtrExponent) * PI;\nreturn r2 / denom;\n}`),n.add(a`float geometricOcclusionKelemen(float LoH)\n{\nreturn 0.25 / (LoH * LoH);\n}`),n.add(a`vec3 brdfSpecularWater(in PBRShadingWater props, float roughness, vec3 F0, float F0Max)\n{\nvec3  F = fresnelReflection(props.VdotH, F0, F0Max);\nfloat dSun = normalDistributionWater(props.NdotH, roughness);\nfloat V = geometricOcclusionKelemen(props.LdotH);\nfloat diffusionSunHaze = mix(roughness + 0.045, roughness + 0.385, 1.0 - props.VdotH);\nfloat strengthSunHaze  = 1.2;\nfloat dSunHaze = normalDistributionWater(props.NdotH, diffusionSunHaze)*strengthSunHaze;\nreturn ((dSun + dSunHaze) * V) * F;\n}\nvec3 tonemapACES(const vec3 x) {\nreturn (x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14);\n}`)}export{n as PhysicallyBasedRendering,r as PhysicallyBasedRenderingWater};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{VertexTextureCoordinates as e}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{Float3DrawUniform as s}from\"../../shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as o}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";import{Texture2DDrawUniform as i}from\"../../shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as t}from\"../../shaderModules/Texture2DPassUniform.js\";import{BindType as a}from\"../../shaderTechnique/BindType.js\";import{GLTextureMaterialBindParameters as n}from\"../../../lib/GLTextureMaterial.js\";var c;!function(e){e[e.Disabled=0]=\"Disabled\",e[e.Normal=1]=\"Normal\",e[e.Schematic=2]=\"Schematic\",e[e.Water=3]=\"Water\",e[e.WaterOnIntegratedMesh=4]=\"WaterOnIntegratedMesh\",e[e.Terrain=5]=\"Terrain\",e[e.TerrainWithWater=6]=\"TerrainWithWater\",e[e.COUNT=7]=\"COUNT\"}(c||(c={}));class u extends n{}function l(n,u){const l=n.fragment,m=u.hasMetallicRoughnessTexture||u.hasEmissionTexture||u.hasOcclusionTexture;if(u.pbrMode===c.Normal&&m&&n.include(e,u),u.pbrMode!==c.Schematic)if(u.pbrMode!==c.Disabled){if(u.pbrMode===c.Normal){l.code.add(r`vec3 mrr;\nvec3 emission;\nfloat occlusion;`);const e=u.pbrTextureBindType;u.hasMetallicRoughnessTexture&&(l.uniforms.add(e===a.Pass?new t(\"texMetallicRoughness\",(e=>e.textureMetallicRoughness)):new i(\"texMetallicRoughness\",(e=>e.textureMetallicRoughness))),l.code.add(r`void applyMetallnessAndRoughness(vec2 uv) {\nvec3 metallicRoughness = textureLookup(texMetallicRoughness, uv).rgb;\nmrr[0] *= metallicRoughness.b;\nmrr[1] *= metallicRoughness.g;\n}`)),u.hasEmissionTexture&&(l.uniforms.add(e===a.Pass?new t(\"texEmission\",(e=>e.textureEmissive)):new i(\"texEmission\",(e=>e.textureEmissive))),l.code.add(r`void applyEmission(vec2 uv) {\nemission *= textureLookup(texEmission, uv).rgb;\n}`)),u.hasOcclusionTexture?(l.uniforms.add(e===a.Pass?new t(\"texOcclusion\",(e=>e.textureOcclusion)):new i(\"texOcclusion\",(e=>e.textureOcclusion))),l.code.add(r`void applyOcclusion(vec2 uv) {\nocclusion *= textureLookup(texOcclusion, uv).r;\n}\nfloat getBakedOcclusion() {\nreturn occlusion;\n}`)):l.code.add(r`float getBakedOcclusion() { return 1.0; }`),e===a.Pass?l.uniforms.add(new o(\"emissionFactor\",(e=>e.emissiveFactor)),new o(\"mrrFactors\",(e=>e.mrrFactors))):l.uniforms.add(new s(\"emissionFactor\",(e=>e.emissiveFactor)),new s(\"mrrFactors\",(e=>e.mrrFactors))),l.code.add(r`\n    void applyPBRFactors() {\n      mrr = mrrFactors;\n      emission = emissionFactor;\n      occlusion = 1.0;\n\n      ${u.hasMetallicRoughnessTexture?r`applyMetallnessAndRoughness(${u.hasMetallicRoughnessTextureTransform?r`metallicRoughnessUV`:\"vuv0\"});`:\"\"}\n\n      ${u.hasEmissionTexture?r`applyEmission(${u.hasEmissiveTextureTransform?r`emissiveUV`:\"vuv0\"});`:\"\"}\n\n      ${u.hasOcclusionTexture?r`applyOcclusion(${u.hasOcclusionTextureTransform?r`occlusionUV`:\"vuv0\"});`:\"\"}\n    }\n  `)}}else l.code.add(r`float getBakedOcclusion() { return 1.0; }`);else l.code.add(r`vec3 mrr = vec3(0.0, 0.6, 0.2);\nvec3 emission = vec3(0.0);\nfloat occlusion = 1.0;\nvoid applyPBRFactors() {}\nfloat getBakedOcclusion() { return 1.0; }`)}export{u as PBRBindParameters,c as PBRMode,l as PhysicallyBasedRenderingParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";function t(t){t.vertex.code.add(o`const float PI = 3.141592653589793;`),t.fragment.code.add(o`const float PI = 3.141592653589793;\nconst float LIGHT_NORMALIZATION = 1.0 / PI;\nconst float INV_PI = 0.3183098861837907;\nconst float HALF_PI = 1.570796326794897;`)}export{t as PiUtils};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{I as e}from\"../../../../../../chunks/mat4f64.js\";import{c as s}from\"../../../../../../chunks/vec3f64.js\";import{Rgba4FloatEncoding as a}from\"../util/RgbaFloat16Encoding.glsl.js\";import{Float4PassUniform as t}from\"../../shaderModules/Float4PassUniform.js\";import{IntegerPassUniform as o}from\"../../shaderModules/IntegerPassUniform.js\";import{NoParameters as i,glsl as r}from\"../../shaderModules/interfaces.js\";import{Matrix4sDrawUniform as d}from\"../../shaderModules/Matrix4sDrawUniform.js\";import{Matrix4sPassUniform as c}from\"../../shaderModules/Matrix4sPassUniform.js\";import{Texture2DPassUniform as p}from\"../../shaderModules/Texture2DPassUniform.js\";class n extends i{constructor(){super(...arguments),this.origin=s()}}class v extends n{}class l extends i{constructor(){super(...arguments),this.modelTransformation=e}}class h extends l{constructor(){super(...arguments),this.origin=s()}}function x(e,s){s.receiveShadows&&(e.fragment.uniforms.add(new c(\"shadowMapMatrix\",((e,s)=>s.shadowMap.getShadowMapMatrices(e.origin)),4)),u(e))}function m(e,s){s.receiveShadows&&(e.fragment.uniforms.add(new d(\"shadowMapMatrix\",((e,s)=>s.shadowMap.getShadowMapMatrices(e.origin)),4)),u(e))}function u(e){const s=e.fragment;s.include(a),s.uniforms.add(new p(\"shadowMapTex\",((e,s)=>s.shadowMap.depthTexture)),new o(\"numCascades\",((e,s)=>s.shadowMap.numCascades)),new t(\"cascadeDistances\",((e,s)=>s.shadowMap.cascadeDistances))),s.code.add(r`int chooseCascade(float depth, out mat4 mat) {\nvec4 distance = cascadeDistances;\nint i = depth < distance[1] ? 0 : depth < distance[2] ? 1 : depth < distance[3] ? 2 : 3;\nmat = i == 0 ? shadowMapMatrix[0] : i == 1 ? shadowMapMatrix[1] : i == 2 ? shadowMapMatrix[2] : shadowMapMatrix[3];\nreturn i;\n}\nvec3 lightSpacePosition(vec3 _vpos, mat4 mat) {\nvec4 lv = mat * vec4(_vpos, 1.0);\nlv.xy /= lv.w;\nreturn 0.5 * lv.xyz + vec3(0.5);\n}\nvec2 cascadeCoordinates(int i, ivec2 textureSize, vec3 lvpos) {\nfloat xScale = float(textureSize.y) / float(textureSize.x);\nreturn vec2((float(i) + lvpos.x) * xScale, lvpos.y);\n}\nfloat readShadowMapDepth(ivec2 uv, sampler2D _depthTex) {\nreturn rgba4ToFloat(texelFetch(_depthTex, uv, 0));\n}\nfloat posIsInShadow(ivec2 uv, vec3 lvpos, sampler2D _depthTex) {\nreturn readShadowMapDepth(uv, _depthTex) < lvpos.z ? 1.0 : 0.0;\n}\nfloat filterShadow(vec2 uv, vec3 lvpos, ivec2 texSize, sampler2D _depthTex) {\nvec2 st = fract(uv * vec2(texSize) + vec2(0.5));\nivec2 base = ivec2(uv * vec2(texSize) - vec2(0.5));\nfloat s00 = posIsInShadow(ivec2(base.x, base.y), lvpos, _depthTex);\nfloat s10 = posIsInShadow(ivec2(base.x + 1, base.y), lvpos, _depthTex);\nfloat s11 = posIsInShadow(ivec2(base.x + 1, base.y + 1), lvpos, _depthTex);\nfloat s01 = posIsInShadow(ivec2(base.x, base.y + 1), lvpos, _depthTex);\nreturn mix(mix(s00, s10, st.x), mix(s01, s11, st.x), st.y);\n}\nfloat readShadowMap(const in vec3 _vpos, float _linearDepth) {\nmat4 mat;\nint i = chooseCascade(_linearDepth, mat);\nif (i >= numCascades) { return 0.0; }\nvec3 lvpos = lightSpacePosition(_vpos, mat);\nif (lvpos.z >= 1.0) { return 0.0; }\nif (lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) { return 0.0; }\nivec2 size = textureSize(shadowMapTex, 0);\nvec2 uv = cascadeCoordinates(i, size, lvpos);\nreturn filterShadow(uv, lvpos, size, shadowMapTex);\n}`)}export{m as ReadShadowMapDraw,v as ReadShadowMapDrawParameters,l as ReadShadowMapParameters,x as ReadShadowMapPass,h as ReadShadowMapPassParameters};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{Float3PassUniform as e}from\"../../shaderModules/Float3PassUniform.js\";import{Float4sPassUniform as o}from\"../../shaderModules/Float4sPassUniform.js\";import{FloatsPassUniform as r}from\"../../shaderModules/FloatsPassUniform.js\";import{glsl as v}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as t}from\"../../shaderModules/Matrix3PassUniform.js\";import{VertexAttribute as a}from\"../../../lib/VertexAttribute.js\";import{vvColorNumber as i}from\"../../../materials/VisualVariablePassParameters.js\";function l(l,n){const{vertex:s,attributes:u}=l;n.hasVvInstancing&&(n.vvSize||n.vvColor)&&u.add(a.INSTANCEFEATUREATTRIBUTE,\"vec4\"),n.vvSize?(s.uniforms.add(new e(\"vvSizeMinSize\",(e=>e.vvSize.minSize))),s.uniforms.add(new e(\"vvSizeMaxSize\",(e=>e.vvSize.maxSize))),s.uniforms.add(new e(\"vvSizeOffset\",(e=>e.vvSize.offset))),s.uniforms.add(new e(\"vvSizeFactor\",(e=>e.vvSize.factor))),s.uniforms.add(new t(\"vvSymbolRotationMatrix\",(e=>e.vvSymbolRotationMatrix))),s.uniforms.add(new e(\"vvSymbolAnchor\",(e=>e.vvSymbolAnchor))),s.code.add(v`vec3 vvScale(vec4 _featureAttribute) {\nreturn clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize);\n}\nvec4 vvTransformPosition(vec3 position, vec4 _featureAttribute) {\nreturn vec4(vvSymbolRotationMatrix * ( vvScale(_featureAttribute) * (position + vvSymbolAnchor)), 1.0);\n}`),s.code.add(v`\n      const float eps = 1.192092896e-07;\n      vec4 vvTransformNormal(vec3 _normal, vec4 _featureAttribute) {\n        vec3 vvScale = clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize + eps, vvSizeMaxSize);\n        return vec4(vvSymbolRotationMatrix * _normal / vvScale, 1.0);\n      }\n\n      ${n.hasVvInstancing?v`\n      vec4 vvLocalNormal(vec3 _normal) {\n        return vvTransformNormal(_normal, instanceFeatureAttribute);\n      }\n\n      vec4 localPosition() {\n        return vvTransformPosition(position, instanceFeatureAttribute);\n      }`:\"\"}\n    `)):s.code.add(v`vec4 localPosition() { return vec4(position, 1.0); }\nvec4 vvLocalNormal(vec3 _normal) { return vec4(_normal, 1.0); }`),n.vvColor?(s.constants.add(\"vvColorNumber\",\"int\",i),s.uniforms.add(new r(\"vvColorValues\",(e=>e.vvColor.values),i),new o(\"vvColorColors\",(e=>e.vvColor.colors),i)),s.code.add(v`\n      vec4 interpolateVVColor(float value) {\n        if (value <= vvColorValues[0]) {\n          return vvColorColors[0];\n        }\n\n        for (int i = 1; i < vvColorNumber; ++i) {\n          if (vvColorValues[i] >= value) {\n            float f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);\n            return mix(vvColorColors[i-1], vvColorColors[i], f);\n          }\n        }\n        return vvColorColors[vvColorNumber - 1];\n      }\n\n      vec4 vvGetColor(vec4 featureAttribute) {\n        return interpolateVVColor(featureAttribute.y);\n      }\n\n      ${n.hasVvInstancing?v`\n            vec4 vvColor() {\n              return vvGetColor(instanceFeatureAttribute);\n            }`:\"vec4 vvColor() { return vec4(1.0); }\"}\n    `)):s.code.add(v`vec4 vvColor() { return vec4(1.0); }`)}export{l as VisualVariables};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{s as r}from\"../../../../../../chunks/vec2.js\";import{a as o}from\"../../../../../../chunks/vec2f64.js\";import{s as e}from\"../../../../../../chunks/vec4.js\";import{c as a}from\"../../../../../../chunks/vec4f64.js\";import{Float2PassUniform as t}from\"../../shaderModules/Float2PassUniform.js\";import{Float4PassUniform as s}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as c}from\"../../shaderModules/interfaces.js\";function n(r){r.fragment.uniforms.add(new s(\"projInfo\",((r,o)=>f(o)))),r.fragment.uniforms.add(new t(\"zScale\",((r,o)=>i(o)))),r.fragment.code.add(c`vec3 reconstructPosition(vec2 fragCoord, float depth) {\nreturn vec3((fragCoord * projInfo.xy + projInfo.zw) * (zScale.x * depth + zScale.y), depth);\n}`)}function f(r){const o=r.camera.projectionMatrix;return 0===o[11]?e(m,2/(r.camera.fullWidth*o[0]),2/(r.camera.fullHeight*o[5]),(1+o[12])/o[0],(1+o[13])/o[5]):e(m,-2/(r.camera.fullWidth*o[0]),-2/(r.camera.fullHeight*o[5]),(1-o[8])/o[0],(1-o[9])/o[5])}const m=a();function i(o){return 0===o.camera.projectionMatrix[11]?r(d,0,1):r(d,1,0)}const d=o();export{n as CameraSpace,f as getProjectionInfo,i as getZScale};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as c}from\"../../shaderModules/interfaces.js\";function e(e){e.code.add(c`vec4 premultiplyAlpha(vec4 v) {\nreturn vec4(v.rgb * v.a, v.a);\n}\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nfloat rgb2v(vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}`)}export{e as ColorConversion};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function c({code:c},i){i.doublePrecisionRequiresObfuscation?c.add(e`vec3 dpPlusFrc(vec3 a, vec3 b) {\nreturn mix(a, a + b, vec3(notEqual(b, vec3(0))));\n}\nvec3 dpMinusFrc(vec3 a, vec3 b) {\nreturn mix(vec3(0), a - b, vec3(notEqual(a, b)));\n}\nvec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\nvec3 t1 = dpPlusFrc(hiA, hiB);\nvec3 e = dpMinusFrc(t1, hiA);\nvec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\nreturn t1 + t2;\n}`):c.add(e`vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\nvec3 t1 = hiA + hiB;\nvec3 e = t1 - hiA;\nvec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\nreturn t1 + t2;\n}`)}export{c as DoublePrecision};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";function a(a){a.code.add(o`const float MAX_RGBA4_FLOAT =\n15.0 / 16.0 +\n15.0 / 16.0 / 16.0 +\n15.0 / 16.0 / 16.0 / 16.0 +\n15.0 / 16.0 / 16.0 / 16.0 / 16.0;\nconst vec4 FIXED_POINT_FACTORS_RGBA4 = vec4(1.0, 16.0, 16.0 * 16.0, 16.0 * 16.0 * 16.0);\nvec4 floatToRgba4(const float value) {\nfloat valueInValidDomain = clamp(value, 0.0, MAX_RGBA4_FLOAT);\nvec4 fixedPointU4 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS_RGBA4) * 16.0);\nconst float toU4AsFloat = 1.0 / 15.0;\nreturn fixedPointU4 * toU4AsFloat;\n}\nconst vec4 RGBA4_2_FLOAT_FACTORS = vec4(\n15.0 / (16.0),\n15.0 / (16.0 * 16.0),\n15.0 / (16.0 * 16.0 * 16.0),\n15.0 / (16.0 * 16.0 * 16.0 * 16.0)\n);\nfloat rgba4ToFloat(vec4 rgba) {\nreturn dot(rgba, RGBA4_2_FLOAT_FACTORS);\n}`)}export{a as Rgba4FloatEncoding};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{glsl as o}from\"../../shaderModules/interfaces.js\";function a(a){a.code.add(o`const float MAX_RGBA_FLOAT =\n255.0 / 256.0 +\n255.0 / 256.0 / 256.0 +\n255.0 / 256.0 / 256.0 / 256.0 +\n255.0 / 256.0 / 256.0 / 256.0 / 256.0;\nconst vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\nvec4 float2rgba(const float value) {\nfloat valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\nvec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\nconst float toU8AsFloat = 1.0 / 255.0;\nreturn fixedPointU8 * toU8AsFloat;\n}\nconst vec4 RGBA_2_FLOAT_FACTORS = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, RGBA_2_FLOAT_FACTORS);\n}`)}export{a as RgbaFloatEncoding};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{s as e}from\"../../../../../../chunks/vec3.js\";import{c as a}from\"../../../../../../chunks/vec3f64.js\";import{Float3PassUniform as r}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as c}from\"../../shaderModules/interfaces.js\";function s(e){e.vertex.code.add(c`float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {\nreturn absCosAngle * absCosAngle * absCosAngle;\n}`),e.vertex.code.add(c`vec3 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec3 params) {\nreturn vec3(\nmin(params.x / (distanceToCamera - params.y), 1.0),\nscreenSizePerspectiveViewAngleDependentFactor(absCosAngle),\nparams.z\n);\n}`),e.vertex.code.add(c`float applyScreenSizePerspectiveScaleFactorFloat(float size, vec3 factor) {\nreturn mix(size * clamp(factor.x, factor.z, 1.0), size, factor.y);\n}`),e.vertex.code.add(c`float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec3 params) {\nreturn applyScreenSizePerspectiveScaleFactorFloat(\nsize,\nscreenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)\n);\n}`),e.vertex.code.add(c`vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec3 factor) {\nreturn mix(size * clamp(factor.x, factor.z, 1.0), size, factor.y);\n}`),e.vertex.code.add(c`vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec3 params) {\nreturn applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));\n}`)}function t(e){e.uniforms.add(new r(\"screenSizePerspective\",(e=>i(e.screenSizePerspective))))}function o(e){e.uniforms.add(new r(\"screenSizePerspectiveAlignment\",(e=>i(e.screenSizePerspectiveAlignment||e.screenSizePerspective))))}function i(a){return e(n,a.parameters.divisor,a.parameters.offset,a.minScaleFactor)}const n=a();export{s as ScreenSizePerspective,t as addScreenSizePerspective,o as addScreenSizePerspectiveAlignment};\n"],"names":[],"sourceRoot":""}